{"version":3,"sources":["redux/constants/notebook.js","constants.js","util/Cookies.js","config/ui.js","components/Header/NavBar.jsx","redux/actions/ui.js","redux/constants/ui.js","components/Header/Header.jsx","components/Note/EditNote.jsx","components/Common/DialogWithCallback.jsx","components/Note/NoteBookCard.jsx","components/Conmentarium.jsx","components/Common/Loaders.jsx","containers/Home.jsx","config/index.js","App.jsx","redux/reducers/auth.js","redux/reducers/notebook.js","redux/reducers/ui.js","redux/reducers/index.js","redux/store.js","serviceWorker.js","index.jsx","redux/methods/index.js","redux/actions/notebook.js","services/note-api.js","util/methods.js","redux/actions/auth.js","services/auth-api.js","redux/constants/auth.js"],"names":["FETCH_NOTE","FETCH_NOTE_SUCCESS","FETCH_NOTE_FAILURE","REFETCH_NOTE","REFETCH_NOTE_SUCCESS","REFETCH_NOTE_FAILURE","FETCH_TRASHED_NOTES","FETCH_TRASHED_NOTES_SUCCESS","FETCH_TRASHED_NOTES_FAILURE","EMPTY_TRASH","DELETE_NOTE","DELETE_NOTE_SUCCESS","DELETE_NOTE_FAILURE","DELETE_TRASHED_NOTE","DELETE_TRASHED_NOTE_SUCCESS","DELETE_TRASHED_NOTE_FAILURE","RESTORE_TRASHED_NOTE","RESTORE_TRASHED_NOTE_SUCCESS","RESTORE_TRASHED_NOTE_FAILURE","noteColors","getCookie","name","cookieValue","document","cookie","cookies","split","i","length","trim","substring","decodeURIComponent","getTheme","theme","setThemeCookie","value","days","expires","date","Date","setTime","getTime","toUTCString","setCookie","darkModeOn","useStyles","makeStyles","grow","flexGrow","margin","spacing","appBar","zIndex","Toolbar","AppBarButtons","textTransform","title","fontSize","breakpoints","up","display","connect","state","ui","currentUser","auth","isAuthenticated","authenticated","dispatch","logout","toggleDarkMode","payload","type","props","classes","className","AppBar","position","variant","Typography","noWrap","Button","color","Switch","checked","onChange","e","target","icon","inputProps","onClick","Header","NavBar","root","width","shape","height","shapeCircle","borderRadius","colors","card","flexDirection","refetchNote","id","addNotification","data","level","note","handleToggleActions","useState","body","tags","noteUpdate","setNoteUpdate","isLoading","setIsLoading","handleSubmit","event","a","preventDefault","updateNoteService","response","message","request","statusText","notificationError","handleFieldChange","Circle","clsx","style","background","handleColorChange","Card","noValidate","autoComplete","TextField","label","multiline","rowsMax","Breadcrumbs","separator","map","CardActions","IconButton","disabled","DialogWithCallback","actionName","actionCallback","React","open","setOpen","handleClose","Dialog","onClose","disableBackdropClick","DialogTitle","DialogContent","DialogContentText","DialogActions","autoFocus","cardContent","notebook","trashedNotes","deleteNote","purgeNote","restoreTrashedNote","toggleDisplay","setToggleDisplay","toggleEdit","setToggleEdit","toggleDelete","setToggleDelete","action","Grid","item","key","xs","sm","md","CardContent","gutterBottom","component","truncate","Fragment","marginRight","cardGrid","paddingTop","paddingBottom","Conmentarium","loadNotes","container","Fade","in","icons","marginTop","CircularLoader","align","CircularProgress","size","thickness","disableShrink","csrftoken","csrftokenExists","SignIn","lazy","SignUp","AddNote","boxShadow","cardDetails","flex","cardMedia","minWidth","textDecoration","palette","secondary","main","divider","mapLazyComponents","getNotes","loadTrashedNotes","getTrashedNotes","emptyTrash","currentAuthOP","setCurrentAuthOP","displayAddNoteComponent","setDisplayAddNoteComponent","AuthComponent","useEffect","isLoaded","isError","Divider","Suspense","fallback","notes","Paper","paragraph","href","rel","aria-label","CardMedia","image","origin","window","location","axios","then","defaults","baseURL","headers","common","config","defaultPaletteColors","primary","light","dark","Tokens","csrf","exists","token","marginLeft","UINotificationsStyle","NotificationItem","DefaultStyle","notifications","loadUser","getCurrentUser","createMuiTheme","contrastThreshold","tonalOffset","typography","changeDocumentTitle","CssBaseline","INITIAL_STATE","user","fresh","userSubject","success","LOAD_CURRENT_USER","LOAD_CURRENT_USER_SUCCESS","LOAD_CURRENT_USER_FAILURE","RELOAD_USER_SUCCESS","USER_LOGIN","USER_LOGIN_SUCCESS","USER_LOGIN_FAILURE","USER_SIGNUP","USER_SIGNUP_SUCCESS","USER_SIGNUP_FAILURE","USER_LOGOUT","USER_LOGOUT_SUCCESS","USER_LOGOUT_FAILURE","count","concatArrayOfObjectsAndSortWithDateAsc","filterArrayWithId","note_id","INITIATE_AUTH_CLEANUP","app","rootReducer","combineReducers","composeEnhancer","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","logger","Boolean","hostname","match","rootElement","getElementById","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister","catch","error","console","array","itemId","filter","newArrayOfObjects","newArray","sort","b","date_updated","date_created","notificationTemplate","autoDismiss","renderArray","arr","el","ActionCreatorFactory","fetchNotesSuccess","fetchNotesError","fetchNotebookService","status","log","setNote","getState","refetchNotesError","fetchNoteService","removeNote","page","removeNoteError","deleteNoteService","fetchTrashedNotesError","fetchTrashedNotesService","emptyTrashService","purgeTrashedNoteError","purgeTrashedNoteService","restoreNoteError","restoreTrashedNoteService","get","createNoteService","formData","post","put","delete","what","undefined","loadUserError","userLoginError","userSignupError","userLogoutError","initiateAuthCleanup","userId","currentUserId","JSON","parse","localStorage","getItem","isNaN","parseInt","authenticate","login","notificationRemoveAll","setItem","stringify","errors","register","createUser","removeItem"],"mappings":"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","file":"static/js/main.ad26d460.chunk.js","sourcesContent":["export const SET_APP_THEME = 'SET_APP_THEME';\n\n\nexport const FETCH_NOTE = 'FETCH_NOTE';\nexport const FETCH_NOTE_SUCCESS = 'FETCH_NOTE_SUCCESS';\nexport const FETCH_NOTE_FAILURE = 'FETCH_NOTE_FAILURE';\n\nexport const REFETCH_NOTE = 'REFETCH_NOTE';\nexport const REFETCH_NOTE_SUCCESS = 'REFETCH_NOTE_SUCCESS';\nexport const REFETCH_NOTE_FAILURE = 'REFETCH_NOTE_FAILURE';\n\nexport const FETCH_PAGINATED_NOTES = 'FETCH_PAGINATED_NOTES';\nexport const FETCH_PAGINATED_NOTES_SUCCESS = 'FETCH_PAGINATED_NOTES_SUCCESS';\nexport const FETCH_PAGINATED_NOTES_FAILURE = 'FETCH_PAGINATED_NOTES_FAILURE';\n\nexport const FETCH_TRASHED_NOTES = 'FETCH_TRASHED_NOTES';\nexport const FETCH_TRASHED_NOTES_SUCCESS = 'FETCH_TRASHED_NOTES_SUCCESS';\nexport const FETCH_TRASHED_NOTES_FAILURE = 'FETCH_TRASHED_NOTES_FAILURE';\n\nexport const EMPTY_TRASH = 'EMPTY_TRASH';\n\nexport const DELETE_NOTE = 'DELETE_NOTE';\nexport const DELETE_NOTE_SUCCESS = 'DELETE_NOTE_SUCCESS';\nexport const DELETE_NOTE_FAILURE = 'DELETE_NOTE_FAILURE';\n\nexport const DELETE_TRASHED_NOTE = 'DELETE_TRASHED_NOTE';\nexport const DELETE_TRASHED_NOTE_SUCCESS = 'DELETE_NOTE_TRASHED_SUCCESS';\nexport const DELETE_TRASHED_NOTE_FAILURE = 'DELETE_NOTE_TRASHED_FAILURE';\n\nexport const RESTORE_TRASHED_NOTE = 'RESTORE_TRASHED_NOTE';\nexport const RESTORE_TRASHED_NOTE_SUCCESS = 'RESTORE_NOTE_TRASHED_SUCCESS';\nexport const RESTORE_TRASHED_NOTE_FAILURE = 'RESTORE_NOTE_TRASHED_FAILURE';\n\nexport const ACTIONS = {\n\tSET_APP_THEME,\n\tFETCH_NOTE,\n\tFETCH_NOTE_SUCCESS,\n\tFETCH_NOTE_FAILURE,\n\tFETCH_PAGINATED_NOTES,\n\tFETCH_PAGINATED_NOTES_SUCCESS,\n\tFETCH_PAGINATED_NOTES_FAILURE,\n\tDELETE_NOTE,\n\tDELETE_NOTE_SUCCESS,\n\tDELETE_NOTE_FAILURE,\n};","\nconst noteColors = [\n\t\"rgb(76 175 80 / 22%)\",\n\t\"rgb(156 39 176 / 33%)\",\n\t\"rgb(233 30 99 / 53%)\",\n\t\"rgb(0 150 136 / 35%)\",\n\t\"#ff572275\",\n\t\"rgb(33 150 243 / 34%)\",\n\t\"#ffeb3b4d\",\n  \"rgb(103 58 183 / 45%)\"\n];\n\nexport { noteColors };","export function getCookie(name) {\n    var cookieValue = null;\n    if (document.cookie && document.cookie !== '') {\n        var cookies = document.cookie.split(';');\n        for (var i = 0; i < cookies.length; i++) {\n            var cookie = cookies[i].trim();\n            // Does this cookie string begin with the name we want?\n            if (cookie.substring(0, name.length + 1) === (name + '=')) {\n                cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\n                break;\n            }\n        }\n    }\n    return cookieValue;\n}\n\nexport function setCookie(name, value, days) {\n    var expires = \"\";\n    if (days) {\n        var date = new Date();\n        date.setTime(date.getTime() + (days*24*60*60*1000));\n        expires = \"; expires=\" + date.toUTCString();\n    }\n    document.cookie = name + \"=\" + (value || \"\")  + expires + \"; path=/\";\n}\n\nexport function removeCookie(name) {\n    var expires = -1;\n    document.cookie = name + \"=\" + expires + \"; path=/\";\n}","import { getCookie, setCookie } from '../util/Cookies';\n\n\nconst getTheme = () => {\n\tconst theme = getCookie('AppTheme');\n\treturn theme ? theme : 'light';\n};\n\n\nconst setThemeCookie = theme => setCookie('AppTheme', theme, 30);\n\nconst darkModeOn = getTheme() === 'dark';\nconst theme = getTheme();\n\nexport { theme, setThemeCookie, darkModeOn };\n","import React from 'react';\nimport {makeStyles} from '@material-ui/core';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Switch from '@material-ui/core/Switch';\nimport Brightness4Icon from '@material-ui/icons/Brightness4';\nimport { connect } from 'react-redux';\nimport { logout } from '../../redux/actions/auth';\nimport { SetAppTheme } from '../../redux/actions/ui';\n\nconst useStyles = makeStyles((theme) => ({\n  grow: {\n    flexGrow: 1,\n    margin: theme.spacing(0),\n  },\n  appBar: {\n    zIndex: 200,\n  },\n  Toolbar: {\n    zIndex: 200,\n  },\n  AppBarButtons: {\n    textTransform: 'none',\n  },\n  title: {\n    fontSize: 15,\n    textTransform: 'none',\n    [theme.breakpoints.up('sm')]: {\n      display: 'block',\n    },\n  }\n}));\n\nfunction PrimaryAppBar(props) {\n\n  const { isAuthenticated, logout, toggleDarkMode, darkModeOn } = props;\n  const classes = useStyles();\n\n  const handleThemeChange = e => {\n    if(e.target.checked) toggleDarkMode({theme:'dark', darkModeOn:true});\n    else toggleDarkMode({theme:'light', darkModeOn:false});\n  }\n\n  return (\n    <div className={classes.grow}>\n      <AppBar position=\"fixed\" className={classes.appBar}>\n        <Toolbar variant=\"dense\" className={classes.Toolbar}>\n          <Typography variant=\"h4\" noWrap>\n              <Button \n                color=\"inherit\" \n                variant=\"text\"\n                className={classes.title}>\n                  Conmentarium\n              </Button>\n          </Typography>\n          <div className={classes.grow} />\n          <Switch\n            checked={darkModeOn}\n            color=\"secondary\"\n            onChange={handleThemeChange}\n            name=\"theme\"\n            icon={<Brightness4Icon />}\n            inputProps={{ 'aria-label': 'set them (default: light)' }}\n          />\n          {isAuthenticated &&\n            <div>\n              <Button\n                color=\"inherit\" \n                className={classes.AppBarButtons}\n                onClick={logout} >\n                Logout\n              </Button>\n            </div>\n          }\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    darkModeOn: state.ui.darkModeOn,\n    currentUser: state.auth.currentUser,\n    isAuthenticated: state.auth.currentUser.authenticated,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    logout: () => dispatch(logout()),\n    toggleDarkMode: payload => dispatch(SetAppTheme(payload)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PrimaryAppBar);","import { setThemeCookie } from '../../config/ui';\nimport { SET_APP_THEME } from '../constants/ui';\n\nexport function SetAppTheme(theme) {\n\tsetThemeCookie(theme.theme);\n\treturn {\n\t\ttype: SET_APP_THEME,\n\t\tpayload: theme\n\t}\n}\n","export const SET_APP_THEME = 'SET_APP_THEME';\n","import React from 'react';\nimport NavBar from './NavBar';\n\nexport default function Header () {\n  return (\n      <header>\n        <NavBar />\n      </header>\n    )\n}\n","import React, { useState } from 'react';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport TextField from '@material-ui/core/TextField';\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs';\n\nimport CardActions from '@material-ui/core/CardActions';\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\nimport EditIcon from '@material-ui/icons/Edit';\nimport IconButton from '@material-ui/core/IconButton';\nimport NoteIcon from '@material-ui/icons/Note';\nimport DoneIcon from '@material-ui/icons/Done';\nimport { updateNoteService } from '../../services/note-api';\n\nimport {connect} from 'react-redux';\nimport { error as notificationError } from 'react-notification-system-redux';\nimport { refetchNote } from '../../redux/actions/notebook';\nimport { noteColors } from '../../constants';\nimport PropTypes from 'prop-types';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    '& .MuiTextField-root': {\n      margin: theme.spacing(1),\n      width: '95% ',\n    },\n  },\n  shape: {\n    width: 30,\n    height: 30,\n    margin: theme.spacing(0.5)\n  },\n  shapeCircle: {\n    borderRadius: '25%',\n  },\n  colors: {\n  \tmargin: theme.spacing(1),\n  \t'& > *': {\n      margin: theme.spacing(1),\n    },\n  },\n  card: {\n    display: 'flex',\n    flexDirection: 'column',\n  },\n}));\n\nfunction EditNote(props) {\n\n\tconst { note, handleToggleActions, addNotification, refetchNote } = {...props};\n  const classes = useStyles();\n  const [noteUpdate, setNoteUpdate] = useState(\n  \t{\n      id: note.id,\n  \t\ttitle: note.title, \n  \t\tbody: note.body, \n  \t\tcolor: note.color, \n  \t\ttags: note.tags\n  \t});\n  const [isLoading, setIsLoading] = useState(false);\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    setIsLoading(true);\n    try {\n      // Api Call To Create Note\n      await updateNoteService(noteUpdate);\n      refetchNote(note.id);\n      // The Request Was Fulffiled And The Note Was updated\n      // So Let's Hide The EditNote Component\n      handleToggleActions(\"toggleDisplay\");\n    } catch (error) {\n        // display notification for error\n        addNotification({'title': error.response.data.message || \n          error.request.statusText,\n          'message': `Failed to edit note`,\n        }, notificationError);\n    }\n    setIsLoading(false);\n  }\n\n  const handleColorChange = color => {\n    setNoteUpdate(noteUpdate => ({ ...noteUpdate, color: color }));\n  };\n\n  const handleFieldChange = event => {\n    const { name, value } = event.target;\n    setNoteUpdate(noteUpdate => ({ ...noteUpdate, [name]: value }));\n\t}\n\n  const Circle = (props) => {\n  \tconst { color } = {...props}\n  \treturn (\n  \t\t<div className={clsx(classes.shape, classes.shapeCircle)} \n  \t\t\t\tname=\"color\"\n\t\t\t\t\tstyle={{background: color ? color : 'red'}} \n\t\t\t\t\tonClick={() => handleColorChange(color)} />\n\t\t\t);\n  }\n\nreturn (\n\t<Card className={classes.card} style={{background: noteUpdate.color ? noteUpdate.color : null}}>\n    <form className={classes.root} noValidate autoComplete=\"off\">\n      <div>\n        <TextField\n          id=\"filled-multiline-static\"\n          label=\"Title\"\n          name=\"title\"\n          multiline\n          rowsMax={2}\n          value={noteUpdate.title}\n          onChange={handleFieldChange}\n          variant=\"filled\"\n        />\n        <TextField\n          id=\"filled-multiline-static\"\n          label=\"Body\"\n          name=\"body\"\n          multiline\n          rowsMax={10}\n          value={noteUpdate.body}\n          onChange={handleFieldChange}\n          variant=\"filled\"\n        />\n        <TextField\n          id=\"filled-multiline-static\"\n          label=\"Tags\"\n          name=\"tags\"\n          multiline\n          rowsMax={2}\n          value={noteUpdate.tags}\n          onChange={handleFieldChange}\n          variant=\"filled\"\n        />\n        <div className={classes.colors}>\n\t        Color\n\t        <Breadcrumbs separator=\" \">\n\t\t        {noteColors.map((color) => (\n\t\t        \t\t<Circle color={color} />\n\t\t        \t))\n\t\t        }\n\t        </Breadcrumbs>\n\t      </div>\n      </div>\n    </form>\n\t\t<CardActions>\n\t\t\t<IconButton onClick={() => handleToggleActions(\"toggleDisplay\")}>\n\t\t\t\t<NoteIcon />\n\t\t\t</IconButton>\n\t\t\t<IconButton>\n\t\t\t\t<DeleteForeverIcon />\n\t\t\t</IconButton>\n\t\t\t<IconButton onClick={() => handleToggleActions(\"toggleEdit\")}>\n\t\t\t\t<EditIcon />\n\t\t\t</IconButton>\n      <IconButton onClick={handleSubmit} disabled={isLoading}>\n        <DoneIcon />\n      </IconButton>\n\t\t</CardActions>\n  </Card>\n  );\n}\n\nEditNote.propTypes = {\n  note: PropTypes.object,\n  reloadText: PropTypes.func.isRequired,\n  addNotification: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => {\n  return {\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    refetchNote: id => dispatch(refetchNote(id)),\n    addNotification: (data, level) => dispatch(level(data)),\n  };\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(EditNote);\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\n\nfunction DialogWithCallback(props) {\n\n\tconst { title, body, actionName, actionCallback } = {...props};\n\tconst [open, setOpen] = React.useState(true);\n\n\tconst handleClose = () => setOpen(false);\n\n\tconst handleAction = () => actionCallback();\n\n\treturn (\n\t\t<Dialog open={open} onClose={handleClose} \n\t\t\tdisableBackdropClick={true}>\n\t\t\t<DialogTitle>{title}</DialogTitle>\n\t\t\t<DialogContent>\n\t\t\t\t<DialogContentText>\n\t\t\t\t\t{body}\n\t\t\t\t</DialogContentText>\n\t\t\t</DialogContent>\n\t\t\t<DialogActions>\n\t\t\t\t<Button color=\"secondary\" \n\t\t\t\t\tonClick={handleClose}\n\t\t\t\t\tvariant=\"contained\">\n\t\t\t\t Cancel\n\t\t\t\t</Button>\n\t\t\t\t<Button color=\"secondary\" \n\t\t\t\t\tautoFocus=\"autoFocus\" \n\t\t\t\t\tonClick={handleAction}\n\t\t\t\t\tvariant=\"contained\">\n\t\t\t\t {actionName}\n\t\t\t\t</Button>\n\t\t\t</DialogActions>\n\t\t</Dialog>\n  );\n}\nexport default DialogWithCallback;","import React, { useState } from 'react';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { truncate } from '../../util/methods';\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\nimport EditIcon from '@material-ui/icons/Edit';\nimport IconButton from '@material-ui/core/IconButton';\nimport NoteIcon from '@material-ui/icons/Note';\nimport LabelIcon from '@material-ui/icons/Label';\nimport RestoreFromTrashIcon from '@material-ui/icons/RestoreFromTrash';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport EditNote from './EditNote';\nimport DialogWithCallback from '../Common/DialogWithCallback';\nimport { deleteNote, purgeNote, restoreTrashedNote } from '../../redux/actions/notebook';\nimport { connect } from 'react-redux';\n\nconst useStyles = makeStyles((theme) => ({\n  icon: {\n    margin: theme.spacing(1, 1, 0, 0),\n    width: 20,\n    height: 20,\n  },\n  card: {\n    display: 'flex',\n    flexDirection: 'column',\n  },\n  cardContent: {\n    flexGrow: 1,\n  },\n}));\n\nfunction NoteBookCard(props) {\n\n\tconst { note, type, deleteNote, purgeNote, restoreTrashedNote } = {...props};\n\tconst classes = useStyles();\n\tconst [toggleDisplay, setToggleDisplay] = useState(false);\n\tconst [toggleEdit, setToggleEdit] = useState(false);\n\tconst [toggleDelete, setToggleDelete] = React.useState(false);\n\n\tconst handleToggleActions = (action) => {\n\t\tif(action === \"toggleEdit\") {\n\t\t\tsetToggleEdit(!toggleEdit);\n\t\t\tif(toggleDisplay) {\n\t\t\t\tsetToggleDisplay(false);\n\t\t\t}\n\t\t}\n\t\tif(action === \"toggleDisplay\") {\n\t\t\tsetToggleDisplay(!toggleDisplay);\n\t\t\tif(toggleEdit) {\n\t\t\t\tsetToggleEdit(false);\n\t\t\t}\n\t\t}\n\t\tif(action === \"toggleDelete\") {\n\t\t\tsetToggleDelete(!toggleDelete);\n\t\t\tif(toggleEdit) {\n\t\t\t\tsetToggleEdit(false);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn (\n\t\t<Grid item key={note.id} xs={12} sm={6} md={4}>\n\t\t\t{!toggleEdit\n\t\t\t\t?\n\t\t\t\t<Card className={classes.card} style={{background: note.color ? note.color : null}}>\n\t\t\t\t\t<CardContent className={classes.cardContent}>\n\t\t\t\t\t\t<Typography gutterBottom \n\t\t\t\t\t\tvariant=\"h6\" \n\t\t\t\t\t\tcomponent=\"h6\">\n\t\t\t\t\t\t{note.title}\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t<Typography>\n\t\t\t\t\t\t{toggleDisplay \n\t\t\t\t\t\t\t?\n\t\t\t\t\t\t\tnote.body\n\t\t\t\t\t\t\t:\n\t\t\t\t\t\t\ttruncate(note.body, 20)\n\t\t\t\t\t\t}\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t<Typography  \n\t\t\t\t\t\tvariant=\"body2\" \n\t\t\t\t\t\tcomponent=\"body2\">\n\t\t\t\t\t\t\t<LabelIcon className={classes.icon} />\n\t\t\t\t\t\t\t{note.tags}\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t</CardContent>\n\t\t\t\t\t<CardActions>\n\t\t\t\t\t\t<IconButton onClick={() => handleToggleActions(\"toggleDisplay\")} title=\"Display note\">\n\t\t\t\t\t\t\t<NoteIcon />\n\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t\t{type === \"Trash\"\n\t\t\t\t\t\t\t?\n\t\t\t\t\t\t\t<React.Fragment>\n\t\t\t\t\t\t\t\t<IconButton onClick={() => restoreTrashedNote(note.id)} title=\"Restore note\">\n\t\t\t\t\t\t\t\t\t<RestoreFromTrashIcon />\n\t\t\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t\t\t\t<IconButton onClick={() => purgeNote(note.id)} title=\"Purge note\">\n\t\t\t\t\t\t\t\t\t<DeleteForeverIcon />\n\t\t\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t\t\t</React.Fragment>\n\t\t\t\t\t\t\t:\n\t\t\t\t\t\t\t<React.Fragment>\n\t\t\t\t\t\t\t\t<IconButton onClick={() => handleToggleActions(\"toggleDelete\")} title=\"Delete note\">\n\t\t\t\t\t\t\t\t\t<DeleteIcon  onClick={() => handleToggleActions(\"toggleDelete\")}/>\n\t\t\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t\t\t\t<IconButton onClick={() => handleToggleActions(\"toggleEdit\")} title=\"Edit note\">\n\t\t\t\t\t\t\t\t\t<EditIcon />\n\t\t\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t\t\t</React.Fragment>\n\t\t\t\t\t\t}\n\t\t\t\t\t</CardActions>\n\t\t\t\t</Card>\n\t\t\t\t:\n\t\t\t\t\t<EditNote note={note} \n\t\t\t\t\t\thandleToggleActions={handleToggleActions} />\n\t\t\t}\n\t\t\t{toggleDelete &&\n\t\t\t\t<DialogWithCallback \n          actionCallback={() => deleteNote(note.id)}\n          actionName=\"Delete\"\n          title=\"Delete note\"\n          body={`Click delete to delete this note`}\n\t\t\t\t/>\n\t\t\t}\n\t\t</Grid>\n\t);\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    isAuthenticated: state.auth.currentUser.authenticated,\n    notebook: state.notebook,\n    trashedNotes: state.notebook.trashedNotes,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    deleteNote: id => dispatch(deleteNote(id)),\n    purgeNote: id => dispatch(purgeNote(id)),\n    restoreTrashedNote: id => dispatch(restoreTrashedNote(id)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NoteBookCard);","import React from 'react'\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport IconButton from '@material-ui/core/IconButton';\nimport AutorenewIcon from '@material-ui/icons/Autorenew';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport NoteBookCard from './Note/NoteBookCard';\nimport Fade from '@material-ui/core/Fade';\n\nconst useStyles = makeStyles((theme) => ({\n  icon: {\n    marginRight: theme.spacing(2),\n  },\n  cardGrid: {\n    paddingTop: theme.spacing(2),\n    paddingBottom: theme.spacing(2),\n  },\n  card: {\n    height: '100%',\n    display: 'flex',\n    flexDirection: 'column',\n  },\n  cardContent: {\n    flexGrow: 1,\n  },\n}));\n\nconst Conmentarium = (props) => {\n\n\tconst { notebook, loadNotes, label } = {...props};\n\tconst classes = useStyles();\n\n\treturn (\n\t\t<React.Fragment>\n\t\t\t{notebook && notebook.length >= 1\n\t\t\t\t?\n\t\t\t\t\t<React.Fragment>\n\t\t\t\t\t\t<Grid container className={classes.cardGrid} spacing={2}>\n\t\t\t\t\t\t\t{notebook.map((note) => (\n\t\t\t\t\t\t\t\t<Fade in={true}>\n\t\t\t\t\t\t\t\t\t<NoteBookCard note={note} key={note.id} type={label} />\n\t\t\t\t\t\t\t\t</Fade>\n\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t</React.Fragment>\n\t\t\t\t:\n\t\t\t\t\t<React.Fragment>\n\t\t\t\t\t\t\t<Grid container className={classes.cardGrid} spacing={4}>\n\t\t\t\t\t\t\t\t<Grid item xs={12} sm={6} md={4}>\n\t\t\t\t\t\t\t\t\t<Card className={classes.card}>\n\t\t\t\t\t\t\t\t\t\t<CardContent className={classes.cardContent}>\n\t\t\t\t\t\t\t\t\t\t\t<Typography gutterBottom \n\t\t\t\t\t\t\t\t\t\t\tvariant=\"h6\" \n\t\t\t\t\t\t\t\t\t\t\tcomponent=\"h6\">\n\t\t\t\t\t\t\t\t\t\t\t{`No notes in ${label}`}\n\t\t\t\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t\t\t</CardContent>\n\t\t\t\t\t\t\t\t\t\t<CardActions>\n\t\t\t\t\t            <IconButton \n\t\t\t\t\t              className={classes.icons}>\n\t\t\t\t\t              <AutorenewIcon onClick={loadNotes} title={`Refresh ${label}`} />\n\t\t\t\t\t            </IconButton>\n\t\t\t\t\t\t\t\t\t\t</CardActions>\n\t\t\t\t\t\t\t\t\t</Card>\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t</React.Fragment>\n\t\t\t}\n\t\t</React.Fragment>\n\t);\n}\n\nexport default Conmentarium;\n","import React from 'react';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n    '& > * + *': {\n      marginTop: theme.spacing(2),\n    },\n  },\n}));\n\nexport default function CircularLoader(props) {\n  const classes = useStyles();\n\n  return (\n    <Typography \n      align={props.align || \"center\"} \n      className={classes.root}>\n      <CircularProgress color=\"secondary\" size={30} thickness={5} disableShrink/>\n    </Typography>\n  );\n}\n","import React, { useState, lazy, useEffect } from 'react';\nimport Conmentarium from '../components/Conmentarium';\nimport Grid from '@material-ui/core/Grid';\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport Paper from '@material-ui/core/Paper';\nimport { makeStyles } from '@material-ui/core';\nimport GitHubIcon from '@material-ui/icons/GitHub';\nimport MailIcon from '@material-ui/icons/Mail';\nimport LinkedInIcon from '@material-ui/icons/LinkedIn';\nimport CodeIcon from '@material-ui/icons/Code';\nimport IconButton from '@material-ui/core/IconButton';\nimport WatchLaterIcon from '@material-ui/icons/WatchLater';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport NoteAddIcon from '@material-ui/icons/NoteAdd';\nimport AutorenewIcon from '@material-ui/icons/Autorenew';\nimport Divider from '@material-ui/core/Divider';\nimport { getNotes, getTrashedNotes, emptyTrash } from '../redux/actions/notebook';\nimport { connect } from 'react-redux';\nimport CircularLoader from '../components/Common/Loaders';\n\nconst SignIn = lazy(() => import('../components/Auth/SignIn'));\nconst SignUp = lazy(() => import('../components/Auth/SignUp'));\nconst AddNote = lazy(() => import('../components/Note/AddNote'));\n\nexport const useStyles = makeStyles((theme) => ({\n  card: {\n    display: \"flex\",\n    margin: theme.spacing(1),\n    boxShadow: 'none !important'\n  },\n  cardDetails: {\n    flex: 1\n  },\n  cardMedia: {\n    minWidth: 160,\n  },\n  a: {\n    textDecoration: 'none',\n    color: theme.palette.secondary.main\n  },\n  divider: {\n    margin: theme.spacing(1, 0, 2, 0),\n  }\n}));\n\nconst mapLazyComponents = {\n  SignIn: SignIn,\n  SignUp: SignUp,\n}\n\nconst Home = (props) => {\n\t\n  const { isAuthenticated, notebook, loadNotes, loadTrashedNotes, trashedNotes, emptyTrash } = {...props};\n\tconst classes = useStyles();\n  const [currentAuthOP, setCurrentAuthOP] = useState(\"SignIn\");\n  const [displayAddNoteComponent, setDisplayAddNoteComponent] = useState(false);\n  const AuthComponent = mapLazyComponents[currentAuthOP];\n\n  useEffect(\n    () => {\n      if (isAuthenticated &&\n          !notebook.notebook.length && \n          !notebook.isLoading && \n          !notebook.isLoaded &&\n          !notebook.isError) loadNotes()\n    }, \n    [isAuthenticated, notebook, loadNotes]\n  );\n\n\treturn (\n\t\t<React.Fragment>\n        {!isAuthenticated\n          ?\n          <React.Fragment>\n            <Grid container component={Paper}>\n              <Grid item xs={12} sm={6} md={6}>\n                <div>\n                  <Card className={classes.card}>\n                    <CardContent>\n                      <Typography \n                        variant=\"h5\" \n                        gutterBottom\n                      >\n                        Conmentarium, a simple notebook for all ideas.\n                      </Typography>\n                      <Typography \n                        variant=\"subtitle2\" \n                        color=\"textSecondary\"\n                        paragraph>\n                        Minimalistic notebook app built with React + Material-UI, and served with Flask. Star, \n                        fork or contribute if you wish so. \n                        <a href=\"https://github.com/MurphyAdam\" \n                          target=\"_blank\"\n                          rel=\"noopener noreferrer\" \n                          className={classes.a}> By: @GitHub/MurphyAdam (Majdi)\n                        </a>\n                      </Typography>\n                      <IconButton \n                        component=\"a\"\n                        title=\"GitHub\" \n                        aria-label=\"GitHub\" \n                        color=\"inherit\"\n                        href=\"https://github.com/MurphyAdam\"\n                        target=\"_blank\"\n                        rel=\"noopener noreferrer\"\n                        >\n                        <GitHubIcon />\n                      </IconButton>\n                      <IconButton \n                        component=\"a\"\n                        title=\"Source code\" \n                        aria-label=\"Source code\" \n                        color=\"inherit\"\n                        href=\"https://github.com/MurphyAdam/Conmentarium\"\n                        target=\"_blank\"\n                        rel=\"noopener noreferrer\"\n                        >\n                        <CodeIcon />\n                      </IconButton>\n                      <IconButton \n                        component=\"a\"\n                        title=\"LinkedIn\" \n                        aria-label=\"LinkedIn\" \n                        color=\"inherit\"\n                        href=\"https://www.linkedin.com/in/majdi-mahfoud-258461198/\"\n                        target=\"_blank\"\n                        rel=\"noopener noreferrer\"\n                        >\n                        <LinkedInIcon />\n                      </IconButton>\n                      <IconButton \n                        component=\"a\"\n                        title=\"Email\" \n                        aria-label=\"Email\" \n                        color=\"inherit\"\n                        href=\"mailto:langandcode@gmail.com\" \n                        target=\"_blank\"\n                        rel=\"noopener noreferrer\"\n                        >\n                        <MailIcon />\n                      </IconButton>\n                    </CardContent>\n                    <CardMedia\n                      className={classes.cardMedia}\n                      image=\"https://res.cloudinary.com/lang-code/image/upload/v1600369514/images/notes_lkh985.png\"\n                      title=\"Conmentarium\"\n                    />\n                  </Card>\n                </div>\n              </Grid>\n              <React.Suspense fallback={<CircularLoader />}>\n                <AuthComponent setCurrentAuthOP={setCurrentAuthOP} />\n              </React.Suspense>\n            </Grid>\n          </React.Fragment>\n          :\n          <React.Fragment>\n            <IconButton onClick={() => setDisplayAddNoteComponent(!displayAddNoteComponent)}>\n              <NoteAddIcon onClick={() => setDisplayAddNoteComponent(!displayAddNoteComponent)}/>\n            </IconButton>\n            <Divider className={classes.divider} />\n            {displayAddNoteComponent &&\n              <React.Fragment>\n                <React.Suspense fallback={<CircularLoader />}>\n                  <AddNote setCurrentAuthOP={setCurrentAuthOP} \n                    setDisplayAddNoteComponent={setDisplayAddNoteComponent} />\n                </React.Suspense>\n                <Divider className={classes.divider} />\n              </React.Fragment>\n            }\n            <IconButton>\n              <WatchLaterIcon />\n            </IconButton>\n            <Conmentarium notebook={notebook.notebook} \n              loadNotes={loadNotes} \n              label='Recent' />\n            <IconButton>\n              <FavoriteIcon />\n            </IconButton>\n            <Conmentarium notebook={[]} \n              loadNotes={loadNotes} \n              label='Favorites' />\n            <IconButton>\n              <DeleteIcon />\n            </IconButton>\n            <IconButton>\n              <AutorenewIcon onClick={loadTrashedNotes} />\n            </IconButton>\n            <Button onClick={emptyTrash} >\n              Purge Trash\n            </Button>\n            <Conmentarium notebook={trashedNotes.notes} \n              loadNotes={loadTrashedNotes}\n              label='Trash' />\n          </React.Fragment>\n        }\n\t\t</React.Fragment>\n\t);\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    isAuthenticated: state.auth.currentUser.authenticated,\n    notebook: state.notebook,\n    trashedNotes: state.notebook.trashedNotes,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    loadNotes: () => dispatch(getNotes()),\n    loadTrashedNotes: () => dispatch(getTrashedNotes()),\n    emptyTrash: () => dispatch(emptyTrash()),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);","import axios from 'axios'; \nimport {getCookie} from '../util/Cookies';\n\n// window origin - base url\nconst origin = window.location.origin;\n\n// Perform a simple handshake with the server to retrieve the\n// _csrf_token and use the it as the axios X-CSRFTOKEN header defaults\n// also set the axios base url to avoid redefinitions across requests\nlet csrftoken;\nlet csrftokenExists;\naxios(`${origin}/api/handshake`).then(response => {\n  if(response) {\n    // get _csrf_token token\n    csrftoken = getCookie('_csrf_token');\n    csrftokenExists = csrftoken ? true : false\n    axios.defaults.baseURL = origin;\n    axios.defaults.headers.common['X-CSRFTOKEN'] = csrftoken;\n  }\n})\n\n\nconst config = {\n  defaultPaletteColors: {\n    primary: {\n      light: '#484848',\n      main: '#212121',\n      dark: '#000000',\n    },\n    secondary: {\n      light: '#ffff6e',\n      main: '#009688',\n      dark: '#009692',\n    },\n  },\n  // these are the tokens required for backend \n  Tokens : {\n    csrf: {\n      exists: csrftokenExists,\n      token: csrftoken\n    }\n  },\n}\n\nexport default config;\n","import React, { useEffect } from 'react';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Grid from '@material-ui/core/Grid';\nimport Header from './components/Header/Header';\nimport Home from './containers/Home';\nimport { MuiThemeProvider, createMuiTheme, makeStyles } from '@material-ui/core/styles';\nimport config from './config';\nimport Notifications from 'react-notification-system-redux';\nimport { connect } from 'react-redux';\nimport { getCurrentUser } from './redux/actions/auth';\nimport { changeDocumentTitle } from './util/methods';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: \"auto\",\n    marginTop: theme.spacing(10),\n    marginLeft: theme.spacing(3),\n    marginRight: theme.spacing(3),\n    [theme.breakpoints.up(1100 + theme.spacing(3 * 2))]: {\n      width: 1100,\n      marginLeft: \"auto\",\n      marginRight: \"auto\"\n    }\n  },\n}));\n\n//Optional styling\nconst UINotificationsStyle = {\n  NotificationItem: { // Override the notification item\n    DefaultStyle: { // Applied to every notification, regardless of the notification level\n      margin: '5px 5px 2px 1px'\n    },\n  }\n};\n\nfunction App(props) {\n\n  const { ui, loadUser, isAuthenticated, \n    notifications } = {...props};\n  const classes = useStyles();\n  const theme = createMuiTheme({\n    palette: {\n      type: ui.theme,\n      primary: config.defaultPaletteColors.primary,\n      secondary: config.defaultPaletteColors.secondary,\n      contrastThreshold: 3,\n      tonalOffset: 0.2,\n    },\n    typography: {\n      fontSize: 14,\n    },\n  });\n\n  useEffect(() => {\n    if(!isAuthenticated) loadUser();\n    else changeDocumentTitle(\"Conmentarium: A Simple Notebook App\")\n    // eslint-disable-next-line\n  }, [isAuthenticated]);\n\n  return (\n    <MuiThemeProvider theme={theme}>\n      <CssBaseline />\n      <Grid component=\"main\" className={classes.root}>\n        <Header />\n        <Notifications\n          notifications={notifications}\n          style={UINotificationsStyle}\n        />\n        <Home />\n      </Grid>\n    </MuiThemeProvider>\n  );\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    ui: state.ui,\n    isAuthenticated: state.auth.currentUser.authenticated,\n    notifications: state.notifications,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    loadUser: () => dispatch(getCurrentUser()),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","import { LOAD_CURRENT_USER,\n\tLOAD_CURRENT_USER_SUCCESS,\n\tLOAD_CURRENT_USER_FAILURE, \n\n\tUSER_LOGIN,\n\tUSER_LOGIN_SUCCESS, \n\tUSER_LOGIN_FAILURE,\n\n\tUSER_SIGNUP,\n\tUSER_SIGNUP_SUCCESS,\n\tUSER_SIGNUP_FAILURE,\n\n\tUSER_LOGOUT,\n\tUSER_LOGOUT_SUCCESS,\n\tUSER_LOGOUT_FAILURE,\n\n\tRELOAD_USER_SUCCESS\n\t } from '../constants/auth';\n\n\nconst INITIAL_STATE = {\n\tcurrentUser: {\n\t\tauthenticated: false,\n\t\tuser: null,\n\t\tfresh: false,\n\t\tisLoading: false,\n\t\tisLoaded: false,\n\t},\n\tuserSubject: {\n\t\tsuccess: false,\n\t\tisLoading: false,\n\t\tisLoaded: false,\n\t}\n};\n\nfunction auth(state=INITIAL_STATE, action) {\n\n\tswitch (action.type){\n\n\t\tcase LOAD_CURRENT_USER: {\n\t\t\treturn {...state, \n\t\t\t\tcurrentUser: {...INITIAL_STATE.currentUser, \n\t\t\t\t\tisLoading: true\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tcase LOAD_CURRENT_USER_SUCCESS: {\n\t\t\treturn {...state, \n\t\t\t\tcurrentUser: {...state.currentUser,\n\t\t\t\t\tauthenticated: true, \n\t\t\t\t\tuser: action.payload.user,\n\t\t\t\t\tisLoaded: true, \n\t\t\t\t\tisLoading: false, \n\t\t\t\t\tfresh: true,\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tcase LOAD_CURRENT_USER_FAILURE: {\n\t\t\treturn {...state, \n\t\t\t\tcurrentUser: {...INITIAL_STATE.currentUser,\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tcase RELOAD_USER_SUCCESS: {\n\t\t\treturn {...state, \n\t\t\t\tcurrentUser: {...state.currentUser,\n\t\t\t\t\tauthenticated: true, \n\t\t\t\t\tuser: action.payload.currentUser,\n\t\t\t\t\tisLoaded: true, \n\t\t\t\t\tisLoading: false, \n\t\t\t\t\tfresh: true,\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tcase USER_LOGIN: {\n\t\t\treturn {...state, \n\t\t\t\tcurrentUser: {...state.currentUser, \n\t\t\t\t\tisLoading: true, \n\t\t\t\t\tisLoaded: false,\n\t\t\t\t\tfresh: false,\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tcase USER_LOGIN_SUCCESS: {\n\t\t\treturn {...state, \n\t\t\t\tcurrentUser: {...state.currentUser,\n\t\t\t\t\tauthenticated: true, \n\t\t\t\t\tuser: action.payload.user,\n\t\t\t\t\tisLoaded: true, \n\t\t\t\t\tisLoading: false, \n\t\t\t\t\tfresh: true,\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tcase USER_LOGIN_FAILURE: {\n\t\t\treturn {...state, \n\t\t\t\tcurrentUser: {...state.currentUser,\n\t\t\t\t\tisLoaded: true, \n\t\t\t\t\tisLoading: false, \n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tcase USER_SIGNUP: {\n\t\t\treturn {...state, \n\t\t\t\tuserSubject: {...INITIAL_STATE.userSubject, \n\t\t\t\t\tisLoading: true, \n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tcase USER_SIGNUP_SUCCESS: {\n\t\t\treturn {...state, \n\t\t\t\tuserSubject: {...INITIAL_STATE.userSubject,\n\t\t\t\t\tsuccess: true,\n\t\t\t\t\tisLoaded: true, \n\t\t\t\t\tisLoading: false, \n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tcase USER_SIGNUP_FAILURE: {\n\t\t\treturn {...state, \n\t\t\t\tuserSubject: {...INITIAL_STATE.userSubject,\n\t\t\t\t\tisLoaded: true, \n\t\t\t\t\tisLoading: false, \n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tcase USER_LOGOUT: {\n\t\t\treturn {...state, \n\t\t\t\tcurrentUser: {...state.currentUser, \n\t\t\t\t\tisLoading: true, \n\t\t\t\t\tisLoaded: false,\n\t\t\t\t\tfresh: false,\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tcase USER_LOGOUT_SUCCESS: {\n\t\t\treturn {...INITIAL_STATE,\n\t\t\t\tcurrentUser:{...INITIAL_STATE.currentUser, \n\t\t\t\t\tisLoading: false, \n\t\t\t\t\tauthenticated: false,\n\t\t\t\t\tuser: null\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tcase USER_LOGOUT_FAILURE: {\n\t\t\treturn {...INITIAL_STATE,\n\t\t\t\tcurrentUser:{...state.currentUser, \n\t\t\t\t\tisLoading: false, \n\t\t\t\t\tisLoaded: true\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}\n\nexport default auth;","import { FETCH_NOTE,\n\tFETCH_NOTE_SUCCESS, \n\tFETCH_NOTE_FAILURE,\n\tREFETCH_NOTE_SUCCESS,\n\tDELETE_NOTE_SUCCESS,\n\tFETCH_TRASHED_NOTES_SUCCESS,\n\tEMPTY_TRASH,\n\tDELETE_TRASHED_NOTE_SUCCESS,\n\tRESTORE_TRASHED_NOTE_SUCCESS,\n\t } from '../constants/notebook';\nimport { INITIATE_AUTH_CLEANUP } from '../constants/auth';\nimport { filterArrayWithId, concatArrayOfObjectsAndSortWithDateAsc } from '../methods';\n\nconst INITIAL_STATE = {\n\t\ttrashedNotes: {\n\t\t\tnotes: [],\n\t\t\tisLoading: false,\n\t\t\tisLoaded: false,\n\t\t\tcount: 0,\n\t\t},\n\t\tnotebook: [],\n\t\tcount: 0,\n\t\tisLoading: false,\n\t\tisLoaded: false,\n};\n\nfunction notebook(state=INITIAL_STATE, action) {\n\n\tswitch (action.type){\n\t\tcase FETCH_NOTE: {\n\t\t\treturn {...INITIAL_STATE, \n\t\t\t\t\tisLoading: true\n\t\t\t\t}\n\t\t\t}\n\t\tcase FETCH_NOTE_SUCCESS: {\n\t\t\treturn {...state,\n\t\t\t\t\tnotebook: concatArrayOfObjectsAndSortWithDateAsc(action.payload.notes || state.notebook),\n\t\t\t\t\tcount: state.notebook.length,\n\t\t\t\t\tisLoading: false,\n\t\t\t\t\tisLoaded: true, \n\t\t\t\t}\n\t\t\t}\n\t\tcase FETCH_NOTE_FAILURE: {\n\t\t\treturn {...state, \n\t\t\t\t\tisLoading: false,\n\t\t\t\t\tisLoaded: true, \n\t\t\t\t}\n\t\t\t}\n\t\tcase REFETCH_NOTE_SUCCESS: {\n\t\t\treturn {...state, \n\t\t\t\t\tnotebook: concatArrayOfObjectsAndSortWithDateAsc(\n\t\t\t\t\t\tfilterArrayWithId(state.notebook, action.payload?.note?.id), [action.payload?.note]),\n\t\t\t\t\tcount: state.notebook.length,\n\t\t\t}\n\t\t}\n\t\tcase DELETE_NOTE_SUCCESS: {\n\t\t\treturn {...state,\n\t\t\t\t\tnotebook: filterArrayWithId(state.notebook, action.payload.note_id),\n\t\t\t\t\tcount: state.notebook.length,\n\t\t\t\t\tisLoading: false,\n\t\t\t\t\tisLoaded: true,\n\t\t\t\t\ttrashedNotes: {\n\t\t\t\t\t\tnotes: concatArrayOfObjectsAndSortWithDateAsc(state.trashedNotes.notes, [action.payload?.note]),\n\t\t\t\t\t\tcount: state.trashedNotes.notes.length,\n\t\t\t\t\t\tisLoading: false,\n\t\t\t\t\t\tisLoaded: true\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\tcase FETCH_TRASHED_NOTES_SUCCESS: {\n\t\t\treturn {...state,\n\t\t\t\t\ttrashedNotes: {\n\t\t\t\t\t\tnotes: action.payload?.notes || state.trashedNotes.notes,\n\t\t\t\t\t\tcount: state.trashedNotes.notes.length,\n\t\t\t\t\t\tisLoading: false,\n\t\t\t\t\t\tisLoaded: true\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\tcase DELETE_TRASHED_NOTE_SUCCESS: {\n\t\t\treturn {...state,\n\t\t\t\t\ttrashedNotes: {\n\t\t\t\t\t\tnotes: filterArrayWithId(state.trashedNotes.notes, action.payload.note_id),\n\t\t\t\t\t\tcount: state.trashedNotes.notes.length,\n\t\t\t\t\t\tisLoading: false,\n\t\t\t\t\t\tisLoaded: true\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\tcase RESTORE_TRASHED_NOTE_SUCCESS: {\n\t\t\treturn {...state,\n\t\t\t\t\tnotebook: concatArrayOfObjectsAndSortWithDateAsc(state.notebook, [action.payload.note]),\n\t\t\t\t\tcount: state.notebook.length,\n\t\t\t\t\tisLoading: false,\n\t\t\t\t\tisLoaded: true, \n\t\t\t\t\ttrashedNotes: {\n\t\t\t\t\t\tnotes: filterArrayWithId(state.trashedNotes.notes, action.payload.note_id),\n\t\t\t\t\t\tcount: state.trashedNotes.notes.length,\n\t\t\t\t\t\tisLoading: false,\n\t\t\t\t\t\tisLoaded: true\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\tcase EMPTY_TRASH: {\n\t\t\treturn {...state, \n\t\t\t\ttrashedNotes: {...INITIAL_STATE.trashedNotes}\n\t\t\t}\n\t\t}\n\t\tcase INITIATE_AUTH_CLEANUP: {\n\t\t\treturn INITIAL_STATE\n\t\t}\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}\n\nexport default notebook;\n","import { theme, darkModeOn } from '../../config/ui'\nimport { SET_APP_THEME } from '../constants/ui'\n\nconst INITIAL_STATE = {\n\t\ttheme: theme,\n\t\tdarkModeOn: darkModeOn,\n};\n\nfunction app(state=INITIAL_STATE, action) {\n\tswitch (action.type){\n\t\t// app theme\n\t\tcase SET_APP_THEME: {\n\t\t\treturn {...state, \n\t\t\t\t\ttheme: action.payload.theme, \n\t\t\t\t\tdarkModeOn: action.payload.darkModeOn\n\t\t\t\t};\n\t\t}\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}\n\nexport default app;","import { combineReducers } from 'redux';\nimport auth from './auth';\nimport notebook from './notebook';\nimport ui from './ui';\nimport {reducer as notifications } from 'react-notification-system-redux';\n\nconst rootReducer = combineReducers({ui, auth, notebook, notifications});\n\nexport default rootReducer;","import { createStore, compose, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport logger from 'redux-logger';\nimport rootReducer from './reducers';\n\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(rootReducer, composeEnhancer(applyMiddleware(thunk, logger)));\nexport default store;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\nimport * as serviceWorker from './serviceWorker';\n\nconst rootElement = document.getElementById(\"root\");\n\nReactDOM.render(\n\t<Provider store={store}>\n\t\t<App />\n\t</Provider>,\n\t rootElement);\n\nserviceWorker.unregister();\n","import React from \"react\";\n// react must be in scope for notificationTemplate's renderArray method\n// which includes jsx\n\nexport function updateItemInArray(array, newItem) {\n    let items = array.filter(item => item.id !== newItem.id );\n    items = [...items, newItem].sort( (a, b) => a.id-b.id);\n    return items;\n}\n\nexport function removeItemFromArray(array, itemId) {\n\treturn array.filter(item => item.id !== itemId)\n}\n\nexport function addObjectToArray(array, newItem) {\n\tconst checkIfExist = array.find( item => item.id !== newItem.id );\n\tif(checkIfExist){\n\t\treturn updateItemInArray(array, newItem)\n\t}\n\telse {\n\t\tconst newArray = [...array, newItem]\n\t\treturn newArray\n\t}\n}\n\nexport function updateObjectInArrayWithId(array, newItem) {\n\treturn array.map(item => {\n\t\tif (item.id !== newItem.id) {\n\t\t\t// This isn't the item we care about - keep it as-is\n\t\t\treturn item\n\t\t\t}\n\t\t// Otherwise, this is the one we want - return an updated value\n\t\treturn {\n\t\t...item,\n\t\t...newItem\n\t\t}\n\t})\n}\n\nexport function filterArrayWithId(array, itemId) {\n\treturn array.filter(item => {\n\t\tif (item.id !== itemId) {\n\t\t\t// This isn't the item we care about - keep it as-is\n\t\t\treturn item\n\t\t\t}\n\t\treturn false\n\t})\n}\n\nexport function filterArrayWithName(array, itemId) {\n\treturn array.filter(item => {\n\t\tif (item.name !== itemId) {\n\t\t\t// This isn't the item we care about - keep it as-is\n\t\t\treturn item\n\t\t\t}\n\t\treturn false\n\t})\n}\n\nexport function updateObjectInArrayWithName(array, newItem) {\n\treturn array.map(item => {\n\t\tif (item.name !== newItem.name) {\n\t\t\t// This isn't the item we care about - keep it as-is\n\t\t\treturn item\n\t\t\t}\n\t\t// Otherwise, this is the one we want - return an updated value\n\t\treturn {\n\t\t...item,\n\t\t...newItem\n\t\t}\n\t})\n}\n\nexport function concatArrayOfObjectsAndSortWithDateAsc(array, newArrayOfObjects=[]) {\n\tconst newArray = [...array, ...newArrayOfObjects]\n\tnewArray.sort(function(a, b) {\n\t\tif(a.date_updated && b.date_updated) {\n\t\t\treturn new Date(b.date_updated) - new Date(a.date_updated)\n\t\t}\n\t\telse if(a.date_created && b.date_created) {\n\t\t\treturn new Date(b.date_created) - new Date(a.date_created)\n\t\t}\n\t\telse if(a.date && b.date) {\n\t\t\treturn new Date(b.date) - new Date(a.date)\n\t\t}\n\t\telse {\n\t\t\treturn a - b\n\t\t}\n\t})\n\treturn newArray\n}\n\nexport function concatArrayOfObjectsAndSortWithDateDesc(array, newArrayOfObjects=[]) {\n\tconst newArray = [...array, ...newArrayOfObjects]\n\tnewArray.sort(function(a, b) {\n\t\tif(a.date_updated && b.date_updated) {\n\t\t\treturn new Date(a.date_updated) - new Date(b.date_updated)\n\t\t}\n\t\telse if(a.date_created && b.date_created) {\n\t\t\treturn new Date(a.date_created) - new Date(b.date_created)\n\t\t}\n\t\telse if(a.date && b.date) {\n\t\t\treturn new Date(a.date) - new Date(b.date)\n\t\t}\n\t\telse {\n\t\t\treturn a - b\n\t\t}\n\t})\n\treturn newArray\n}\n\nexport const notificationTemplate = {\n  title: '',\n  message: '',\n  position: 'bc',\n  autoDismiss: 2,\n  renderArray: (arr=[]) => (\n    <ul>\n      {arr.map(el => (\n        <li>{el}</li>\n      ))}\n    </ul>\n    ),\n};","import {\n\tFETCH_NOTE,\n\tFETCH_NOTE_SUCCESS,\n\tFETCH_NOTE_FAILURE,\n\tREFETCH_NOTE,\n\tREFETCH_NOTE_SUCCESS,\n\tREFETCH_NOTE_FAILURE,\n\tDELETE_NOTE,\n\tDELETE_NOTE_SUCCESS,\n\tDELETE_NOTE_FAILURE,\n\tFETCH_TRASHED_NOTES,\n\tFETCH_TRASHED_NOTES_SUCCESS,\n\tFETCH_TRASHED_NOTES_FAILURE,\n\tEMPTY_TRASH,\n\tDELETE_TRASHED_NOTE,\n\tDELETE_TRASHED_NOTE_SUCCESS,\n\tDELETE_TRASHED_NOTE_FAILURE,\n\tRESTORE_TRASHED_NOTE,\n\tRESTORE_TRASHED_NOTE_SUCCESS,\n\tRESTORE_TRASHED_NOTE_FAILURE,\n} from '../constants/notebook';\nimport { error as notificationError } from 'react-notification-system-redux';\nimport { fetchNotebookService, fetchNoteService, \n\tdeleteNoteService, fetchTrashedNotesService, \n\temptyTrashService, purgeTrashedNoteService, \n\trestoreTrashedNoteService } from '../../services/note-api';\nimport { concatArrayOfObjectsAndSortWithDateAsc } from '../methods';\n\nconst ActionCreatorFactory = (type, payload=null) => {\n\treturn {\n\t\ttype: type,\n\t\tpayload: payload\n\t}\n}\n\nconst fetchNotes = page => ActionCreatorFactory(FETCH_NOTE);\nconst fetchNotesSuccess = data => ActionCreatorFactory(FETCH_NOTE_SUCCESS, data);\nconst fetchNotesError = error => ActionCreatorFactory(FETCH_NOTE_FAILURE, error);\n\nexport function getNotes() {\n\treturn (dispatch) => {\n\t\tdispatch(fetchNotes());\n\t\tfetchNotebookService()\n\t\t.then((response) => {\n\t\t\tif (response.status !== 200) {\n\t\t\t\tdispatch(fetchNotesError(response));\n\t\t\t}\n\t\t\treturn response;\n\t\t})\n\t\t.then((response) => {\n\t\t\tdispatch(fetchNotesSuccess(response.data))\n\t\t})\n\t\t.catch((error) => {\n\t\t\tconsole.log(\"error =>\", error)\n\t\t\tdispatch(fetchNotesError(error));\n\t\t\tdispatch(notificationError({'title': error.response.data.message || \n\t\t\t\terror.request.statusText,\n\t\t\t\t'message': `Failed to load notebooks`,\n\t\t\t}));\n\t\t})\n\t};\n}\n\nexport const setNote = (note) => {\n\treturn (dispatch, getState) => {\n\t\tif(note) {\n\t\t\tlet notes = getState().notebook.notebook;\n\t\t\tnotes = concatArrayOfObjectsAndSortWithDateAsc(notes, [note])\n\t\t\tdispatch(fetchNotesSuccess({notes}));\n\t\t\treturn;\n\t\t}\n\t}\n}\n\nconst refetchNotes = page => ActionCreatorFactory(REFETCH_NOTE);\nconst refetchNotesSuccess = data => ActionCreatorFactory(REFETCH_NOTE_SUCCESS, data);\nconst refetchNotesError = error => ActionCreatorFactory(REFETCH_NOTE_FAILURE, error);\n\nexport const refetchNote = id => {\n\treturn (dispatch) => {\n\t\tdispatch(refetchNotes());\n\t\tfetchNoteService(id)\n\t\t.then((response) => {\n\t\t\tif (response.status !== 200) {\n\t\t\t\tdispatch(refetchNotesError(response));\n\t\t\t}\n\t\t\treturn response;\n\t\t})\n\t\t.then((response) => {\n\t\t\tdispatch(refetchNotesSuccess(response.data));\n\t\t})\n\t\t.catch((error) => {\n\t\t\tdispatch(refetchNotesError(error));\n\t\t\tdispatch(notificationError({'title': error.response.data.message || \n\t\t\t\terror.request.statusText,\n\t\t\t\t'message': `Failed to refetch note`,\n\t\t\t}));\n\t\t})\n\t}\n}\n\nconst removeNote = page => ActionCreatorFactory(DELETE_NOTE);\nconst removeNoteSuccess = data => ActionCreatorFactory(DELETE_NOTE_SUCCESS, data);\nconst removeNoteError = error => ActionCreatorFactory(DELETE_NOTE_FAILURE, error);\n\nexport const deleteNote = id => {\n\treturn (dispatch) => {\n\t\tdispatch(removeNote());\n\t\tdeleteNoteService(id)\n\t\t.then((response) => {\n\t\t\tif (response.status !== 200) {\n\t\t\t\tdispatch(removeNoteError(response));\n\t\t\t}\n\t\t\treturn response;\n\t\t})\n\t\t.then((response) => {\n\t\t\tdispatch(removeNoteSuccess({note: response.data?.note, note_id: id}));\n\t\t})\n\t\t.catch((error) => {\n\t\t\tdispatch(removeNoteError(error));\n\t\t\tdispatch(notificationError({'title': error.response.data.message || \n\t\t\t\terror.request.statusText,\n\t\t\t\t'message': `Failed to delete note`,\n\t\t\t}));\n\t\t})\n\t}\n}\n\nconst fetchTrashedNotes = page => ActionCreatorFactory(FETCH_TRASHED_NOTES);\nconst fetchTrashedNotesSuccess = data => ActionCreatorFactory(FETCH_TRASHED_NOTES_SUCCESS, data);\nconst fetchTrashedNotesError = error => ActionCreatorFactory(FETCH_TRASHED_NOTES_FAILURE, error);\n\nexport function getTrashedNotes() {\n\treturn (dispatch) => {\n\t\tdispatch(fetchTrashedNotes());\n\t\tfetchTrashedNotesService()\n\t\t.then((response) => {\n\t\t\tif (response.status !== 200) {\n\t\t\t\tdispatch(fetchTrashedNotesError(response));\n\t\t\t}\n\t\t\treturn response;\n\t\t})\n\t\t.then((response) => {\n\t\t\tconst notes = concatArrayOfObjectsAndSortWithDateAsc(response.data.notes || []);\n\t\t\tdispatch(fetchTrashedNotesSuccess({notes}))\n\t\t})\n\t\t.catch((error) => {\n\t\t\tconsole.log(\"error =>\", error)\n\t\t\tdispatch(fetchTrashedNotesError(error));\n\t\t\tdispatch(notificationError({'title': error.response.data.message || \n\t\t\t\terror.request.statusText,\n\t\t\t\t'message': `Failed to load notebooks`,\n\t\t\t}));\n\t\t})\n\t};\n}\n\nconst emptyTrashSuccess = data => ActionCreatorFactory(EMPTY_TRASH, data);\n\nexport const emptyTrash = () => {\n\treturn (dispatch) => {\n\t\tdispatch(removeNote());\n\t\temptyTrashService()\n\t\t.then((response) => {\n\t\t\treturn response;\n\t\t})\n\t\t.then((response) => {\n\t\t\tdispatch(emptyTrashSuccess(response.data));\n\t\t})\n\t\t.catch((error) => {\n\t\t\tdispatch(notificationError({'title': error.response.data.message || \n\t\t\t\terror.request.statusText,\n\t\t\t\t'message': `Failed to delete note`,\n\t\t\t}));\n\t\t})\n\t}\n}\n\nconst purgeTrashedNote = page => ActionCreatorFactory(DELETE_TRASHED_NOTE);\nconst purgeTrashedNoteSuccess = data => ActionCreatorFactory(DELETE_TRASHED_NOTE_SUCCESS, data);\nconst purgeTrashedNoteError = error => ActionCreatorFactory(DELETE_TRASHED_NOTE_FAILURE, error);\n\nexport const purgeNote = id => {\n\treturn (dispatch) => {\n\t\tdispatch(purgeTrashedNote());\n\t\tpurgeTrashedNoteService(id)\n\t\t.then((response) => {\n\t\t\tif (response.status !== 200) {\n\t\t\t\tdispatch(purgeTrashedNoteError(response));\n\t\t\t}\n\t\t\treturn response;\n\t\t})\n\t\t.then((response) => {\n\t\t\tdispatch(purgeTrashedNoteSuccess(response.data));\n\t\t})\n\t\t.catch((error) => {\n\t\t\tdispatch(purgeTrashedNoteError(error));\n\t\t\tdispatch(notificationError({'title': error.response.data.message || \n\t\t\t\terror.request.statusText,\n\t\t\t\t'message': `Failed to purge note`,\n\t\t\t}));\n\t\t})\n\t}\n}\n\nconst restoreNote = page => ActionCreatorFactory(RESTORE_TRASHED_NOTE);\nconst restoreNoteSuccess = data => ActionCreatorFactory(RESTORE_TRASHED_NOTE_SUCCESS, data);\nconst restoreNoteError = error => ActionCreatorFactory(RESTORE_TRASHED_NOTE_FAILURE, error);\n\nexport function restoreTrashedNote(id) {\n\treturn (dispatch) => {\n\t\tdispatch(restoreNote());\n\t\trestoreTrashedNoteService(id)\n\t\t.then((response) => {\n\t\t\tif (response.status !== 200) {\n\t\t\t\tdispatch(restoreNoteError(response));\n\t\t\t}\n\t\t\treturn response;\n\t\t})\n\t\t.then((response) => {\n\t\t\tdispatch(restoreNoteSuccess({note: response.data?.note, note_id: id}));\n\t\t})\n\t\t.catch((error) => {\n\t\t\tdispatch(restoreNoteError(error));\n\t\t\tdispatch(notificationError({'title': error.response.data.message || \n\t\t\t\terror.request.statusText,\n\t\t\t\t'message': `Failed to refetch note`,\n\t\t\t}));\n\t\t})\n\t}\n}","import axios from 'axios';\n\nexport const fetchNotebookService = () => axios.get('/api/notebook');\nexport const fetchPaginatedNotebookService = page => axios.get(`/api/notebook/paginated?page=${page}`);\nexport const fetchNoteService = id => axios.get(`/api/notebook/${id}`);\nexport const createNoteService = formData => axios.post(`/api/notebook`, {...formData});\nexport const updateNoteService = formData => axios.put(`/api/notebook/${formData.id}`, {...formData});\nexport const deleteNoteService = id => axios.delete(`/api/notebook/${id}`);\nexport const fetchTrashedNotesService = () => axios.get('/api/notebook/trash');\nexport const emptyTrashService = () => axios.delete('/api/notebook/trash');\nexport const purgeTrashedNoteService = id => axios.delete(`/api/notebook/trash/${id}`);\nexport const restoreTrashedNoteService = id => axios.put(`/api/notebook/trash/${id}`);\n\n","export const range = (start, stop, step=1) => \nArray.from({ length: (stop - start) / step }, (_, i) => start + (i * step));\n\nexport const truncate = (what, length=100) => \n  what !== null && what !== undefined \n  \t&& (what.length < length) ? what : what.substring(0, length) + '..';\n\nexport const changeDocumentTitle = title => window.document.title = title;\n","import { LOAD_CURRENT_USER,\n\tLOAD_CURRENT_USER_SUCCESS,\n\tLOAD_CURRENT_USER_FAILURE, \n\n\tUSER_LOGIN,\n\tUSER_LOGIN_SUCCESS, \n\tUSER_LOGIN_FAILURE,\n\n\tUSER_SIGNUP,\n\tUSER_SIGNUP_SUCCESS,\n\tUSER_SIGNUP_FAILURE,\n\n\tUSER_LOGOUT,\n\tUSER_LOGOUT_SUCCESS,\n\tUSER_LOGOUT_FAILURE,\n\n\tINITIATE_AUTH_CLEANUP } from '../constants/auth';\n\nimport { login, createUser, logoutCurrentUser, fetchCurrentUser } from '../../services/auth-api';\nimport { error as notificationError, \nremoveAll as notificationRemoveAll } from 'react-notification-system-redux';\nimport { notificationTemplate } from '../methods';\n\n\nconst ActionCreatorFactory = (type, payload=null) => {\n\treturn {\n\t\ttype: type,\n\t\tpayload: payload\n\t}\n}\n\nconst loadUserRequest = () => ActionCreatorFactory(LOAD_CURRENT_USER);\nconst loadUserSuccess = data => ActionCreatorFactory(LOAD_CURRENT_USER_SUCCESS, data);\nconst loadUserError = () => ActionCreatorFactory(LOAD_CURRENT_USER_FAILURE);\n\nconst userLoginRequest = () => \tActionCreatorFactory(USER_LOGIN);\nconst userLoginSuccess = data => ActionCreatorFactory(USER_LOGIN_SUCCESS, data);\nconst userLoginError = error => ActionCreatorFactory(USER_LOGIN_FAILURE, error);\n\nconst userSignupRequest = () => ActionCreatorFactory(USER_SIGNUP);\nconst userSignupSuccess = data => ActionCreatorFactory(USER_SIGNUP_SUCCESS, data);\nconst userSignupError = error => ActionCreatorFactory(USER_SIGNUP_FAILURE, error);\n\nconst userLogoutRequest = () => ActionCreatorFactory(USER_LOGOUT);\nconst userLogoutError = error => ActionCreatorFactory(USER_LOGOUT_FAILURE, error);\nconst userLogoutSuccess = data => ActionCreatorFactory(USER_LOGOUT_SUCCESS, data);\n\nconst initiateAuthCleanup = () => ActionCreatorFactory(INITIATE_AUTH_CLEANUP);\n\nexport function getCurrentUser(){\n\treturn (dispatch) => {\n\t\tconst currentUserId = JSON.parse(localStorage.getItem('currentUser'));\n\t\tif (currentUserId !== null && \n\t\t\tcurrentUserId !== undefined && \n\t\t\t!isNaN(parseInt(currentUserId))\n\t\t\t) {\n\t\t\tdispatch(loadUserRequest());\n\t\t\tfetchCurrentUser(currentUserId)\n\t\t\t.then((response) => {\n\t\t\t\tif (response.status !== 200) {\n\t\t\t\t\tdispatch(loadUserError());\n\t\t\t\t}\n\t\t\t\treturn response\n\t\t\t})\n\t\t\t.then((response) => {\n\t\t\t\tdispatch(loadUserSuccess(response.data));\n\t\t\t\tdispatch(initiateAuthCleanup());\n\t\t\t})\n\t\t\t.catch(() => {\n\t\t\t\tdispatch(loadUserError());\n\t\t\t})\n\n\t\t}\n\t};\n}\n\nexport function authenticate(formData) {\n\treturn (dispatch) => {\n\t\tdispatch(userLoginRequest());\n\t\tlogin(formData)\n\t\t.then((response) => {\n\t\t\tif (response.status !== 200) {\n\t\t\t\tdispatch(userLoginError(response));\n\t\t\t}\n\t\t\treturn response;\n\t\t})\n\t\t.then((response) => {\n\t\t\tdispatch(userLoginSuccess(response.data));\n\t\t\tdispatch(initiateAuthCleanup());\n\t\t\tdispatch(notificationRemoveAll());\n\t\t\tlocalStorage.setItem('currentUser', JSON.stringify(response.data.user.id));\n\t\t})\n\t\t.catch((error) => {\n\t\t\tdispatch(userLoginError(error));\n\t\t\tdispatch(notificationError({'title': error.response.data.message || \n\t\t\t\terror.request.statusText,\n\t\t\t\t'message': `Failed to sign in`,\n\t\t\t\t'children': notificationTemplate.renderArray(error.response?.data?.errors),\n\t\t\t}));\n\t\t})\n\t};\n}\n\nexport function register(formData) {\n\treturn (dispatch) => {\n\t\tdispatch(userSignupRequest());\n\t\tcreateUser(formData)\n\t\t.then((response) => {\n\t\t\tif (response.status !== 200) {\n\t\t\t\tdispatch(userSignupError(response));\n\t\t\t}\n\t\t\treturn response;\n\t\t})\n\t\t.then((response) => {\n\t\t\tdispatch(userSignupSuccess(response.data));\n\t\t\tdispatch(notificationRemoveAll());\n\t\t})\n\t\t.catch((error) => {\n\t\t\tdispatch(userSignupError(error));\n\t\t\tdispatch(notificationError({'title': error.response.data.message || \n\t\t\t\terror.request.statusText,\n\t\t\t\t'message': `Failed to sign up`,\n\t\t\t\t'children': notificationTemplate.renderArray(error.response?.data?.errors),\n\t\t\t}));\n\t\t})\n\t};\n}\n\nexport function logout() {\n\treturn (dispatch) => {\n\t\tdispatch(userLogoutRequest());\n\t\tlogoutCurrentUser()\n\t\t.then((response) => {\n\t\t\tif (response.status !== 200) {\n\t\t\t\tdispatch(userLogoutError(response));\n\t\t\t}\n\t\t\treturn response;\n\t\t})\n\t\t.then((response) => {\n\t\t\tlocalStorage.removeItem('currentUser');\n\t\t\tdispatch(userLogoutSuccess(response.data));\n\t\t\tdispatch(notificationRemoveAll());\n\t\t\tdispatch(initiateAuthCleanup());\n\t\t})\n\t\t.catch((error) => {\n\t\t\tdispatch(userLogoutError(error));\n\t\t\tdispatch(notificationError({'title': error.response.data.message || \n\t\t\t\terror.request.statusText,\n\t\t\t\t'message': `Failed to logout up`,\n\t\t\t}));\n\t\t})\n\t};\n}\n","import axios from 'axios';\n\nexport const fetchUser = id => axios.get(`/api/users/${id}`);\nexport const fetchCurrentUser = userId => axios(`/api/auth/current_user/${userId}`);\nexport const createUser = formData => axios.post(`/api/auth/signup`, {...formData});\nexport const login = formData => axios.post(`/api/auth/signin`, {...formData});\nexport const logoutCurrentUser = () => axios.get(`/api/auth/logout`);\n","export const USER_LOGIN = 'USER_LOGIN';\nexport const USER_LOGIN_SUCCESS = 'USER_LOGIN_SUCCESS';\nexport const USER_LOGIN_FAILURE = 'USER_LOGIN_FAILURE';\n\nexport const USER_SIGNUP = 'USER_SIGNUP';\nexport const USER_SIGNUP_SUCCESS = 'USER_SIGNUP_SUCCESS';\nexport const USER_SIGNUP_FAILURE = 'USER_SIGNUP_FAILURE';\n\nexport const LOAD_CURRENT_USER = 'LOAD_CURRENT_USER';\nexport const LOAD_CURRENT_USER_SUCCESS = 'LOAD_CURRENT_USER_SUCCESS';\nexport const LOAD_CURRENT_USER_FAILURE = 'LOAD_CURRENT_USER_FAILURE';\n\nexport const USER_LOGOUT = 'USER_LOGOUT';\nexport const USER_LOGOUT_SUCCESS = 'USER_LOGOUT_SUCCESS';\nexport const USER_LOGOUT_FAILURE = 'USER_LOGOUT_FAILURE';\n\nexport const RELOAD_USER = 'RELOAD_USER';\nexport const RELOAD_USER_SUCCESS = 'RELOAD_USER_SUCCESS';\nexport const RELOAD_USER_FAILURE = 'RELOAD_USER_FAILURE';\n\nexport const INITIATE_AUTH_CLEANUP = 'INITIATE_AUTH_CLEANUP';\n\nexport const ACTIONS = {\n\tUSER_LOGIN,\n\tUSER_LOGIN_SUCCESS,\n\tUSER_LOGIN_FAILURE,\n\tLOAD_CURRENT_USER,\n\tLOAD_CURRENT_USER_SUCCESS,\n\tLOAD_CURRENT_USER_FAILURE,\n\tUSER_SIGNUP,\n\tUSER_SIGNUP_SUCCESS,\n\tUSER_SIGNUP_FAILURE,\n\tUSER_LOGOUT,\n\tUSER_LOGOUT_SUCCESS,\n\tUSER_LOGOUT_FAILURE,\n\tINITIATE_AUTH_CLEANUP,\n\tRELOAD_USER,\n\tRELOAD_USER_SUCCESS,\n\tRELOAD_USER_FAILURE,\n};"],"sourceRoot":""}