{"version":3,"sources":["redux/constants/notebook.js","components/Header/NavBar.jsx","components/Header/Header.jsx","components/Note/EditNote.jsx","components/Common/DialogWithCallback.jsx","components/Note/NoteBookCard.jsx","components/Conmentarium.jsx","components/Common/Loaders.jsx","containers/Home.jsx","config/index.js","util/Cookies.js","App.jsx","redux/reducers/auth.js","redux/reducers/notebook.js","redux/reducers/index.js","redux/store.js","serviceWorker.js","index.jsx","redux/methods/index.js","services/note-api.js","redux/actions/notebook.js","redux/actions/auth.js","services/auth-api.js","util/methods.js","redux/constants/auth.js","constants.js"],"names":["FETCH_NOTE","FETCH_NOTE_SUCCESS","FETCH_NOTE_FAILURE","REFETCH_NOTE","REFETCH_NOTE_SUCCESS","REFETCH_NOTE_FAILURE","FETCH_TRASHED_NOTES","FETCH_TRASHED_NOTES_SUCCESS","FETCH_TRASHED_NOTES_FAILURE","EMPTY_TRASH","DELETE_NOTE","DELETE_NOTE_SUCCESS","DELETE_NOTE_FAILURE","DELETE_TRASHED_NOTE","DELETE_TRASHED_NOTE_SUCCESS","DELETE_TRASHED_NOTE_FAILURE","RESTORE_TRASHED_NOTE","RESTORE_TRASHED_NOTE_SUCCESS","RESTORE_TRASHED_NOTE_FAILURE","useStyles","makeStyles","theme","grow","flexGrow","margin","spacing","appBar","zIndex","Toolbar","AppBarButtons","textTransform","title","fontSize","breakpoints","up","display","connect","state","currentUser","auth","isAuthenticated","authenticated","dispatch","logout","props","classes","className","AppBar","position","variant","Typography","noWrap","Button","color","onClick","Header","NavBar","root","width","shape","height","shapeCircle","borderRadius","colors","card","flexDirection","refetchNote","id","addNotification","data","level","note","handleToggleActions","useState","body","tags","noteUpdate","setNoteUpdate","isLoading","setIsLoading","handleSubmit","event","a","preventDefault","updateNoteService","response","message","request","statusText","notificationError","handleFieldChange","target","name","value","Circle","clsx","style","background","handleColorChange","Card","noValidate","autoComplete","TextField","label","multiline","rowsMax","onChange","Breadcrumbs","separator","noteColors","map","CardActions","IconButton","disabled","DialogWithCallback","actionName","actionCallback","React","open","setOpen","handleClose","Dialog","onClose","disableBackdropClick","DialogTitle","DialogContent","DialogContentText","DialogActions","autoFocus","icon","cardContent","notebook","trashedNotes","deleteNote","purgeNote","restoreTrashedNote","type","toggleDisplay","setToggleDisplay","toggleEdit","setToggleEdit","toggleDelete","setToggleDelete","action","Grid","item","key","xs","sm","md","CardContent","gutterBottom","component","truncate","Fragment","marginRight","cardGrid","paddingTop","paddingBottom","Conmentarium","loadNotes","length","container","Fade","in","icons","marginTop","CircularLoader","align","CircularProgress","size","thickness","disableShrink","SignIn","lazy","SignUp","AddNote","boxShadow","cardDetails","flex","cardMedia","minWidth","textDecoration","palette","secondary","main","divider","mapLazyComponents","getNotes","loadTrashedNotes","getTrashedNotes","currentAuthOP","setCurrentAuthOP","displayAddNoteComponent","setDisplayAddNoteComponent","AuthComponent","useEffect","isLoaded","isError","Divider","Suspense","fallback","notes","Paper","paragraph","href","rel","aria-label","CardMedia","image","csrftoken","csrftokenExists","origin","window","location","axios","then","cookieValue","document","cookie","cookies","split","i","trim","substring","decodeURIComponent","getCookie","defaults","baseURL","headers","common","config","defaultPaletteColors","primary","light","dark","Tokens","csrf","exists","token","marginLeft","UINotificationsStyle","NotificationItem","DefaultStyle","notifications","loadUser","getCurrentUser","createMuiTheme","contrastThreshold","tonalOffset","typography","CssBaseline","INITIAL_STATE","user","fresh","userSubject","success","LOAD_CURRENT_USER","LOAD_CURRENT_USER_SUCCESS","payload","LOAD_CURRENT_USER_FAILURE","RELOAD_USER_SUCCESS","USER_LOGIN","USER_LOGIN_SUCCESS","USER_LOGIN_FAILURE","USER_SIGNUP","USER_SIGNUP_SUCCESS","USER_SIGNUP_FAILURE","USER_LOGOUT","USER_LOGOUT_SUCCESS","USER_LOGOUT_FAILURE","count","concatArrayOfObjectsAndSortWithDateAsc","filterArrayWithId","note_id","INITIATE_AUTH_CLEANUP","rootReducer","combineReducers","composeEnhancer","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","logger","Boolean","hostname","match","rootElement","getElementById","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister","catch","error","console","array","itemId","filter","newArrayOfObjects","newArray","sort","b","date_updated","Date","date_created","date","notificationTemplate","autoDismiss","renderArray","arr","el","fetchNotebookService","get","fetchNoteService","createNoteService","formData","post","put","deleteNoteService","delete","fetchTrashedNotesService","emptyTrashService","purgeTrashedNoteService","restoreTrashedNoteService","ActionCreatorFactory","fetchNotesSuccess","fetchNotesError","status","log","setNote","getState","refetchNotesError","removeNote","page","removeNoteError","fetchTrashedNotesError","purgeTrashedNoteError","restoreNoteError","loadUserError","userLoginError","userSignupError","userLogoutError","initiateAuthCleanup","userId","currentUserId","JSON","parse","localStorage","getItem","undefined","isNaN","parseInt","authenticate","login","notificationRemoveAll","setItem","stringify","errors","register","createUser","removeItem","what","changeDocumentTitle"],"mappings":"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","file":"static/js/main.32df252e.chunk.js","sourcesContent":["export const SET_APP_THEME = 'SET_APP_THEME';\n\n\nexport const FETCH_NOTE = 'FETCH_NOTE';\nexport const FETCH_NOTE_SUCCESS = 'FETCH_NOTE_SUCCESS';\nexport const FETCH_NOTE_FAILURE = 'FETCH_NOTE_FAILURE';\n\nexport const REFETCH_NOTE = 'REFETCH_NOTE';\nexport const REFETCH_NOTE_SUCCESS = 'REFETCH_NOTE_SUCCESS';\nexport const REFETCH_NOTE_FAILURE = 'REFETCH_NOTE_FAILURE';\n\nexport const FETCH_PAGINATED_NOTES = 'FETCH_PAGINATED_NOTES';\nexport const FETCH_PAGINATED_NOTES_SUCCESS = 'FETCH_PAGINATED_NOTES_SUCCESS';\nexport const FETCH_PAGINATED_NOTES_FAILURE = 'FETCH_PAGINATED_NOTES_FAILURE';\n\nexport const FETCH_TRASHED_NOTES = 'FETCH_TRASHED_NOTES';\nexport const FETCH_TRASHED_NOTES_SUCCESS = 'FETCH_TRASHED_NOTES_SUCCESS';\nexport const FETCH_TRASHED_NOTES_FAILURE = 'FETCH_TRASHED_NOTES_FAILURE';\n\nexport const EMPTY_TRASH = 'EMPTY_TRASH';\n\nexport const DELETE_NOTE = 'DELETE_NOTE';\nexport const DELETE_NOTE_SUCCESS = 'DELETE_NOTE_SUCCESS';\nexport const DELETE_NOTE_FAILURE = 'DELETE_NOTE_FAILURE';\n\nexport const DELETE_TRASHED_NOTE = 'DELETE_TRASHED_NOTE';\nexport const DELETE_TRASHED_NOTE_SUCCESS = 'DELETE_NOTE_TRASHED_SUCCESS';\nexport const DELETE_TRASHED_NOTE_FAILURE = 'DELETE_NOTE_TRASHED_FAILURE';\n\nexport const RESTORE_TRASHED_NOTE = 'RESTORE_TRASHED_NOTE';\nexport const RESTORE_TRASHED_NOTE_SUCCESS = 'RESTORE_NOTE_TRASHED_SUCCESS';\nexport const RESTORE_TRASHED_NOTE_FAILURE = 'RESTORE_NOTE_TRASHED_FAILURE';\n\nexport const ACTIONS = {\n\tSET_APP_THEME,\n\tFETCH_NOTE,\n\tFETCH_NOTE_SUCCESS,\n\tFETCH_NOTE_FAILURE,\n\tFETCH_PAGINATED_NOTES,\n\tFETCH_PAGINATED_NOTES_SUCCESS,\n\tFETCH_PAGINATED_NOTES_FAILURE,\n\tDELETE_NOTE,\n\tDELETE_NOTE_SUCCESS,\n\tDELETE_NOTE_FAILURE,\n};","import React from 'react';\nimport {makeStyles} from '@material-ui/core';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport { connect } from 'react-redux';\nimport { logout } from '../../redux/actions/auth';\n\nconst useStyles = makeStyles((theme) => ({\n  grow: {\n    flexGrow: 1,\n    margin: theme.spacing(0),\n  },\n  appBar: {\n    zIndex: 200,\n  },\n  Toolbar: {\n    zIndex: 200,\n  },\n  AppBarButtons: {\n    textTransform: 'none',\n  },\n  title: {\n    fontSize: 15,\n    textTransform: 'none',\n    [theme.breakpoints.up('sm')]: {\n      display: 'block',\n    },\n  }\n}));\n\nfunction PrimaryAppBar(props) {\n\n  const { isAuthenticated, logout } = props;\n  const classes = useStyles();\n\n  return (\n    <div className={classes.grow}>\n      <AppBar position=\"fixed\" className={classes.appBar}>\n        <Toolbar variant=\"dense\" className={classes.Toolbar}>\n          <Typography variant=\"h4\" noWrap>\n              <Button \n                color=\"inherit\" \n                variant=\"text\"\n                className={classes.title}>\n                  Conmentarium\n              </Button>\n          </Typography>\n          <div className={classes.grow} />\n          {isAuthenticated &&\n            <div>\n              <Button\n                color=\"inherit\" \n                className={classes.AppBarButtons}\n                onClick={logout} >\n                Logout\n              </Button>\n            </div>\n          }\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    currentUser: state.auth.currentUser,\n    isAuthenticated: state.auth.currentUser.authenticated,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    logout: () => dispatch(logout()),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PrimaryAppBar);","import React from 'react';\nimport NavBar from './NavBar';\n\nexport default function Header () {\n  return (\n      <header>\n        <NavBar />\n      </header>\n    )\n}\n","import React, { useState } from 'react';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport TextField from '@material-ui/core/TextField';\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs';\n\nimport CardActions from '@material-ui/core/CardActions';\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\nimport EditIcon from '@material-ui/icons/Edit';\nimport IconButton from '@material-ui/core/IconButton';\nimport NoteIcon from '@material-ui/icons/Note';\nimport DoneIcon from '@material-ui/icons/Done';\nimport { updateNoteService } from '../../services/note-api';\n\nimport {connect} from 'react-redux';\nimport { error as notificationError } from 'react-notification-system-redux';\nimport { refetchNote } from '../../redux/actions/notebook';\nimport { noteColors } from '../../constants';\nimport PropTypes from 'prop-types';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    '& .MuiTextField-root': {\n      margin: theme.spacing(1),\n      width: '95% ',\n    },\n  },\n  shape: {\n    width: 30,\n    height: 30,\n    margin: theme.spacing(0.5)\n  },\n  shapeCircle: {\n    borderRadius: '25%',\n  },\n  colors: {\n  \tmargin: theme.spacing(1),\n  \t'& > *': {\n      margin: theme.spacing(1),\n    },\n  },\n  card: {\n    display: 'flex',\n    flexDirection: 'column',\n  },\n}));\n\nfunction EditNote(props) {\n\n\tconst { note, handleToggleActions, addNotification, refetchNote } = {...props};\n  const classes = useStyles();\n  const [noteUpdate, setNoteUpdate] = useState(\n  \t{\n      id: note.id,\n  \t\ttitle: note.title, \n  \t\tbody: note.body, \n  \t\tcolor: note.color, \n  \t\ttags: note.tags\n  \t});\n  const [isLoading, setIsLoading] = useState(false);\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    setIsLoading(true);\n    try {\n      // Api Call To Create Note\n      await updateNoteService(noteUpdate);\n      refetchNote(note.id);\n      // The Request Was Fulffiled And The Note Was updated\n      // So Let's Hide The EditNote Component\n      handleToggleActions(\"toggleDisplay\");\n    } catch (error) {\n        // display notification for error\n        addNotification({'title': error.response.data.message || \n          error.request.statusText,\n          'message': `Failed to edit note`,\n        }, notificationError);\n    }\n    setIsLoading(false);\n  }\n\n  const handleColorChange = color => {\n    setNoteUpdate(noteUpdate => ({ ...noteUpdate, color: color }));\n  };\n\n  const handleFieldChange = event => {\n    const { name, value } = event.target;\n    setNoteUpdate(noteUpdate => ({ ...noteUpdate, [name]: value }));\n\t}\n\n  const Circle = (props) => {\n  \tconst { color } = {...props}\n  \treturn (\n  \t\t<div className={clsx(classes.shape, classes.shapeCircle)} \n  \t\t\t\tname=\"color\"\n\t\t\t\t\tstyle={{background: color ? color : 'red'}} \n\t\t\t\t\tonClick={() => handleColorChange(color)} />\n\t\t\t);\n  }\n\nreturn (\n\t<Card className={classes.card} style={{background: noteUpdate.color ? noteUpdate.color : null}}>\n    <form className={classes.root} noValidate autoComplete=\"off\">\n      <div>\n        <TextField\n          id=\"filled-multiline-static\"\n          label=\"Title\"\n          name=\"title\"\n          multiline\n          rowsMax={2}\n          value={noteUpdate.title}\n          onChange={handleFieldChange}\n          variant=\"filled\"\n        />\n        <TextField\n          id=\"filled-multiline-static\"\n          label=\"Body\"\n          name=\"body\"\n          multiline\n          rowsMax={10}\n          value={noteUpdate.body}\n          onChange={handleFieldChange}\n          variant=\"filled\"\n        />\n        <TextField\n          id=\"filled-multiline-static\"\n          label=\"Tags\"\n          name=\"tags\"\n          multiline\n          rowsMax={2}\n          value={noteUpdate.tags}\n          onChange={handleFieldChange}\n          variant=\"filled\"\n        />\n        <div className={classes.colors}>\n\t        Color\n\t        <Breadcrumbs separator=\" \">\n\t\t        {noteColors.map((color) => (\n\t\t        \t\t<Circle color={color} />\n\t\t        \t))\n\t\t        }\n\t        </Breadcrumbs>\n\t      </div>\n      </div>\n    </form>\n\t\t<CardActions>\n\t\t\t<IconButton onClick={() => handleToggleActions(\"toggleDisplay\")}>\n\t\t\t\t<NoteIcon />\n\t\t\t</IconButton>\n\t\t\t<IconButton>\n\t\t\t\t<DeleteForeverIcon />\n\t\t\t</IconButton>\n\t\t\t<IconButton onClick={() => handleToggleActions(\"toggleEdit\")}>\n\t\t\t\t<EditIcon />\n\t\t\t</IconButton>\n      <IconButton onClick={handleSubmit} disabled={isLoading}>\n        <DoneIcon />\n      </IconButton>\n\t\t</CardActions>\n  </Card>\n  );\n}\n\nEditNote.propTypes = {\n  note: PropTypes.object,\n  reloadText: PropTypes.func.isRequired,\n  addNotification: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => {\n  return {\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    refetchNote: id => dispatch(refetchNote(id)),\n    addNotification: (data, level) => dispatch(level(data)),\n  };\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(EditNote);\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\n\nfunction DialogWithCallback(props) {\n\n\tconst { title, body, actionName, actionCallback } = {...props};\n\tconst [open, setOpen] = React.useState(true);\n\n\tconst handleClose = () => setOpen(false);\n\n\tconst handleAction = () => actionCallback();\n\n\treturn (\n\t\t<Dialog open={open} onClose={handleClose} \n\t\t\tdisableBackdropClick={true}>\n\t\t\t<DialogTitle>{title}</DialogTitle>\n\t\t\t<DialogContent>\n\t\t\t\t<DialogContentText>\n\t\t\t\t\t{body}\n\t\t\t\t</DialogContentText>\n\t\t\t</DialogContent>\n\t\t\t<DialogActions>\n\t\t\t\t<Button color=\"secondary\" \n\t\t\t\t\tonClick={handleClose}\n\t\t\t\t\tvariant=\"contained\">\n\t\t\t\t Cancel\n\t\t\t\t</Button>\n\t\t\t\t<Button color=\"secondary\" \n\t\t\t\t\tautoFocus=\"autoFocus\" \n\t\t\t\t\tonClick={handleAction}\n\t\t\t\t\tvariant=\"contained\">\n\t\t\t\t {actionName}\n\t\t\t\t</Button>\n\t\t\t</DialogActions>\n\t\t</Dialog>\n  );\n}\nexport default DialogWithCallback;","import React, { useState } from 'react';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { truncate } from '../../util/methods';\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\nimport EditIcon from '@material-ui/icons/Edit';\nimport IconButton from '@material-ui/core/IconButton';\nimport NoteIcon from '@material-ui/icons/Note';\nimport LabelIcon from '@material-ui/icons/Label';\nimport RestoreFromTrashIcon from '@material-ui/icons/RestoreFromTrash';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport EditNote from './EditNote';\nimport DialogWithCallback from '../Common/DialogWithCallback';\nimport { deleteNote, purgeNote, restoreTrashedNote } from '../../redux/actions/notebook';\nimport { connect } from 'react-redux';\n\nconst useStyles = makeStyles((theme) => ({\n  icon: {\n    margin: theme.spacing(1, 1, 0, 0),\n    width: 20,\n    height: 20,\n  },\n  card: {\n    display: 'flex',\n    flexDirection: 'column',\n  },\n  cardContent: {\n    flexGrow: 1,\n  },\n}));\n\nfunction NoteBookCard(props) {\n\n\tconst { note, type, deleteNote, purgeNote, restoreTrashedNote } = {...props};\n\tconst classes = useStyles();\n\tconst [toggleDisplay, setToggleDisplay] = useState(false);\n\tconst [toggleEdit, setToggleEdit] = useState(false);\n\tconst [toggleDelete, setToggleDelete] = React.useState(false);\n\n\tconst handleToggleActions = (action) => {\n\t\tif(action === \"toggleEdit\") {\n\t\t\tsetToggleEdit(!toggleEdit);\n\t\t\tif(toggleDisplay) {\n\t\t\t\tsetToggleDisplay(false);\n\t\t\t}\n\t\t}\n\t\tif(action === \"toggleDisplay\") {\n\t\t\tsetToggleDisplay(!toggleDisplay);\n\t\t\tif(toggleEdit) {\n\t\t\t\tsetToggleEdit(false);\n\t\t\t}\n\t\t}\n\t\tif(action === \"toggleDelete\") {\n\t\t\tsetToggleDelete(!toggleDelete);\n\t\t\tif(toggleEdit) {\n\t\t\t\tsetToggleEdit(false);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn (\n\t\t<Grid item key={note.id} xs={12} sm={6} md={4}>\n\t\t\t{!toggleEdit\n\t\t\t\t?\n\t\t\t\t<Card className={classes.card} style={{background: note.color ? note.color : null}}>\n\t\t\t\t\t<CardContent className={classes.cardContent}>\n\t\t\t\t\t\t<Typography gutterBottom \n\t\t\t\t\t\tvariant=\"h6\" \n\t\t\t\t\t\tcomponent=\"h6\">\n\t\t\t\t\t\t{note.title}\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t<Typography>\n\t\t\t\t\t\t{toggleDisplay \n\t\t\t\t\t\t\t?\n\t\t\t\t\t\t\tnote.body\n\t\t\t\t\t\t\t:\n\t\t\t\t\t\t\ttruncate(note.body, 20)\n\t\t\t\t\t\t}\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t<Typography  \n\t\t\t\t\t\tvariant=\"body2\" \n\t\t\t\t\t\tcomponent=\"body2\">\n\t\t\t\t\t\t\t<LabelIcon className={classes.icon} />\n\t\t\t\t\t\t\t{note.tags}\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t</CardContent>\n\t\t\t\t\t<CardActions>\n\t\t\t\t\t\t<IconButton onClick={() => handleToggleActions(\"toggleDisplay\")} title=\"Display note\">\n\t\t\t\t\t\t\t<NoteIcon />\n\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t\t{type === \"Trash\"\n\t\t\t\t\t\t\t?\n\t\t\t\t\t\t\t<React.Fragment>\n\t\t\t\t\t\t\t\t<IconButton onClick={() => restoreTrashedNote(note.id)} title=\"Restore note\">\n\t\t\t\t\t\t\t\t\t<RestoreFromTrashIcon />\n\t\t\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t\t\t\t<IconButton onClick={() => purgeNote(note.id)} title=\"Purge note\">\n\t\t\t\t\t\t\t\t\t<DeleteForeverIcon />\n\t\t\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t\t\t</React.Fragment>\n\t\t\t\t\t\t\t:\n\t\t\t\t\t\t\t<React.Fragment>\n\t\t\t\t\t\t\t\t<IconButton onClick={() => handleToggleActions(\"toggleDelete\")} title=\"Delete note\">\n\t\t\t\t\t\t\t\t\t<DeleteIcon  onClick={() => handleToggleActions(\"toggleDelete\")}/>\n\t\t\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t\t\t\t<IconButton onClick={() => handleToggleActions(\"toggleEdit\")} title=\"Edit note\">\n\t\t\t\t\t\t\t\t\t<EditIcon />\n\t\t\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t\t\t</React.Fragment>\n\t\t\t\t\t\t}\n\t\t\t\t\t</CardActions>\n\t\t\t\t</Card>\n\t\t\t\t:\n\t\t\t\t\t<EditNote note={note} \n\t\t\t\t\t\thandleToggleActions={handleToggleActions} />\n\t\t\t}\n\t\t\t{toggleDelete &&\n\t\t\t\t<DialogWithCallback \n          actionCallback={() => deleteNote(note.id)}\n          actionName=\"Delete\"\n          title=\"Delete note\"\n          body={`Click delete to delete this note`}\n\t\t\t\t/>\n\t\t\t}\n\t\t</Grid>\n\t);\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    isAuthenticated: state.auth.currentUser.authenticated,\n    notebook: state.notebook,\n    trashedNotes: state.notebook.trashedNotes,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    deleteNote: id => dispatch(deleteNote(id)),\n    purgeNote: id => dispatch(purgeNote(id)),\n    restoreTrashedNote: id => dispatch(restoreTrashedNote(id)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NoteBookCard);","import React from 'react'\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport IconButton from '@material-ui/core/IconButton';\nimport AutorenewIcon from '@material-ui/icons/Autorenew';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport NoteBookCard from './Note/NoteBookCard';\nimport Fade from '@material-ui/core/Fade';\n\nconst useStyles = makeStyles((theme) => ({\n  icon: {\n    marginRight: theme.spacing(2),\n  },\n  cardGrid: {\n    paddingTop: theme.spacing(2),\n    paddingBottom: theme.spacing(2),\n  },\n  card: {\n    height: '100%',\n    display: 'flex',\n    flexDirection: 'column',\n  },\n  cardContent: {\n    flexGrow: 1,\n  },\n}));\n\nconst Conmentarium = (props) => {\n\n\tconst { notebook, loadNotes, label } = {...props};\n\tconst classes = useStyles();\n\n\treturn (\n\t\t<React.Fragment>\n\t\t\t{notebook && notebook.length >= 1\n\t\t\t\t?\n\t\t\t\t\t<React.Fragment>\n\t\t\t\t\t\t<Grid container className={classes.cardGrid} spacing={2}>\n\t\t\t\t\t\t\t{notebook.map((note) => (\n\t\t\t\t\t\t\t\t<Fade in={true}>\n\t\t\t\t\t\t\t\t\t<NoteBookCard note={note} key={note.id} type={label} />\n\t\t\t\t\t\t\t\t</Fade>\n\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t</React.Fragment>\n\t\t\t\t:\n\t\t\t\t\t<React.Fragment>\n\t\t\t\t\t\t\t<Grid container className={classes.cardGrid} spacing={4}>\n\t\t\t\t\t\t\t\t<Grid item xs={12} sm={6} md={4}>\n\t\t\t\t\t\t\t\t\t<Card className={classes.card}>\n\t\t\t\t\t\t\t\t\t\t<CardContent className={classes.cardContent}>\n\t\t\t\t\t\t\t\t\t\t\t<Typography gutterBottom \n\t\t\t\t\t\t\t\t\t\t\tvariant=\"h6\" \n\t\t\t\t\t\t\t\t\t\t\tcomponent=\"h6\">\n\t\t\t\t\t\t\t\t\t\t\t{`No notes in ${label}`}\n\t\t\t\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t\t\t</CardContent>\n\t\t\t\t\t\t\t\t\t\t<CardActions>\n\t\t\t\t\t            <IconButton \n\t\t\t\t\t              className={classes.icons}>\n\t\t\t\t\t              <AutorenewIcon onClick={loadNotes} title={`Refresh ${label}`} />\n\t\t\t\t\t            </IconButton>\n\t\t\t\t\t\t\t\t\t\t</CardActions>\n\t\t\t\t\t\t\t\t\t</Card>\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t</React.Fragment>\n\t\t\t}\n\t\t</React.Fragment>\n\t);\n}\n\nexport default Conmentarium;\n","import React from 'react';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n    '& > * + *': {\n      marginTop: theme.spacing(2),\n    },\n  },\n}));\n\nexport default function CircularLoader(props) {\n  const classes = useStyles();\n\n  return (\n    <Typography \n      align={props.align || \"center\"} \n      className={classes.root}>\n      <CircularProgress color=\"secondary\" size={30} thickness={5} disableShrink/>\n    </Typography>\n  );\n}\n","import React, { useState, lazy, useEffect } from 'react';\nimport Conmentarium from '../components/Conmentarium';\nimport Grid from '@material-ui/core/Grid';\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Paper from '@material-ui/core/Paper';\nimport { makeStyles } from '@material-ui/core';\nimport GitHubIcon from '@material-ui/icons/GitHub';\nimport MailIcon from '@material-ui/icons/Mail';\nimport LinkedInIcon from '@material-ui/icons/LinkedIn';\nimport CodeIcon from '@material-ui/icons/Code';\nimport IconButton from '@material-ui/core/IconButton';\nimport WatchLaterIcon from '@material-ui/icons/WatchLater';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport NoteAddIcon from '@material-ui/icons/NoteAdd';\nimport AutorenewIcon from '@material-ui/icons/Autorenew';\nimport Divider from '@material-ui/core/Divider';\nimport { getNotes, getTrashedNotes } from '../redux/actions/notebook';\nimport { connect } from 'react-redux';\nimport CircularLoader from '../components/Common/Loaders';\n\nconst SignIn = lazy(() => import('../components/Auth/SignIn'));\nconst SignUp = lazy(() => import('../components/Auth/SignUp'));\nconst AddNote = lazy(() => import('../components/Note/AddNote'));\n\nexport const useStyles = makeStyles((theme) => ({\n  card: {\n    display: \"flex\",\n    margin: theme.spacing(1),\n    boxShadow: 'none !important'\n  },\n  cardDetails: {\n    flex: 1\n  },\n  cardMedia: {\n    minWidth: 160,\n  },\n  a: {\n    textDecoration: 'none',\n    color: theme.palette.secondary.main\n  },\n  divider: {\n    margin: theme.spacing(1, 0, 2, 0),\n  }\n}));\n\nconst mapLazyComponents = {\n  SignIn: SignIn,\n  SignUp: SignUp,\n}\n\nconst Home = (props) => {\n\t\n  const { isAuthenticated, notebook, loadNotes, loadTrashedNotes, trashedNotes } = {...props};\n\tconst classes = useStyles();\n  const [currentAuthOP, setCurrentAuthOP] = useState(\"SignIn\");\n  const [displayAddNoteComponent, setDisplayAddNoteComponent] = useState(false);\n  const AuthComponent = mapLazyComponents[currentAuthOP];\n\n  useEffect(\n    () => {\n      if (isAuthenticated &&\n          !notebook.notebook.length && \n          !notebook.isLoading && \n          !notebook.isLoaded &&\n          !notebook.isError) loadNotes()\n    }, \n    [isAuthenticated, notebook, loadNotes]\n  );\n\n\treturn (\n\t\t<React.Fragment>\n        {!isAuthenticated\n          ?\n          <React.Fragment>\n            <Grid container component={Paper}>\n              <Grid item xs={12} sm={6} md={6}>\n                <div>\n                  <Card className={classes.card}>\n                    <CardContent>\n                      <Typography \n                        variant=\"h5\" \n                        gutterBottom\n                      >\n                        Conmentarium, a simple notebook for all ideas.\n                      </Typography>\n                      <Typography \n                        variant=\"subtitle2\" \n                        color=\"textSecondary\"\n                        paragraph>\n                        Minimalistic notebook app built with React + Material-UI, and served with Flask. Star, \n                        fork or contribute if you wish so. \n                        <a href=\"https://github.com/MurphyAdam\" \n                          target=\"_blank\"\n                          rel=\"noopener noreferrer\" \n                          className={classes.a}> By: @GitHub/MurphyAdam (Majdi)\n                        </a>\n                      </Typography>\n                      <IconButton \n                        component=\"a\"\n                        title=\"GitHub\" \n                        aria-label=\"GitHub\" \n                        color=\"inherit\"\n                        href=\"https://github.com/MurphyAdam\"\n                        target=\"_blank\"\n                        rel=\"noopener noreferrer\"\n                        >\n                        <GitHubIcon />\n                      </IconButton>\n                      <IconButton \n                        component=\"a\"\n                        title=\"Source code\" \n                        aria-label=\"Source code\" \n                        color=\"inherit\"\n                        href=\"https://github.com/MurphyAdam/Conmentarium\"\n                        target=\"_blank\"\n                        rel=\"noopener noreferrer\"\n                        >\n                        <CodeIcon />\n                      </IconButton>\n                      <IconButton \n                        component=\"a\"\n                        title=\"LinkedIn\" \n                        aria-label=\"LinkedIn\" \n                        color=\"inherit\"\n                        href=\"https://www.linkedin.com/in/majdi-mahfoud-258461198/\"\n                        target=\"_blank\"\n                        rel=\"noopener noreferrer\"\n                        >\n                        <LinkedInIcon />\n                      </IconButton>\n                      <IconButton \n                        component=\"a\"\n                        title=\"Email\" \n                        aria-label=\"Email\" \n                        color=\"inherit\"\n                        href=\"mailto:langandcode@gmail.com\" \n                        target=\"_blank\"\n                        rel=\"noopener noreferrer\"\n                        >\n                        <MailIcon />\n                      </IconButton>\n                    </CardContent>\n                    <CardMedia\n                      className={classes.cardMedia}\n                      image=\"https://res.cloudinary.com/lang-code/image/upload/v1600369514/images/notes_lkh985.png\"\n                      title=\"Conmentarium\"\n                    />\n                  </Card>\n                </div>\n              </Grid>\n              <React.Suspense fallback={<CircularLoader />}>\n                <AuthComponent setCurrentAuthOP={setCurrentAuthOP} />\n              </React.Suspense>\n            </Grid>\n          </React.Fragment>\n          :\n          <React.Fragment>\n            <IconButton onClick={() => setDisplayAddNoteComponent(!displayAddNoteComponent)}>\n              <NoteAddIcon onClick={() => setDisplayAddNoteComponent(!displayAddNoteComponent)}/>\n            </IconButton>\n            <Divider className={classes.divider} />\n            {displayAddNoteComponent &&\n              <React.Fragment>\n                <React.Suspense fallback={<CircularLoader />}>\n                  <AddNote setCurrentAuthOP={setCurrentAuthOP} \n                    setDisplayAddNoteComponent={setDisplayAddNoteComponent} />\n                </React.Suspense>\n                <Divider className={classes.divider} />\n              </React.Fragment>\n            }\n            <IconButton>\n              <WatchLaterIcon />\n            </IconButton>\n            <Conmentarium notebook={notebook.notebook} \n              loadNotes={loadNotes} \n              label='Recent' />\n            <IconButton>\n              <FavoriteIcon />\n            </IconButton>\n            <Conmentarium notebook={[]} \n              loadNotes={loadNotes} \n              label='Favorite' />\n            <IconButton>\n              <DeleteIcon />\n            </IconButton>\n            <IconButton>\n              <AutorenewIcon onClick={loadTrashedNotes} />\n            </IconButton>\n            <Conmentarium notebook={trashedNotes.notes} \n              loadNotes={loadTrashedNotes}\n              label='Trash' />\n          </React.Fragment>\n        }\n\t\t</React.Fragment>\n\t);\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    isAuthenticated: state.auth.currentUser.authenticated,\n    notebook: state.notebook,\n    trashedNotes: state.notebook.trashedNotes,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    loadNotes: () => dispatch(getNotes()),\n    loadTrashedNotes: () => dispatch(getTrashedNotes()),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);","import axios from 'axios'; \nimport {getCookie} from '../util/Cookies';\n\n// window origin - base url\nconst origin = window.location.origin;\n\n// Perform a simple handshake with the server to retrieve the\n// _csrf_token and use the it as the axios X-CSRFTOKEN header defaults\n// also set the axios base url to avoid redefinitions across requests\nlet csrftoken;\nlet csrftokenExists;\naxios(`${origin}/api/handshake`).then(response => {\n  if(response) {\n    // get _csrf_token token\n    csrftoken = getCookie('_csrf_token');\n    csrftokenExists = csrftoken ? true : false\n    axios.defaults.baseURL = origin;\n    axios.defaults.headers.common['X-CSRFTOKEN'] = csrftoken;\n  }\n})\n\n\nconst config = {\n  defaultPaletteColors: {\n    primary: {\n      light: '#484848',\n      main: '#212121',\n      dark: '#000000',\n    },\n    secondary: {\n      light: '#ffff6e',\n      main: '#009688',\n      dark: '#009692',\n    },\n  },\n  // these are the tokens required for backend \n  Tokens : {\n    csrf: {\n      exists: csrftokenExists,\n      token: csrftoken\n    }\n  },\n}\n\nexport default config;\n","export function getCookie(name) {\n    var cookieValue = null;\n    if (document.cookie && document.cookie !== '') {\n        var cookies = document.cookie.split(';');\n        for (var i = 0; i < cookies.length; i++) {\n            var cookie = cookies[i].trim();\n            // Does this cookie string begin with the name we want?\n            if (cookie.substring(0, name.length + 1) === (name + '=')) {\n                cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\n                break;\n            }\n        }\n    }\n    return cookieValue;\n}\n\nexport function setCookie(name, value, days) {\n    var expires = \"\";\n    if (days) {\n        var date = new Date();\n        date.setTime(date.getTime() + (days*24*60*60*1000));\n        expires = \"; expires=\" + date.toUTCString();\n    }\n    document.cookie = name + \"=\" + (value || \"\")  + expires + \"; path=/\";\n}\n\nexport function removeCookie(name) {\n    var expires = -1;\n    document.cookie = name + \"=\" + expires + \"; path=/\";\n}","import React, { useEffect } from 'react';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Grid from '@material-ui/core/Grid';\nimport Header from './components/Header/Header';\nimport Home from './containers/Home';\nimport { MuiThemeProvider, createMuiTheme, makeStyles } from '@material-ui/core/styles';\nimport config from './config';\nimport Notifications from 'react-notification-system-redux';\nimport { connect } from 'react-redux';\nimport { getCurrentUser } from './redux/actions/auth';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: \"auto\",\n    marginTop: theme.spacing(10),\n    marginLeft: theme.spacing(3),\n    marginRight: theme.spacing(3),\n    [theme.breakpoints.up(1100 + theme.spacing(3 * 2))]: {\n      width: 1100,\n      marginLeft: \"auto\",\n      marginRight: \"auto\"\n    }\n  },\n}));\n\n//Optional styling\nconst UINotificationsStyle = {\n  NotificationItem: { // Override the notification item\n    DefaultStyle: { // Applied to every notification, regardless of the notification level\n      margin: '5px 5px 2px 1px'\n    },\n  }\n};\n\nfunction App(props) {\n\n  const { loadUser, isAuthenticated, \n    notifications } = {...props};\n  const classes = useStyles();\n  const theme = createMuiTheme({\n    palette: {\n      type: 'light',\n      primary: config.defaultPaletteColors.primary,\n      secondary: config.defaultPaletteColors.secondary,\n      contrastThreshold: 3,\n      tonalOffset: 0.2,\n    },\n    typography: {\n      fontSize: 14,\n    },\n  });\n\n  useEffect(() => {\n    if(!isAuthenticated) loadUser();\n    // eslint-disable-next-line\n  }, [isAuthenticated]);\n\n  return (\n    <MuiThemeProvider theme={theme}>\n      <CssBaseline />\n      <Grid component=\"main\" className={classes.root}>\n        <Header />\n        <Notifications\n          notifications={notifications}\n          style={UINotificationsStyle}\n        />\n        <Home />\n      </Grid>\n    </MuiThemeProvider>\n  );\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    isAuthenticated: state.auth.currentUser.authenticated,\n    notifications: state.notifications,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    loadUser: () => dispatch(getCurrentUser()),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","import { LOAD_CURRENT_USER,\n\tLOAD_CURRENT_USER_SUCCESS,\n\tLOAD_CURRENT_USER_FAILURE, \n\n\tUSER_LOGIN,\n\tUSER_LOGIN_SUCCESS, \n\tUSER_LOGIN_FAILURE,\n\n\tUSER_SIGNUP,\n\tUSER_SIGNUP_SUCCESS,\n\tUSER_SIGNUP_FAILURE,\n\n\tUSER_LOGOUT,\n\tUSER_LOGOUT_SUCCESS,\n\tUSER_LOGOUT_FAILURE,\n\n\tRELOAD_USER_SUCCESS\n\t } from '../constants/auth';\n\n\nconst INITIAL_STATE = {\n\tcurrentUser: {\n\t\tauthenticated: false,\n\t\tuser: null,\n\t\tfresh: false,\n\t\tisLoading: false,\n\t\tisLoaded: false,\n\t},\n\tuserSubject: {\n\t\tsuccess: false,\n\t\tisLoading: false,\n\t\tisLoaded: false,\n\t}\n};\n\nfunction auth(state=INITIAL_STATE, action) {\n\n\tswitch (action.type){\n\n\t\tcase LOAD_CURRENT_USER: {\n\t\t\treturn {...state, \n\t\t\t\tcurrentUser: {...INITIAL_STATE.currentUser, \n\t\t\t\t\tisLoading: true\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tcase LOAD_CURRENT_USER_SUCCESS: {\n\t\t\treturn {...state, \n\t\t\t\tcurrentUser: {...state.currentUser,\n\t\t\t\t\tauthenticated: true, \n\t\t\t\t\tuser: action.payload.user,\n\t\t\t\t\tisLoaded: true, \n\t\t\t\t\tisLoading: false, \n\t\t\t\t\tfresh: true,\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tcase LOAD_CURRENT_USER_FAILURE: {\n\t\t\treturn {...state, \n\t\t\t\tcurrentUser: {...INITIAL_STATE.currentUser,\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tcase RELOAD_USER_SUCCESS: {\n\t\t\treturn {...state, \n\t\t\t\tcurrentUser: {...state.currentUser,\n\t\t\t\t\tauthenticated: true, \n\t\t\t\t\tuser: action.payload.currentUser,\n\t\t\t\t\tisLoaded: true, \n\t\t\t\t\tisLoading: false, \n\t\t\t\t\tfresh: true,\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tcase USER_LOGIN: {\n\t\t\treturn {...state, \n\t\t\t\tcurrentUser: {...state.currentUser, \n\t\t\t\t\tisLoading: true, \n\t\t\t\t\tisLoaded: false,\n\t\t\t\t\tfresh: false,\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tcase USER_LOGIN_SUCCESS: {\n\t\t\treturn {...state, \n\t\t\t\tcurrentUser: {...state.currentUser,\n\t\t\t\t\tauthenticated: true, \n\t\t\t\t\tuser: action.payload.user,\n\t\t\t\t\tisLoaded: true, \n\t\t\t\t\tisLoading: false, \n\t\t\t\t\tfresh: true,\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tcase USER_LOGIN_FAILURE: {\n\t\t\treturn {...state, \n\t\t\t\tcurrentUser: {...state.currentUser,\n\t\t\t\t\tisLoaded: true, \n\t\t\t\t\tisLoading: false, \n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tcase USER_SIGNUP: {\n\t\t\treturn {...state, \n\t\t\t\tuserSubject: {...INITIAL_STATE.userSubject, \n\t\t\t\t\tisLoading: true, \n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tcase USER_SIGNUP_SUCCESS: {\n\t\t\treturn {...state, \n\t\t\t\tuserSubject: {...INITIAL_STATE.userSubject,\n\t\t\t\t\tsuccess: true,\n\t\t\t\t\tisLoaded: true, \n\t\t\t\t\tisLoading: false, \n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tcase USER_SIGNUP_FAILURE: {\n\t\t\treturn {...state, \n\t\t\t\tuserSubject: {...INITIAL_STATE.userSubject,\n\t\t\t\t\tisLoaded: true, \n\t\t\t\t\tisLoading: false, \n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tcase USER_LOGOUT: {\n\t\t\treturn {...state, \n\t\t\t\tcurrentUser: {...state.currentUser, \n\t\t\t\t\tisLoading: true, \n\t\t\t\t\tisLoaded: false,\n\t\t\t\t\tfresh: false,\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tcase USER_LOGOUT_SUCCESS: {\n\t\t\treturn {...INITIAL_STATE,\n\t\t\t\tcurrentUser:{...INITIAL_STATE.currentUser, \n\t\t\t\t\tisLoading: false, \n\t\t\t\t\tauthenticated: false,\n\t\t\t\t\tuser: null\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tcase USER_LOGOUT_FAILURE: {\n\t\t\treturn {...INITIAL_STATE,\n\t\t\t\tcurrentUser:{...state.currentUser, \n\t\t\t\t\tisLoading: false, \n\t\t\t\t\tisLoaded: true\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}\n\nexport default auth;","import { FETCH_NOTE,\n\tFETCH_NOTE_SUCCESS, \n\tFETCH_NOTE_FAILURE,\n\tREFETCH_NOTE_SUCCESS,\n\tDELETE_NOTE_SUCCESS,\n\tFETCH_TRASHED_NOTES_SUCCESS,\n\tEMPTY_TRASH,\n\tDELETE_TRASHED_NOTE_SUCCESS,\n\tRESTORE_TRASHED_NOTE_SUCCESS,\n\t } from '../constants/notebook';\nimport { INITIATE_AUTH_CLEANUP } from '../constants/auth';\nimport { filterArrayWithId, concatArrayOfObjectsAndSortWithDateAsc } from '../methods';\n\nconst INITIAL_STATE = {\n\t\ttrashedNotes: {\n\t\t\tnotes: [],\n\t\t\tisLoading: false,\n\t\t\tisLoaded: false,\n\t\t\tcount: 0,\n\t\t},\n\t\tnotebook: [],\n\t\tcount: 0,\n\t\tisLoading: false,\n\t\tisLoaded: false,\n};\n\nfunction notebook(state=INITIAL_STATE, action) {\n\n\tswitch (action.type){\n\t\tcase FETCH_NOTE: {\n\t\t\treturn {...INITIAL_STATE, \n\t\t\t\t\tisLoading: true\n\t\t\t\t}\n\t\t\t}\n\t\tcase FETCH_NOTE_SUCCESS: {\n\t\t\treturn {...state,\n\t\t\t\t\tnotebook: concatArrayOfObjectsAndSortWithDateAsc(state.notebook, action.payload.notes),\n\t\t\t\t\tcount: state.notebook.length,\n\t\t\t\t\tisLoading: false,\n\t\t\t\t\tisLoaded: true, \n\t\t\t\t}\n\t\t\t}\n\t\tcase FETCH_NOTE_FAILURE: {\n\t\t\treturn {...state, \n\t\t\t\t\tisLoading: false,\n\t\t\t\t\tisLoaded: true, \n\t\t\t\t}\n\t\t\t}\n\t\tcase REFETCH_NOTE_SUCCESS: {\n\t\t\treturn {...state, \n\t\t\t\t\tnotebook: concatArrayOfObjectsAndSortWithDateAsc(state.notebook, action.payload.notes),\n\t\t\t\t\tcount: state.notebook.length,\n\t\t\t}\n\t\t}\n\t\tcase DELETE_NOTE_SUCCESS: {\n\t\t\treturn {...state,\n\t\t\t\t\tnotebook: filterArrayWithId(state.notebook, action.payload.note_id),\n\t\t\t\t\tcount: state.notebook.length,\n\t\t\t\t\tisLoading: false,\n\t\t\t\t\tisLoaded: true,\n\t\t\t\t\ttrashedNotes: {\n\t\t\t\t\t\tnotes: concatArrayOfObjectsAndSortWithDateAsc(state.trashedNotes.notes, [action.payload?.note]),\n\t\t\t\t\t\tcount: state.trashedNotes.notes.length,\n\t\t\t\t\t\tisLoading: false,\n\t\t\t\t\t\tisLoaded: true\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\tcase FETCH_TRASHED_NOTES_SUCCESS: {\n\t\t\treturn {...state,\n\t\t\t\t\ttrashedNotes: {\n\t\t\t\t\t\tnotes: action.payload?.notes || state.trashedNotes.notes,\n\t\t\t\t\t\tcount: state.trashedNotes.notes.length,\n\t\t\t\t\t\tisLoading: false,\n\t\t\t\t\t\tisLoaded: true\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\tcase DELETE_TRASHED_NOTE_SUCCESS: {\n\t\t\treturn {...state,\n\t\t\t\t\ttrashedNotes: {\n\t\t\t\t\t\tnotes: filterArrayWithId(state.trashedNotes.notes, action.payload.note_id),\n\t\t\t\t\t\tcount: state.trashedNotes.notes.length,\n\t\t\t\t\t\tisLoading: false,\n\t\t\t\t\t\tisLoaded: true\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\tcase RESTORE_TRASHED_NOTE_SUCCESS: {\n\t\t\treturn {...state,\n\t\t\t\t\tnotebook: concatArrayOfObjectsAndSortWithDateAsc(state.notebook, [action.payload.note]),\n\t\t\t\t\tcount: state.notebook.length,\n\t\t\t\t\tisLoading: false,\n\t\t\t\t\tisLoaded: true, \n\t\t\t\t\ttrashedNotes: {\n\t\t\t\t\t\tnotes: filterArrayWithId(state.trashedNotes.notes, action.payload.note_id),\n\t\t\t\t\t\tcount: state.trashedNotes.notes.length,\n\t\t\t\t\t\tisLoading: false,\n\t\t\t\t\t\tisLoaded: true\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\tcase EMPTY_TRASH: {\n\t\t\treturn {...state, \n\t\t\t\ttrashedNotes: {...INITIAL_STATE.trashedNotes}\n\t\t\t}\n\t\t}\n\t\tcase INITIATE_AUTH_CLEANUP: {\n\t\t\treturn INITIAL_STATE\n\t\t}\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}\n\nexport default notebook;\n","import { combineReducers } from 'redux';\nimport auth from './auth';\nimport notebook from './notebook';\nimport {reducer as notifications } from 'react-notification-system-redux';\n\nconst rootReducer = combineReducers({auth, notebook, notifications});\n\nexport default rootReducer;","import { createStore, compose, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport logger from 'redux-logger';\nimport rootReducer from './reducers';\n\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(rootReducer, composeEnhancer(applyMiddleware(thunk, logger)));\nexport default store;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\nimport * as serviceWorker from './serviceWorker';\n\nconst rootElement = document.getElementById(\"root\");\n\nReactDOM.render(\n\t<Provider store={store}>\n\t\t<App />\n\t</Provider>,\n\t rootElement);\n\nserviceWorker.unregister();\n","import React from \"react\";\n// react must be in scope for notificationTemplate's renderArray method\n// which includes jsx\n\nexport function updateItemInArray(array, newItem) {\n    let items = array.filter(item => item.id !== newItem.id );\n    items = [...items, newItem].sort( (a, b) => a.id-b.id);\n    return items;\n}\n\nexport function removeItemFromArray(array, itemId) {\n\treturn array.filter(item => item.id !== itemId)\n}\n\nexport function addObjectToArray(array, newItem) {\n\tconst checkIfExist = array.find( item => item.id !== newItem.id );\n\tif(checkIfExist){\n\t\treturn updateItemInArray(array, newItem)\n\t}\n\telse {\n\t\tconst newArray = [...array, newItem]\n\t\treturn newArray\n\t}\n}\n\nexport function updateObjectInArrayWithId(array, newItem) {\n\treturn array.map(item => {\n\t\tif (item.id !== newItem.id) {\n\t\t\t// This isn't the item we care about - keep it as-is\n\t\t\treturn item\n\t\t\t}\n\t\t// Otherwise, this is the one we want - return an updated value\n\t\treturn {\n\t\t...item,\n\t\t...newItem\n\t\t}\n\t})\n}\n\nexport function filterArrayWithId(array, itemId) {\n\treturn array.filter(item => {\n\t\tif (item.id !== itemId) {\n\t\t\t// This isn't the item we care about - keep it as-is\n\t\t\treturn item\n\t\t\t}\n\t\treturn false\n\t})\n}\n\nexport function filterArrayWithName(array, itemId) {\n\treturn array.filter(item => {\n\t\tif (item.name !== itemId) {\n\t\t\t// This isn't the item we care about - keep it as-is\n\t\t\treturn item\n\t\t\t}\n\t\treturn false\n\t})\n}\n\nexport function updateObjectInArrayWithName(array, newItem) {\n\treturn array.map(item => {\n\t\tif (item.name !== newItem.name) {\n\t\t\t// This isn't the item we care about - keep it as-is\n\t\t\treturn item\n\t\t\t}\n\t\t// Otherwise, this is the one we want - return an updated value\n\t\treturn {\n\t\t...item,\n\t\t...newItem\n\t\t}\n\t})\n}\n\nexport function concatArrayOfObjectsAndSortWithDateAsc(array, newArrayOfObjects=[]) {\n\tconst newArray = [...array, ...newArrayOfObjects]\n\tnewArray.sort(function(a, b) {\n\t\tif(a.date_updated && b.date_updated) {\n\t\t\treturn new Date(b.date_updated) - new Date(a.date_updated)\n\t\t}\n\t\telse if(a.date_created && b.date_created) {\n\t\t\treturn new Date(b.date_created) - new Date(a.date_created)\n\t\t}\n\t\telse if(a.date && b.date) {\n\t\t\treturn new Date(b.date) - new Date(a.date)\n\t\t}\n\t\telse {\n\t\t\treturn a - b\n\t\t}\n\t})\n\treturn newArray\n}\n\nexport function concatArrayOfObjectsAndSortWithDateDesc(array, newArrayOfObjects=[]) {\n\tconst newArray = [...array, ...newArrayOfObjects]\n\tnewArray.sort(function(a, b) {\n\t\tif(a.date_updated && b.date_updated) {\n\t\t\treturn new Date(a.date_updated) - new Date(b.date_updated)\n\t\t}\n\t\telse if(a.date_created && b.date_created) {\n\t\t\treturn new Date(a.date_created) - new Date(b.date_created)\n\t\t}\n\t\telse if(a.date && b.date) {\n\t\t\treturn new Date(a.date) - new Date(b.date)\n\t\t}\n\t\telse {\n\t\t\treturn a - b\n\t\t}\n\t})\n\treturn newArray\n}\n\nexport const notificationTemplate = {\n  title: '',\n  message: '',\n  position: 'bc',\n  autoDismiss: 2,\n  renderArray: (arr=[]) => (\n    <ul>\n      {arr.map(el => (\n        <li>{el}</li>\n      ))}\n    </ul>\n    ),\n};","import axios from 'axios';\n\nexport const fetchNotebookService = () => axios.get('/api/notebook');\nexport const fetchPaginatedNotebookService = page => axios.get(`/api/notebook/paginated?page=${page}`);\nexport const fetchNoteService = id => axios.get(`/api/notebook/${id}`);\nexport const createNoteService = formData => axios.post(`/api/notebook`, {...formData});\nexport const updateNoteService = formData => axios.put(`/api/notebook/${formData.id}`, {...formData});\nexport const deleteNoteService = id => axios.delete(`/api/notebook/${id}`);\nexport const fetchTrashedNotesService = () => axios.get('/api/notebook/trash');\nexport const emptyTrashService = () => axios.delete('/api/notebook/trash');\nexport const purgeTrashedNoteService = id => axios.delete(`/api/notebook/trash/${id}`);\nexport const restoreTrashedNoteService = id => axios.put(`/api/notebook/trash/${id}`);\n\n","import {\n\tFETCH_NOTE,\n\tFETCH_NOTE_SUCCESS,\n\tFETCH_NOTE_FAILURE,\n\tREFETCH_NOTE,\n\tREFETCH_NOTE_SUCCESS,\n\tREFETCH_NOTE_FAILURE,\n\tDELETE_NOTE,\n\tDELETE_NOTE_SUCCESS,\n\tDELETE_NOTE_FAILURE,\n\tFETCH_TRASHED_NOTES,\n\tFETCH_TRASHED_NOTES_SUCCESS,\n\tFETCH_TRASHED_NOTES_FAILURE,\n\tEMPTY_TRASH,\n\tDELETE_TRASHED_NOTE,\n\tDELETE_TRASHED_NOTE_SUCCESS,\n\tDELETE_TRASHED_NOTE_FAILURE,\n\tRESTORE_TRASHED_NOTE,\n\tRESTORE_TRASHED_NOTE_SUCCESS,\n\tRESTORE_TRASHED_NOTE_FAILURE,\n} from '../constants/notebook';\nimport { error as notificationError } from 'react-notification-system-redux';\nimport { fetchNotebookService, fetchNoteService, \n\tdeleteNoteService, fetchTrashedNotesService, \n\temptyTrashService, purgeTrashedNoteService, \n\trestoreTrashedNoteService } from '../../services/note-api';\nimport { concatArrayOfObjectsAndSortWithDateAsc } from '../methods';\n\nconst ActionCreatorFactory = (type, payload=null) => {\n\treturn {\n\t\ttype: type,\n\t\tpayload: payload\n\t}\n}\n\nconst fetchNotes = page => ActionCreatorFactory(FETCH_NOTE);\nconst fetchNotesSuccess = data => ActionCreatorFactory(FETCH_NOTE_SUCCESS, data);\nconst fetchNotesError = error => ActionCreatorFactory(FETCH_NOTE_FAILURE, error);\n\nexport function getNotes() {\n\treturn (dispatch) => {\n\t\tdispatch(fetchNotes());\n\t\tfetchNotebookService()\n\t\t.then((response) => {\n\t\t\tif (response.status !== 200) {\n\t\t\t\tdispatch(fetchNotesError(response));\n\t\t\t}\n\t\t\treturn response;\n\t\t})\n\t\t.then((response) => {\n\t\t\tdispatch(fetchNotesSuccess(response.data))\n\t\t})\n\t\t.catch((error) => {\n\t\t\tconsole.log(\"error =>\", error)\n\t\t\tdispatch(fetchNotesError(error));\n\t\t\tdispatch(notificationError({'title': error.response.data.message || \n\t\t\t\terror.request.statusText,\n\t\t\t\t'message': `Failed to load notebooks`,\n\t\t\t}));\n\t\t})\n\t};\n}\n\nexport const setNote = (note) => {\n\treturn (dispatch, getState) => {\n\t\tif(note) {\n\t\t\tlet notes = getState().notebook.notebook;\n\t\t\tnotes = concatArrayOfObjectsAndSortWithDateAsc(notes, [note])\n\t\t\tdispatch(fetchNotesSuccess({notes}));\n\t\t\treturn;\n\t\t}\n\t}\n}\n\nconst refetchNotes = page => ActionCreatorFactory(REFETCH_NOTE);\nconst refetchNotesSuccess = data => ActionCreatorFactory(REFETCH_NOTE_SUCCESS, data);\nconst refetchNotesError = error => ActionCreatorFactory(REFETCH_NOTE_FAILURE, error);\n\nexport const refetchNote = id => {\n\treturn (dispatch) => {\n\t\tdispatch(refetchNotes());\n\t\tfetchNoteService(id)\n\t\t.then((response) => {\n\t\t\tif (response.status !== 200) {\n\t\t\t\tdispatch(refetchNotesError(response));\n\t\t\t}\n\t\t\treturn response;\n\t\t})\n\t\t.then((response) => {\n\t\t\tdispatch(refetchNotesSuccess(response.data));\n\t\t})\n\t\t.catch((error) => {\n\t\t\tdispatch(refetchNotesError(error));\n\t\t\tdispatch(notificationError({'title': error.response.data.message || \n\t\t\t\terror.request.statusText,\n\t\t\t\t'message': `Failed to refetch note`,\n\t\t\t}));\n\t\t})\n\t}\n}\n\nconst removeNote = page => ActionCreatorFactory(DELETE_NOTE);\nconst removeNoteSuccess = data => ActionCreatorFactory(DELETE_NOTE_SUCCESS, data);\nconst removeNoteError = error => ActionCreatorFactory(DELETE_NOTE_FAILURE, error);\n\nexport const deleteNote = id => {\n\treturn (dispatch) => {\n\t\tdispatch(removeNote());\n\t\tdeleteNoteService(id)\n\t\t.then((response) => {\n\t\t\tif (response.status !== 200) {\n\t\t\t\tdispatch(removeNoteError(response));\n\t\t\t}\n\t\t\treturn response;\n\t\t})\n\t\t.then((response) => {\n\t\t\tdispatch(removeNoteSuccess({note: response.data?.note, note_id: id}));\n\t\t})\n\t\t.catch((error) => {\n\t\t\tdispatch(removeNoteError(error));\n\t\t\tdispatch(notificationError({'title': error.response.data.message || \n\t\t\t\terror.request.statusText,\n\t\t\t\t'message': `Failed to delete note`,\n\t\t\t}));\n\t\t})\n\t}\n}\n\nconst fetchTrashedNotes = page => ActionCreatorFactory(FETCH_TRASHED_NOTES);\nconst fetchTrashedNotesSuccess = data => ActionCreatorFactory(FETCH_TRASHED_NOTES_SUCCESS, data);\nconst fetchTrashedNotesError = error => ActionCreatorFactory(FETCH_TRASHED_NOTES_FAILURE, error);\n\nexport function getTrashedNotes() {\n\treturn (dispatch) => {\n\t\tdispatch(fetchTrashedNotes());\n\t\tfetchTrashedNotesService()\n\t\t.then((response) => {\n\t\t\tif (response.status !== 200) {\n\t\t\t\tdispatch(fetchTrashedNotesError(response));\n\t\t\t}\n\t\t\treturn response;\n\t\t})\n\t\t.then((response) => {\n\t\t\tconst notes = concatArrayOfObjectsAndSortWithDateAsc(response.data.notes || []);\n\t\t\tdispatch(fetchTrashedNotesSuccess({notes}))\n\t\t})\n\t\t.catch((error) => {\n\t\t\tconsole.log(\"error =>\", error)\n\t\t\tdispatch(fetchTrashedNotesError(error));\n\t\t\tdispatch(notificationError({'title': error.response.data.message || \n\t\t\t\terror.request.statusText,\n\t\t\t\t'message': `Failed to load notebooks`,\n\t\t\t}));\n\t\t})\n\t};\n}\n\nconst emptyTrashSuccess = data => ActionCreatorFactory(EMPTY_TRASH, data);\n\nexport const emptyTrash = () => {\n\treturn (dispatch) => {\n\t\tdispatch(removeNote());\n\t\temptyTrashService()\n\t\t.then((response) => {\n\t\t\treturn response;\n\t\t})\n\t\t.then((response) => {\n\t\t\tdispatch(emptyTrashSuccess(response.data));\n\t\t})\n\t\t.catch((error) => {\n\t\t\tdispatch(notificationError({'title': error.response.data.message || \n\t\t\t\terror.request.statusText,\n\t\t\t\t'message': `Failed to delete note`,\n\t\t\t}));\n\t\t})\n\t}\n}\n\nconst purgeTrashedNote = page => ActionCreatorFactory(DELETE_TRASHED_NOTE);\nconst purgeTrashedNoteSuccess = data => ActionCreatorFactory(DELETE_TRASHED_NOTE_SUCCESS, data);\nconst purgeTrashedNoteError = error => ActionCreatorFactory(DELETE_TRASHED_NOTE_FAILURE, error);\n\nexport const purgeNote = id => {\n\treturn (dispatch) => {\n\t\tdispatch(purgeTrashedNote());\n\t\tpurgeTrashedNoteService(id)\n\t\t.then((response) => {\n\t\t\tif (response.status !== 200) {\n\t\t\t\tdispatch(purgeTrashedNoteError(response));\n\t\t\t}\n\t\t\treturn response;\n\t\t})\n\t\t.then((response) => {\n\t\t\tdispatch(purgeTrashedNoteSuccess(response.data));\n\t\t})\n\t\t.catch((error) => {\n\t\t\tdispatch(purgeTrashedNoteError(error));\n\t\t\tdispatch(notificationError({'title': error.response.data.message || \n\t\t\t\terror.request.statusText,\n\t\t\t\t'message': `Failed to purge note`,\n\t\t\t}));\n\t\t})\n\t}\n}\n\nconst restoreNote = page => ActionCreatorFactory(RESTORE_TRASHED_NOTE);\nconst restoreNoteSuccess = data => ActionCreatorFactory(RESTORE_TRASHED_NOTE_SUCCESS, data);\nconst restoreNoteError = error => ActionCreatorFactory(RESTORE_TRASHED_NOTE_FAILURE, error);\n\nexport function restoreTrashedNote(id) {\n\treturn (dispatch) => {\n\t\tdispatch(restoreNote());\n\t\trestoreTrashedNoteService(id)\n\t\t.then((response) => {\n\t\t\tif (response.status !== 200) {\n\t\t\t\tdispatch(restoreNoteError(response));\n\t\t\t}\n\t\t\treturn response;\n\t\t})\n\t\t.then((response) => {\n\t\t\tdispatch(restoreNoteSuccess({note: response.data?.note, note_id: id}));\n\t\t})\n\t\t.catch((error) => {\n\t\t\tdispatch(restoreNoteError(error));\n\t\t\tdispatch(notificationError({'title': error.response.data.message || \n\t\t\t\terror.request.statusText,\n\t\t\t\t'message': `Failed to refetch note`,\n\t\t\t}));\n\t\t})\n\t}\n}","import { LOAD_CURRENT_USER,\n\tLOAD_CURRENT_USER_SUCCESS,\n\tLOAD_CURRENT_USER_FAILURE, \n\n\tUSER_LOGIN,\n\tUSER_LOGIN_SUCCESS, \n\tUSER_LOGIN_FAILURE,\n\n\tUSER_SIGNUP,\n\tUSER_SIGNUP_SUCCESS,\n\tUSER_SIGNUP_FAILURE,\n\n\tUSER_LOGOUT,\n\tUSER_LOGOUT_SUCCESS,\n\tUSER_LOGOUT_FAILURE,\n\n\tINITIATE_AUTH_CLEANUP } from '../constants/auth';\n\nimport { login, createUser, logoutCurrentUser, fetchCurrentUser } from '../../services/auth-api';\nimport { error as notificationError, \nremoveAll as notificationRemoveAll } from 'react-notification-system-redux';\nimport { notificationTemplate } from '../methods';\n\n\nconst ActionCreatorFactory = (type, payload=null) => {\n\treturn {\n\t\ttype: type,\n\t\tpayload: payload\n\t}\n}\n\nconst loadUserRequest = () => ActionCreatorFactory(LOAD_CURRENT_USER);\nconst loadUserSuccess = data => ActionCreatorFactory(LOAD_CURRENT_USER_SUCCESS, data);\nconst loadUserError = () => ActionCreatorFactory(LOAD_CURRENT_USER_FAILURE);\n\nconst userLoginRequest = () => \tActionCreatorFactory(USER_LOGIN);\nconst userLoginSuccess = data => ActionCreatorFactory(USER_LOGIN_SUCCESS, data);\nconst userLoginError = error => ActionCreatorFactory(USER_LOGIN_FAILURE, error);\n\nconst userSignupRequest = () => ActionCreatorFactory(USER_SIGNUP);\nconst userSignupSuccess = data => ActionCreatorFactory(USER_SIGNUP_SUCCESS, data);\nconst userSignupError = error => ActionCreatorFactory(USER_SIGNUP_FAILURE, error);\n\nconst userLogoutRequest = () => ActionCreatorFactory(USER_LOGOUT);\nconst userLogoutError = error => ActionCreatorFactory(USER_LOGOUT_FAILURE, error);\nconst userLogoutSuccess = data => ActionCreatorFactory(USER_LOGOUT_SUCCESS, data);\n\nconst initiateAuthCleanup = () => ActionCreatorFactory(INITIATE_AUTH_CLEANUP);\n\nexport function getCurrentUser(){\n\treturn (dispatch) => {\n\t\tconst currentUserId = JSON.parse(localStorage.getItem('currentUser'));\n\t\tif (currentUserId !== null && \n\t\t\tcurrentUserId !== undefined && \n\t\t\t!isNaN(parseInt(currentUserId))\n\t\t\t) {\n\t\t\tdispatch(loadUserRequest());\n\t\t\tfetchCurrentUser(currentUserId)\n\t\t\t.then((response) => {\n\t\t\t\tif (response.status !== 200) {\n\t\t\t\t\tdispatch(loadUserError());\n\t\t\t\t}\n\t\t\t\treturn response\n\t\t\t})\n\t\t\t.then((response) => {\n\t\t\t\tdispatch(loadUserSuccess(response.data));\n\t\t\t\tdispatch(initiateAuthCleanup());\n\t\t\t})\n\t\t\t.catch(() => {\n\t\t\t\tdispatch(loadUserError());\n\t\t\t})\n\n\t\t}\n\t};\n}\n\nexport function authenticate(formData) {\n\treturn (dispatch) => {\n\t\tdispatch(userLoginRequest());\n\t\tlogin(formData)\n\t\t.then((response) => {\n\t\t\tif (response.status !== 200) {\n\t\t\t\tdispatch(userLoginError(response));\n\t\t\t}\n\t\t\treturn response;\n\t\t})\n\t\t.then((response) => {\n\t\t\tdispatch(userLoginSuccess(response.data));\n\t\t\tdispatch(initiateAuthCleanup());\n\t\t\tdispatch(notificationRemoveAll());\n\t\t\tlocalStorage.setItem('currentUser', JSON.stringify(response.data.user.id));\n\t\t})\n\t\t.catch((error) => {\n\t\t\tdispatch(userLoginError(error));\n\t\t\tdispatch(notificationError({'title': error.response.data.message || \n\t\t\t\terror.request.statusText,\n\t\t\t\t'message': `Failed to sign in`,\n\t\t\t\t'children': notificationTemplate.renderArray(error.response?.data?.errors),\n\t\t\t}));\n\t\t})\n\t};\n}\n\nexport function register(formData) {\n\treturn (dispatch) => {\n\t\tdispatch(userSignupRequest());\n\t\tcreateUser(formData)\n\t\t.then((response) => {\n\t\t\tif (response.status !== 200) {\n\t\t\t\tdispatch(userSignupError(response));\n\t\t\t}\n\t\t\treturn response;\n\t\t})\n\t\t.then((response) => {\n\t\t\tdispatch(userSignupSuccess(response.data));\n\t\t\tdispatch(notificationRemoveAll());\n\t\t})\n\t\t.catch((error) => {\n\t\t\tdispatch(userSignupError(error));\n\t\t\tdispatch(notificationError({'title': error.response.data.message || \n\t\t\t\terror.request.statusText,\n\t\t\t\t'message': `Failed to sign up`,\n\t\t\t\t'children': notificationTemplate.renderArray(error.response?.data?.errors),\n\t\t\t}));\n\t\t})\n\t};\n}\n\nexport function logout() {\n\treturn (dispatch) => {\n\t\tdispatch(userLogoutRequest());\n\t\tlogoutCurrentUser()\n\t\t.then((response) => {\n\t\t\tif (response.status !== 200) {\n\t\t\t\tdispatch(userLogoutError(response));\n\t\t\t}\n\t\t\treturn response;\n\t\t})\n\t\t.then((response) => {\n\t\t\tlocalStorage.removeItem('currentUser');\n\t\t\tdispatch(userLogoutSuccess(response.data));\n\t\t\tdispatch(notificationRemoveAll());\n\t\t\tdispatch(initiateAuthCleanup());\n\t\t})\n\t\t.catch((error) => {\n\t\t\tdispatch(userLogoutError(error));\n\t\t\tdispatch(notificationError({'title': error.response.data.message || \n\t\t\t\terror.request.statusText,\n\t\t\t\t'message': `Failed to logout up`,\n\t\t\t}));\n\t\t})\n\t};\n}\n","import axios from 'axios';\n\nexport const fetchUser = id => axios.get(`/api/users/${id}`);\nexport const fetchCurrentUser = userId => axios(`/api/auth/current_user/${userId}`);\nexport const createUser = formData => axios.post(`/api/auth/signup`, {...formData});\nexport const login = formData => axios.post(`/api/auth/signin`, {...formData});\nexport const logoutCurrentUser = () => axios.get(`/api/auth/logout`);\n","export const range = (start, stop, step=1) => \nArray.from({ length: (stop - start) / step }, (_, i) => start + (i * step));\n\nexport const truncate = (what, length=100) => \n  what !== null && what !== undefined \n  \t&& (what.length < length) ? what : what.substring(0, length) + '..';\n\nexport const changeDocumentTitle = title => window.document.title = title;\n","export const USER_LOGIN = 'USER_LOGIN';\nexport const USER_LOGIN_SUCCESS = 'USER_LOGIN_SUCCESS';\nexport const USER_LOGIN_FAILURE = 'USER_LOGIN_FAILURE';\n\nexport const USER_SIGNUP = 'USER_SIGNUP';\nexport const USER_SIGNUP_SUCCESS = 'USER_SIGNUP_SUCCESS';\nexport const USER_SIGNUP_FAILURE = 'USER_SIGNUP_FAILURE';\n\nexport const LOAD_CURRENT_USER = 'LOAD_CURRENT_USER';\nexport const LOAD_CURRENT_USER_SUCCESS = 'LOAD_CURRENT_USER_SUCCESS';\nexport const LOAD_CURRENT_USER_FAILURE = 'LOAD_CURRENT_USER_FAILURE';\n\nexport const USER_LOGOUT = 'USER_LOGOUT';\nexport const USER_LOGOUT_SUCCESS = 'USER_LOGOUT_SUCCESS';\nexport const USER_LOGOUT_FAILURE = 'USER_LOGOUT_FAILURE';\n\nexport const RELOAD_USER = 'RELOAD_USER';\nexport const RELOAD_USER_SUCCESS = 'RELOAD_USER_SUCCESS';\nexport const RELOAD_USER_FAILURE = 'RELOAD_USER_FAILURE';\n\nexport const INITIATE_AUTH_CLEANUP = 'INITIATE_AUTH_CLEANUP';\n\nexport const ACTIONS = {\n\tUSER_LOGIN,\n\tUSER_LOGIN_SUCCESS,\n\tUSER_LOGIN_FAILURE,\n\tLOAD_CURRENT_USER,\n\tLOAD_CURRENT_USER_SUCCESS,\n\tLOAD_CURRENT_USER_FAILURE,\n\tUSER_SIGNUP,\n\tUSER_SIGNUP_SUCCESS,\n\tUSER_SIGNUP_FAILURE,\n\tUSER_LOGOUT,\n\tUSER_LOGOUT_SUCCESS,\n\tUSER_LOGOUT_FAILURE,\n\tINITIATE_AUTH_CLEANUP,\n\tRELOAD_USER,\n\tRELOAD_USER_SUCCESS,\n\tRELOAD_USER_FAILURE,\n};","\nconst noteColors = [\n\t\"rgb(76 175 80 / 22%)\",\n\t\"rgb(156 39 176 / 33%)\",\n\t\"rgb(233 30 99 / 53%)\",\n\t\"rgb(0 150 136 / 35%)\",\n\t\"#ff572275\",\n\t\"rgb(33 150 243 / 34%)\",\n\t\"#ffeb3b4d\",\n  \"rgb(103 58 183 / 45%)\"\n];\n\nexport { noteColors };"],"sourceRoot":""}