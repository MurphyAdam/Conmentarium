{"version":3,"sources":["components/Auth/SignUp.jsx"],"names":["useStyles","makeStyles","theme","root","marginBottom","spacing","display","flexDirection","alignItems","paper","margin","avatar","border","form","width","marginTop","submit","connect","state","userSubject","auth","isAuthenticated","currentUser","authenticated","dispatch","signUp","payload","register","props","setCurrentAuthOP","changeDocumentTitle","classes","useState","username","setUsername","email","setEmail","password","setPassword","useEffect","success","item","xs","sm","md","className","noValidate","container","variant","style","required","fullWidth","id","label","name","value","onChange","target","autoComplete","type","onClick","e","preventDefault","disabled","length","isLoading","color"],"mappings":"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","file":"static/js/4.9b1eb82e.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Grid from '@material-ui/core/Grid';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { connect } from 'react-redux';\nimport { register } from '../../redux/actions/auth';\nimport { changeDocumentTitle } from '../../util/methods';\nimport PropTypes from 'prop-types';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    marginBottom: theme.spacing(10),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  paper: {\n    margin: theme.spacing(4, 4),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    border: '1px solid #009688',\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(2, 0),\n  },\n}));\n\nconst SignUp = (props) => {\n\n  const { isAuthenticated, userSubject, signUp, setCurrentAuthOP } = {...props};\n  changeDocumentTitle(\"Conmentarium - Sign up\");\n  const classes = useStyles();\n  const [username, setUsername] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  useEffect(() => {\n    if(userSubject.success){\n      setUsername('');\n      setEmail('');\n      setPassword('');\n    }\n  }, [isAuthenticated, userSubject]);\n\n  const performSignUp = e => {\n    e.preventDefault();\n    signUp({username, email, password});\n  };\n\n  const isEnabledToSubmit = () => {\n    if(username.length >= 4 &&\n      email.length && password.length >= 8) return true;\n    else return false;\n  }\n\n  return (\n    <Grid item xs={12} sm={6} md={6}>\n      <div className={classes.paper}>\n        <form className={classes.form} noValidate>\n          <Grid container spacing={1}>\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                margin=\"normal\"\n                style={{ margin: 5 }}\n                required\n                fullWidth\n                id=\"username\"\n                label=\"Username\"\n                name=\"username\"\n                value={username}\n                onChange={({ target: { value } }) => setUsername(value)}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                margin=\"normal\"\n                style={{ margin: 5 }}\n                required\n                fullWidth\n                id=\"email\"\n                label=\"Email\"\n                name=\"email\"\n                value={email}\n                onChange={({ target: { value } }) => setEmail(value)}\n                autoComplete=\"email\"\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                margin=\"normal\"\n                style={{ margin: 5 }}\n                required\n                fullWidth\n                name=\"password\"\n                label=\"Password\"\n                type=\"password\"\n                value={password}\n                onChange={({ target: { value } }) => setPassword(value)}\n                id=\"password\"\n                autoComplete=\"current-password\"\n              />\n            </Grid>\n        </Grid>\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            onClick={performSignUp}\n            disabled={!isEnabledToSubmit()  || userSubject.isLoading}\n            color=\"secondary\"\n            className={classes.submit}\n          >\n          {!userSubject.isLoading\n            ? \"Sign up\" : \"Signing up...\"\n          }\n          </Button>\n          <Grid container>\n            <Grid item>\n              <Button \n                color=\"secondary\"\n                variant=\"body2\"\n                onClick={() => setCurrentAuthOP(\"SignIn\")}>\n                Already have an account? Sign in\n              </Button>\n            </Grid>\n          </Grid>\n        </form>\n      </div>\n    </Grid>\n  );\n}\n\nSignUp.propTypes = {\n  userSubject: PropTypes.object.isRequired,\n  isAuthenticated: PropTypes.bool.isRequired,\n  signUp: PropTypes.func.isRequired\n};\n\n\nconst mapStateToProps = (state) => {\n  return {\n    userSubject: state.auth.userSubject,\n    isAuthenticated: state.auth.currentUser.authenticated,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    signUp: (payload) => dispatch(register(payload))\n  };\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp);\n"],"sourceRoot":""}