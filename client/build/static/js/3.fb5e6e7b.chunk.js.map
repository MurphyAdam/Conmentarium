{"version":3,"sources":["components/Auth/SignIn.jsx"],"names":["useStyles","makeStyles","theme","root","marginBottom","spacing","display","flexDirection","alignItems","paper","margin","avatar","border","form","width","marginTop","submit","connect","state","currentUser","auth","isAuthenticated","authenticated","dispatch","login","payload","authenticate","props","changeDocumentTitle","setCurrentAuthOP","classes","useState","emailOrUsername","setEmailOrUsername","password","setPassword","isEnabledToSubmit","length","item","xs","sm","md","className","noValidate","container","variant","required","fullWidth","id","label","name","value","onChange","target","autoComplete","autoFocus","type","onClick","e","preventDefault","disabled","isLoading","color"],"mappings":"4MAWMA,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJC,aAAcF,EAAMG,QAAQ,GAC5BC,QAAS,OACTC,cAAe,SACfC,WAAY,UAEdC,MAAO,CACLC,OAAQR,EAAMG,QAAQ,GACtBC,QAAS,OACTC,cAAe,SACfC,WAAY,UAEdG,OAAQ,CACND,OAAQR,EAAMG,QAAQ,GACtBO,OAAQ,qBAEVC,KAAM,CACJC,MAAO,OACPC,UAAWb,EAAMG,QAAQ,IAE3BW,OAAQ,CACNN,OAAQR,EAAMG,QAAQ,EAAG,QAsGdY,6BAZS,SAACC,GACvB,MAAO,CACLC,YAAaD,EAAME,KAAKD,YACxBE,gBAAiBH,EAAME,KAAKD,YAAYG,kBAIjB,SAACC,GAC1B,MAAO,CACLC,MAAO,SAACC,GAAD,OAAaF,EAASG,YAAaD,QAG/BR,EAlGA,SAACU,GAEdC,YAAoB,0BAFI,qBAG6BD,GAA7CR,EAHgB,EAGhBA,YAAaK,EAHG,EAGHA,MAAOK,EAHJ,EAGIA,iBACtBC,EAAU9B,IAJQ,EAKsB+B,mBAAS,IAL/B,mBAKjBC,EALiB,KAKAC,EALA,OAMQF,mBAAS,IANjB,mBAMjBG,EANiB,KAMPC,EANO,KAalBC,EAAoBJ,EAAgBK,QAAU,GAAKH,EAASG,QAAU,EAE5E,OACE,kBAAC,IAAD,CAAMC,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,GAAI,GAC5B,yBAAKC,UAAWZ,EAAQrB,OACtB,0BAAMiC,UAAWZ,EAAQjB,KAAM8B,YAAU,GACvC,kBAAC,IAAD,CAAMC,WAAS,EAACvC,QAAS,GACvB,kBAAC,IAAD,CAAMiC,MAAI,EAACC,GAAI,IACb,kBAAC,IAAD,CACEM,QAAQ,WACRnC,OAAO,SACPoC,UAAQ,EACRC,WAAS,EACTC,GAAG,kBACHC,MAAM,oBACNC,KAAK,kBACLC,MAAOnB,EACPoB,SAAU,gBAAaD,EAAb,EAAGE,OAAUF,MAAb,OAA2BlB,EAAmBkB,IACxDG,aAAa,QACbC,WAAS,KAGb,kBAAC,IAAD,CAAMjB,MAAI,EAACC,GAAI,IACb,kBAAC,IAAD,CACEM,QAAQ,WACRnC,OAAO,SACPoC,UAAQ,EACRC,WAAS,EACTG,KAAK,WACLD,MAAM,WACNO,KAAK,WACLL,MAAOjB,EACPkB,SAAU,gBAAaD,EAAb,EAAGE,OAAUF,MAAb,OAA2BhB,EAAYgB,IACjDH,GAAG,WACHM,aAAa,uBAInB,kBAAC,IAAD,CACEE,KAAK,SACLT,WAAS,EACTF,QAAQ,YACRY,QA/CW,SAAAC,GACnBA,EAAEC,iBACFnC,EAAM,CAACQ,kBAAiBE,cA8ChB0B,UAAWxB,GAAqBjB,EAAY0C,UAC5CC,MAAM,YACNpB,UAAWZ,EAAQd,QAEnBG,EAAY0C,UACE,gBAAZ,WAGJ,kBAAC,IAAD,CAAMjB,WAAS,GACb,kBAAC,IAAD,CAAMN,MAAI,GACR,kBAAC,IAAD,CACEwB,MAAM,YACNjB,QAAQ,QACRY,QAAS,kBAAM5B,EAAiB,YAHlC","file":"static/js/3.fb5e6e7b.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Grid from '@material-ui/core/Grid';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport { connect } from 'react-redux';\nimport { authenticate } from '../../redux/actions/auth';\nimport { changeDocumentTitle } from '../../util/methods';\nimport PropTypes from 'prop-types';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    marginBottom: theme.spacing(5),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  paper: {\n    margin: theme.spacing(2),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    border: '1px solid #009688',\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(2, 0),\n  },\n}));\n\nconst SignIn = (props) => {\n\n  changeDocumentTitle(\"Conmentarium - Sign in\");\n  const { currentUser, login, setCurrentAuthOP } = {...props};\n  const classes = useStyles();\n  const [emailOrUsername, setEmailOrUsername] = useState('');\n  const [password, setPassword] = useState('');\n\n  const performLogin = e => {\n    e.preventDefault();\n    login({emailOrUsername, password});\n  };\n\n  const isEnabledToSubmit = emailOrUsername.length >= 4 && password.length >= 8;\n\n  return (\n    <Grid item xs={12} sm={6} md={6}>\n      <div className={classes.paper}>\n        <form className={classes.form} noValidate>\n          <Grid container spacing={1}>\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                margin=\"normal\"\n                required\n                fullWidth\n                id=\"emailOrUsername\"\n                label=\"Email or Username\"\n                name=\"emailOrUsername\"\n                value={emailOrUsername}\n                onChange={({ target: { value } }) => setEmailOrUsername(value)}\n                autoComplete=\"email\"\n                autoFocus\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                margin=\"normal\"\n                required\n                fullWidth\n                name=\"password\"\n                label=\"Password\"\n                type=\"password\"\n                value={password}\n                onChange={({ target: { value } }) => setPassword(value)}\n                id=\"password\"\n                autoComplete=\"current-password\"\n              />\n            </Grid>\n        </Grid>\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            onClick={performLogin}\n            disabled={!isEnabledToSubmit || currentUser.isLoading}\n            color=\"secondary\"\n            className={classes.submit}\n          >\n          {!currentUser.isLoading\n            ? \"Sign in\" : \"Signing in...\"\n          }\n          </Button>\n          <Grid container>\n            <Grid item>\n              <Button \n                color=\"secondary\"\n                variant=\"body2\" \n                onClick={() => setCurrentAuthOP(\"SignUp\")} >\n                Create an account instead?\n              </Button>\n            </Grid>\n          </Grid>\n        </form>\n      </div>\n    </Grid>\n  );\n}\n\nSignIn.propTypes = {\n  currentUser: PropTypes.object.isRequired,\n  isAuthenticated: PropTypes.bool.isRequired,\n  login: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    currentUser: state.auth.currentUser,\n    isAuthenticated: state.auth.currentUser.authenticated,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    login: (payload) => dispatch(authenticate(payload))\n  };\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn);\n"],"sourceRoot":""}