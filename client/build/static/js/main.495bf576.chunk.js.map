{"version":3,"sources":["components/Header/NavBar.jsx","components/Header/Header.jsx","components/Note/EditNote.jsx","components/Note/NoteBookCard.jsx","components/Conmentarium.jsx","containers/Home.jsx","config/index.js","util/Cookies.js","App.jsx","redux/reducers/auth.js","redux/reducers/notebook.js","redux/reducers/index.js","redux/store.js","serviceWorker.js","index.jsx","redux/constants/notebook.js","redux/methods/index.js","services/note-api.js","redux/actions/notebook.js","util/methods.js","redux/actions/auth.js","services/auth-api.js","constants.js","redux/constants/auth.js"],"names":["useStyles","makeStyles","theme","grow","flexGrow","margin","spacing","appBar","zIndex","Toolbar","title","fontSize","textTransform","breakpoints","up","display","PrimaryAppBar","props","classes","className","AppBar","position","variant","Typography","noWrap","Button","color","Header","NavBar","root","width","shape","height","shapeCircle","borderRadius","colors","card","flexDirection","connect","state","dispatch","refetchNote","id","addNotification","data","level","note","handleToggleActions","useState","body","tags","noteUpdate","setNoteUpdate","isLoading","setIsLoading","handleSubmit","event","a","preventDefault","updateNote","response","notificationTemplate","message","notificationSuccess","request","statusText","notificationError","handleFieldChange","target","name","value","Circle","clsx","style","background","onClick","handleColorChange","Card","noValidate","autoComplete","TextField","label","multiline","rowsMax","onChange","Breadcrumbs","separator","noteColors","map","CardActions","IconButton","disabled","icon","cardContent","NoteBookCard","toggleDisplay","setToggleDisplay","toggleEdit","setToggleEdit","action","Grid","item","key","xs","sm","md","CardContent","gutterBottom","component","truncate","marginRight","cardGrid","paddingTop","paddingBottom","Conmentarium","notebook","Fragment","length","container","SignIn","lazy","SignUp","AddNote","boxShadow","cardDetails","flex","cardMedia","minWidth","textDecoration","palette","secondary","main","divider","mapLazyComponents","isAuthenticated","auth","currentUser","authenticated","loadNotes","getNotes","currentAuthOP","setCurrentAuthOP","displayAddNoteComponent","setDisplayAddNoteComponent","AuthComponent","useEffect","isError","count","Divider","Suspense","fallback","Paper","paragraph","href","rel","aria-label","CardMedia","image","csrftoken","csrftokenExists","origin","window","location","axios","then","cookieValue","document","cookie","cookies","split","i","trim","substring","decodeURIComponent","getCookie","defaults","baseURL","headers","common","config","defaultPaletteColors","primary","light","dark","Tokens","csrf","exists","token","marginTop","marginLeft","UINotificationsStyle","NotificationItem","DefaultStyle","notifications","loadUser","getCurrentUser","createMuiTheme","type","contrastThreshold","tonalOffset","typography","CssBaseline","INITIAL_STATE","user","fresh","isLoaded","errors","error","userSubject","success","LOAD_CURRENT_USER","LOAD_CURRENT_USER_SUCCESS","payload","LOAD_CURRENT_USER_FAILURE","RELOAD_USER_SUCCESS","USER_LOGIN","USER_LOGIN_SUCCESS","USER_LOGIN_FAILURE","USER_SIGNUP","USER_SIGNUP_SUCCESS","USER_SIGNUP_FAILURE","USER_LOGOUT","USER_LOGOUT_SUCCESS","USER_LOGOUT_FAILURE","FETCH_NOTE","FETCH_NOTE_SUCCESS","notes","FETCH_NOTE_FAILURE","REFETCH_NOTE_SUCCESS","DELETE_NOTE","DELETE_NOTE_SUCCESS","removeItemFromArray","note_id","DELETE_NOTE_FAILURE","INITIATE_AUTH_CLEANUP","rootReducer","combineReducers","composeEnhancer","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","logger","Boolean","hostname","match","rootElement","getElementById","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister","catch","console","REFETCH_NOTE","REFETCH_NOTE_FAILURE","array","itemId","filter","concatArrayOfObjectsAndSortWithDateAsc","newArrayOfObjects","newArray","sort","b","date_updated","Date","date_created","date","autoDismiss","renderArray","arr","el","fetchNotebook","get","fetchNote","createNote","formData","post","put","ActionCreatorFactory","fetchNotesSuccess","fetchNotesError","refetchNotesError","getState","status","log","setNote","what","undefined","changeDocumentTitle","loadUserError","userLoginError","userSignupError","initiateAuthCleanup","userId","currentUserId","JSON","parse","localStorage","getItem","isNaN","parseInt","authenticate","login","notificationRemoveAll","setItem","stringify","register","createUser"],"mappings":"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","file":"static/js/main.495bf576.chunk.js","sourcesContent":["import React from 'react';\nimport {makeStyles} from '@material-ui/core';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\n\nconst useStyles = makeStyles((theme) => ({\n  grow: {\n    flexGrow: 1,\n    margin: theme.spacing(0),\n  },\n  appBar: {\n    zIndex: 200,\n  },\n  Toolbar: {\n    zIndex: 200,\n  },\n  title: {\n    fontSize: 15,\n    textTransform: 'none',\n    [theme.breakpoints.up('sm')]: {\n      display: 'block',\n    },\n  }\n}));\n\nfunction PrimaryAppBar(props) {\n\n  const classes = useStyles();\n\n  return (\n    <div className={classes.grow}>\n      <AppBar position=\"fixed\" className={classes.appBar}>\n        <Toolbar variant=\"dense\" className={classes.Toolbar}>\n          <Typography variant=\"h4\" noWrap>\n              <Button \n                color=\"inherit\" \n                variant=\"text\"\n                className={classes.title}>\n                  Conmentarium\n              </Button>\n          </Typography>\n          <div className={classes.grow} />\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}\n\nexport default PrimaryAppBar;","import React from 'react';\nimport NavBar from './NavBar';\n\nexport default function Header () {\n  return (\n      <header>\n        <NavBar />\n      </header>\n    )\n}\n","import React, { useState } from 'react';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport TextField from '@material-ui/core/TextField';\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs';\n\nimport CardActions from '@material-ui/core/CardActions';\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\nimport EditIcon from '@material-ui/icons/Edit';\nimport IconButton from '@material-ui/core/IconButton';\nimport NoteIcon from '@material-ui/icons/Note';\nimport DoneIcon from '@material-ui/icons/Done';\nimport { updateNote } from '../../services/note-api';\n\nimport {connect} from 'react-redux';\nimport { error as notificationError, \n  success as notificationSuccess } from 'react-notification-system-redux';\nimport { notificationTemplate } from '../../redux/methods';\nimport { refetchNote } from '../../redux/actions/notebook';\nimport { noteColors } from '../../constants';\nimport PropTypes from 'prop-types';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    '& .MuiTextField-root': {\n      margin: theme.spacing(1),\n      width: '95% ',\n    },\n  },\n  shape: {\n    width: 30,\n    height: 30,\n    margin: theme.spacing(0.5)\n  },\n  shapeCircle: {\n    borderRadius: '25%',\n  },\n  colors: {\n  \tmargin: theme.spacing(1),\n  \t'& > *': {\n      margin: theme.spacing(1),\n    },\n  },\n  card: {\n    display: 'flex',\n    flexDirection: 'column',\n  },\n}));\n\nfunction EditNote(props) {\n\n\tconst { note, handleToggleActions, addNotification, refetchNote } = {...props};\n  const classes = useStyles();\n  const [noteUpdate, setNoteUpdate] = useState(\n  \t{\n      id: note.id,\n  \t\ttitle: note.title, \n  \t\tbody: note.body, \n  \t\tcolor: note.color, \n  \t\ttags: note.tags\n  \t});\n  const [isLoading, setIsLoading] = useState(false);\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    setIsLoading(true);\n    try {\n      // Api Call To Create Note\n      const response = await updateNote(noteUpdate);\n      refetchNote(note.id);\n      // The Request Was Fulffiled And The Note Was updated\n      // So Let's Hide The EditNote Component\n      handleToggleActions(\"toggleDisplay\");\n      // display notification for success\n      addNotification({...notificationTemplate, \n            'title': response.data.message || \"Note updated successfully\", \n          }, notificationSuccess);\n    } catch (error) {\n        addNotification({'title': error.response.data.message || \n          error.request.statusText,\n          'message': `Failed to edit note`,\n        }, notificationError);\n    }\n    setIsLoading(false);\n  }\n\n  const handleColorChange = color => {\n    setNoteUpdate(noteUpdate => ({ ...noteUpdate, color: color }));\n  };\n\n  const handleFieldChange = event => {\n    const { name, value } = event.target;\n    setNoteUpdate(noteUpdate => ({ ...noteUpdate, [name]: value }));\n\t}\n\n  const Circle = (props) => {\n  \tconst { color } = {...props}\n  \treturn (\n  \t\t<div className={clsx(classes.shape, classes.shapeCircle)} \n  \t\t\t\tname=\"color\"\n\t\t\t\t\tstyle={{background: color ? color : 'red'}} \n\t\t\t\t\tonClick={() => handleColorChange(color)} />\n\t\t\t);\n  }\n\nreturn (\n\t<Card className={classes.card} style={{background: noteUpdate.color ? noteUpdate.color : null}}>\n    <form className={classes.root} noValidate autoComplete=\"off\">\n      <div>\n        <TextField\n          id=\"filled-multiline-static\"\n          label=\"Title\"\n          name=\"title\"\n          multiline\n          rowsMax={2}\n          value={noteUpdate.title}\n          onChange={handleFieldChange}\n          variant=\"filled\"\n        />\n        <TextField\n          id=\"filled-multiline-static\"\n          label=\"Body\"\n          name=\"body\"\n          multiline\n          rowsMax={10}\n          value={noteUpdate.body}\n          onChange={handleFieldChange}\n          variant=\"filled\"\n        />\n        <TextField\n          id=\"filled-multiline-static\"\n          label=\"Tags\"\n          name=\"tags\"\n          multiline\n          rowsMax={2}\n          value={noteUpdate.tags}\n          onChange={handleFieldChange}\n          variant=\"filled\"\n        />\n        <div className={classes.colors}>\n\t        Color\n\t        <Breadcrumbs separator=\" \">\n\t\t        {noteColors.map((color) => (\n\t\t        \t\t<Circle color={color} />\n\t\t        \t))\n\t\t        }\n\t        </Breadcrumbs>\n\t      </div>\n      </div>\n    </form>\n\t\t<CardActions>\n\t\t\t<IconButton onClick={() => handleToggleActions(\"toggleDisplay\")}>\n\t\t\t\t<NoteIcon />\n\t\t\t</IconButton>\n\t\t\t<IconButton>\n\t\t\t\t<DeleteForeverIcon />\n\t\t\t</IconButton>\n\t\t\t<IconButton onClick={() => handleToggleActions(\"toggleEdit\")}>\n\t\t\t\t<EditIcon />\n\t\t\t</IconButton>\n      <IconButton onClick={handleSubmit} disabled={isLoading}>\n        <DoneIcon />\n      </IconButton>\n\t\t</CardActions>\n  </Card>\n  );\n}\n\nEditNote.propTypes = {\n  note: PropTypes.object,\n  reloadText: PropTypes.func.isRequired,\n  addNotification: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => {\n  return {\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    refetchNote: id => dispatch(refetchNote(id)),\n    addNotification: (data, level) => dispatch(level(data)),\n  };\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(EditNote);\n","import React, { useState } from 'react';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { truncate } from '../../util/methods';\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\nimport EditIcon from '@material-ui/icons/Edit';\nimport IconButton from '@material-ui/core/IconButton';\nimport NoteIcon from '@material-ui/icons/Note';\nimport LabelIcon from '@material-ui/icons/Label';\nimport EditNote from './EditNote';\n\nconst useStyles = makeStyles((theme) => ({\n  icon: {\n    margin: theme.spacing(1, 1, 0, 0),\n    width: 20,\n    height: 20,\n  },\n  card: {\n    display: 'flex',\n    flexDirection: 'column',\n  },\n  cardContent: {\n    flexGrow: 1,\n  },\n}));\n\nexport default function NoteBookCard(props) {\n\n\tconst { note } = {...props};\n\tconst classes = useStyles();\n\tconst [toggleDisplay, setToggleDisplay] = useState(false);\n\tconst [toggleEdit, setToggleEdit] = useState(false);\n\n\tconst handleToggleActions = (action) => {\n\t\tif(action === \"toggleEdit\") {\n\t\t\tsetToggleEdit(!toggleEdit);\n\t\t\tif(toggleDisplay) {\n\t\t\t\tsetToggleDisplay(false);\n\t\t\t}\n\t\t}\n\t\tif(action === \"toggleDisplay\") {\n\t\t\tsetToggleDisplay(!toggleDisplay);\n\t\t\tif(toggleEdit) {\n\t\t\t\tsetToggleEdit(false);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn (\n\t\t<Grid item key={note.id} xs={12} sm={6} md={4}>\n\t\t\t{!toggleEdit\n\t\t\t\t?\n\t\t\t\t<Card className={classes.card} style={{background: note.color ? note.color : null}}>\n\t\t\t\t\t<CardContent className={classes.cardContent}>\n\t\t\t\t\t\t<Typography gutterBottom \n\t\t\t\t\t\tvariant=\"h6\" \n\t\t\t\t\t\tcomponent=\"h6\">\n\t\t\t\t\t\t{note.title}\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t<Typography>\n\t\t\t\t\t\t{toggleDisplay \n\t\t\t\t\t\t\t?\n\t\t\t\t\t\t\tnote.body\n\t\t\t\t\t\t\t:\n\t\t\t\t\t\t\ttruncate(note.body, 20)\n\t\t\t\t\t\t}\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t<Typography  \n\t\t\t\t\t\tvariant=\"body2\" \n\t\t\t\t\t\tcomponent=\"body2\">\n\t\t\t\t\t\t\t<LabelIcon className={classes.icon} />\n\t\t\t\t\t\t\t{note.tags}\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t</CardContent>\n\t\t\t\t\t<CardActions>\n\t\t\t\t\t\t<IconButton onClick={() => handleToggleActions(\"toggleDisplay\")}>\n\t\t\t\t\t\t\t<NoteIcon />\n\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t\t<IconButton>\n\t\t\t\t\t\t\t<DeleteForeverIcon />\n\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t\t<IconButton onClick={() => handleToggleActions(\"toggleEdit\")}>\n\t\t\t\t\t\t\t<EditIcon />\n\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t</CardActions>\n\t\t\t\t</Card>\n\t\t\t\t:\n\t\t\t\t\t<EditNote note={note} \n\t\t\t\t\t\thandleToggleActions={handleToggleActions} />\n\t\t\t}\n\t\t</Grid>\n\t);\n}","import React from 'react'\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport NoteBookCard from './Note/NoteBookCard';\n\nconst useStyles = makeStyles((theme) => ({\n  icon: {\n    marginRight: theme.spacing(2),\n  },\n  cardGrid: {\n    paddingTop: theme.spacing(2),\n    paddingBottom: theme.spacing(2),\n  },\n  card: {\n    height: '100%',\n    display: 'flex',\n    flexDirection: 'column',\n  },\n  cardContent: {\n    flexGrow: 1,\n  },\n}));\n\nconst Conmentarium = (props) => {\n\n\tconst { notebook } = {...props};\n\tconst classes = useStyles();\n\n\treturn (\n\t\t<React.Fragment>\n\t\t\t{notebook && notebook.length >= 1\n\t\t\t\t?\n\t\t\t\t\t<React.Fragment>\n\t\t\t\t\t\t<Grid container className={classes.cardGrid} spacing={2}>\n\t\t\t\t\t\t\t{notebook.map((note) => (\n\t\t\t\t\t\t\t\t<NoteBookCard note={note} key={note.id}/>\n\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t</React.Fragment>\n\t\t\t\t:\n\t\t\t\t\t<React.Fragment>\n\t\t\t\t\t\t\t<Grid container className={classes.cardGrid} spacing={4}>\n\t\t\t\t\t\t\t\t<Grid item xs={12} sm={6} md={4}>\n\t\t\t\t\t\t\t\t\t<Card className={classes.card}>\n\t\t\t\t\t\t\t\t\t\t<CardContent className={classes.cardContent}>\n\t\t\t\t\t\t\t\t\t\t\t<Typography gutterBottom \n\t\t\t\t\t\t\t\t\t\t\tvariant=\"h6\" \n\t\t\t\t\t\t\t\t\t\t\tcomponent=\"h6\">\n\t\t\t\t\t\t\t\t\t\t\t{\"No notes in this category\"}\n\t\t\t\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t\t\t</CardContent>\n\t\t\t\t\t\t\t\t\t</Card>\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t</React.Fragment>\n\t\t\t}\n\t\t</React.Fragment>\n\t);\n}\n\nexport default Conmentarium;\n","import React, { useState, lazy, useEffect } from 'react';\nimport Conmentarium from '../components/Conmentarium';\nimport Grid from '@material-ui/core/Grid';\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Paper from '@material-ui/core/Paper';\nimport { makeStyles } from '@material-ui/core';\nimport GitHubIcon from '@material-ui/icons/GitHub';\nimport MailIcon from '@material-ui/icons/Mail';\nimport LinkedInIcon from '@material-ui/icons/LinkedIn';\nimport CodeIcon from '@material-ui/icons/Code';\nimport IconButton from '@material-ui/core/IconButton';\nimport WatchLaterIcon from '@material-ui/icons/WatchLater';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport NoteAddIcon from '@material-ui/icons/NoteAdd';\nimport Divider from '@material-ui/core/Divider';\nimport { getNotes } from '../redux/actions/notebook';\nimport { connect } from 'react-redux';\n\nconst SignIn = lazy(() => import('../components/Auth/SignIn'));\nconst SignUp = lazy(() => import('../components/Auth/SignUp'));\nconst AddNote = lazy(() => import('../components/Note/AddNote'));\n\nexport const useStyles = makeStyles((theme) => ({\n  card: {\n    display: \"flex\",\n    margin: theme.spacing(1),\n    boxShadow: 'none !important'\n  },\n  cardDetails: {\n    flex: 1\n  },\n  cardMedia: {\n    minWidth: 160,\n  },\n  a: {\n    textDecoration: 'none',\n    color: theme.palette.secondary.main\n  },\n  divider: {\n    margin: theme.spacing(1, 0, 2, 0),\n  }\n}));\n\nconst mapLazyComponents = {\n  SignIn: SignIn,\n  SignUp: SignUp,\n  Conmentarium: Conmentarium,\n}\n\nconst Home = (props) => {\n\t\n  const { isAuthenticated, notebook, loadNotes } = {...props};\n\tconst classes = useStyles();\n  const [currentAuthOP, setCurrentAuthOP] = useState(\"SignIn\");\n  const [displayAddNoteComponent, setDisplayAddNoteComponent] = useState(false);\n  const AuthComponent = mapLazyComponents[currentAuthOP];\n\n  useEffect(\n    () => {\n      if (isAuthenticated &&\n          !notebook.notebook.length && \n          !notebook.isLoading && \n          !notebook.isError &&\n          notebook.count === 0) loadNotes()\n    }, \n    [isAuthenticated, notebook, loadNotes]\n  );\n\n\treturn (\n\t\t<React.Fragment>\n        {!isAuthenticated\n          ?\n          <React.Fragment>\n            <Grid container component={Paper}>\n              <Grid item xs={12} sm={6} md={6}>\n                <div>\n                  <Card className={classes.card}>\n                    <CardContent>\n                      <Typography \n                        variant=\"h5\" \n                        gutterBottom\n                      >\n                        Conmentarium, a simple notebook for all ideas.\n                      </Typography>\n                      <Typography \n                        variant=\"subtitle2\" \n                        color=\"textSecondary\"\n                        paragraph>\n                        Minimalistic notebook app built with React + Material-UI, and served with Flask. Star, \n                        fork or contribute if you wish so. \n                        <a href=\"https://github.com/MurphyAdam\" \n                          target=\"_blank\"\n                          rel=\"noopener noreferrer\" \n                          className={classes.a}> By: @GitHub/MurphyAdam (Majdi)\n                        </a>\n                      </Typography>\n                      <IconButton \n                        component=\"a\"\n                        title=\"GitHub\" \n                        aria-label=\"GitHub\" \n                        color=\"inherit\"\n                        href=\"https://github.com/MurphyAdam\"\n                        target=\"_blank\"\n                        rel=\"noopener noreferrer\"\n                        >\n                        <GitHubIcon />\n                      </IconButton>\n                      <IconButton \n                        component=\"a\"\n                        title=\"Source code\" \n                        aria-label=\"Source code\" \n                        color=\"inherit\"\n                        href=\"https://github.com/MurphyAdam/Conmentarium\"\n                        target=\"_blank\"\n                        rel=\"noopener noreferrer\"\n                        >\n                        <CodeIcon />\n                      </IconButton>\n                      <IconButton \n                        component=\"a\"\n                        title=\"LinkedIn\" \n                        aria-label=\"LinkedIn\" \n                        color=\"inherit\"\n                        href=\"https://www.linkedin.com/in/majdi-mahfoud-258461198/\"\n                        target=\"_blank\"\n                        rel=\"noopener noreferrer\"\n                        >\n                        <LinkedInIcon />\n                      </IconButton>\n                      <IconButton \n                        component=\"a\"\n                        title=\"Email\" \n                        aria-label=\"Email\" \n                        color=\"inherit\"\n                        href=\"mailto:langandcode@gmail.com\" \n                        target=\"_blank\"\n                        rel=\"noopener noreferrer\"\n                        >\n                        <MailIcon />\n                      </IconButton>\n                    </CardContent>\n                    <CardMedia\n                      className={classes.cardMedia}\n                      image=\"https://res.cloudinary.com/lang-code/image/upload/v1600369514/images/notes_lkh985.png\"\n                      title=\"Conmentarium\"\n                    />\n                  </Card>\n                </div>\n              </Grid>\n              <React.Suspense fallback={'loading...'}>\n                <AuthComponent setCurrentAuthOP={setCurrentAuthOP} />\n              </React.Suspense>\n            </Grid>\n          </React.Fragment>\n          :\n          <React.Fragment>\n            <IconButton onClick={() => setDisplayAddNoteComponent(!displayAddNoteComponent)}>\n              <NoteAddIcon onClick={() => setDisplayAddNoteComponent(!displayAddNoteComponent)}/>\n            </IconButton>\n            <Divider className={classes.divider} />\n            {displayAddNoteComponent &&\n              <React.Fragment>\n                <React.Suspense fallback={'loading...'}>\n                  <AddNote setCurrentAuthOP={setCurrentAuthOP} \n                    setDisplayAddNoteComponent={setDisplayAddNoteComponent} />\n                </React.Suspense>\n                <Divider className={classes.divider} />\n              </React.Fragment>\n            }\n            <WatchLaterIcon />\n            <Conmentarium notebook={notebook.notebook}/>\n            <FavoriteIcon />\n            <Conmentarium notebook={notebook}/>\n            <DeleteIcon />\n            <Conmentarium notebook={[]}/>\n          </React.Fragment>\n        }\n\t\t</React.Fragment>\n\t);\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    isAuthenticated: state.auth.currentUser.authenticated,\n    notebook: state.notebook,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    loadNotes: () => dispatch(getNotes()),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);","import axios from 'axios'; \nimport {getCookie} from '../util/Cookies';\n\n// window origin - base url\nconst origin = window.location.origin;\n\n// Perform a simple handshake with the server to retrieve the\n// _csrf_token and use the it as the axios X-CSRFTOKEN header defaults\n// also set the axios base url to avoid redefinitions across requests\nlet csrftoken;\nlet csrftokenExists;\naxios(`${origin}/api/handshake`).then(response => {\n  if(response) {\n    // get _csrf_token token\n    csrftoken = getCookie('_csrf_token');\n    csrftokenExists = csrftoken ? true : false\n    axios.defaults.baseURL = origin;\n    axios.defaults.headers.common['X-CSRFTOKEN'] = csrftoken;\n  }\n})\n\n\nconst config = {\n  defaultPaletteColors: {\n    primary: {\n      light: '#484848',\n      main: '#212121',\n      dark: '#000000',\n    },\n    secondary: {\n      light: '#ffff6e',\n      main: '#009688',\n      dark: '#009692',\n    },\n  },\n  // these are the tokens required for backend \n  Tokens : {\n    csrf: {\n      exists: csrftokenExists,\n      token: csrftoken\n    }\n  },\n}\n\nexport default config;\n","export function getCookie(name) {\n    var cookieValue = null;\n    if (document.cookie && document.cookie !== '') {\n        var cookies = document.cookie.split(';');\n        for (var i = 0; i < cookies.length; i++) {\n            var cookie = cookies[i].trim();\n            // Does this cookie string begin with the name we want?\n            if (cookie.substring(0, name.length + 1) === (name + '=')) {\n                cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\n                break;\n            }\n        }\n    }\n    return cookieValue;\n}\n\nexport function setCookie(name, value, days) {\n    var expires = \"\";\n    if (days) {\n        var date = new Date();\n        date.setTime(date.getTime() + (days*24*60*60*1000));\n        expires = \"; expires=\" + date.toUTCString();\n    }\n    document.cookie = name + \"=\" + (value || \"\")  + expires + \"; path=/\";\n}\n\nexport function removeCookie(name) {\n    var expires = -1;\n    document.cookie = name + \"=\" + expires + \"; path=/\";\n}","import React, { useEffect } from 'react';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Grid from '@material-ui/core/Grid';\nimport Header from './components/Header/Header';\nimport Home from './containers/Home';\nimport { MuiThemeProvider, createMuiTheme, makeStyles } from '@material-ui/core/styles';\nimport config from './config';\nimport Notifications from 'react-notification-system-redux';\nimport { connect } from 'react-redux';\nimport { getCurrentUser } from './redux/actions/auth';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: \"auto\",\n    marginTop: theme.spacing(10),\n    marginLeft: theme.spacing(3),\n    marginRight: theme.spacing(3),\n    [theme.breakpoints.up(1100 + theme.spacing(3 * 2))]: {\n      width: 1100,\n      marginLeft: \"auto\",\n      marginRight: \"auto\"\n    }\n  },\n}));\n\n//Optional styling\nconst UINotificationsStyle = {\n  NotificationItem: { // Override the notification item\n    DefaultStyle: { // Applied to every notification, regardless of the notification level\n      margin: '5px 5px 2px 1px'\n    },\n  }\n};\n\nfunction App(props) {\n\n  const { loadUser, isAuthenticated, \n    notifications } = {...props};\n  const classes = useStyles();\n  const theme = createMuiTheme({\n    palette: {\n      type: 'light',\n      primary: config.defaultPaletteColors.primary,\n      secondary: config.defaultPaletteColors.secondary,\n      contrastThreshold: 3,\n      tonalOffset: 0.2,\n    },\n    typography: {\n      fontSize: 14,\n    },\n  });\n\n  useEffect(() => {\n    if(!isAuthenticated) loadUser();\n    // eslint-disable-next-line\n  }, [isAuthenticated]);\n\n  return (\n    <MuiThemeProvider theme={theme}>\n      <CssBaseline />\n      <Grid component=\"main\" className={classes.root}>\n        <Header />\n        <Notifications\n          notifications={notifications}\n          style={UINotificationsStyle}\n        />\n        <Home />\n      </Grid>\n    </MuiThemeProvider>\n  );\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    isAuthenticated: state.auth.currentUser.authenticated,\n    notifications: state.notifications,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    loadUser: () => dispatch(getCurrentUser()),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","import { LOAD_CURRENT_USER,\n\tLOAD_CURRENT_USER_SUCCESS,\n\tLOAD_CURRENT_USER_FAILURE, \n\n\tUSER_LOGIN,\n\tUSER_LOGIN_SUCCESS, \n\tUSER_LOGIN_FAILURE,\n\n\tUSER_SIGNUP,\n\tUSER_SIGNUP_SUCCESS,\n\tUSER_SIGNUP_FAILURE,\n\n\tUSER_LOGOUT,\n\tUSER_LOGOUT_SUCCESS,\n\tUSER_LOGOUT_FAILURE,\n\n\tRELOAD_USER_SUCCESS\n\t } from '../constants/auth';\n\n\nconst INITIAL_STATE = {\n\tcurrentUser: {\n\t\tauthenticated: false,\n\t\tuser: null,\n\t\tfresh: false,\n\t\tisLoading: false,\n\t\tisLoaded: false,\n\t\tisError: false,\n\t\terrors: [],\n\t\terror: ''\n\t},\n\tuserSubject: {\n\t\tsuccess: false,\n\t\tisLoading: false,\n\t\tisLoaded: false,\n\t\tisError: false,\n\t\terrors: [],\n\t\terror: ''\n\t}\n};\n\nfunction auth(state=INITIAL_STATE, action) {\n\n\tswitch (action.type){\n\n\t\tcase LOAD_CURRENT_USER: {\n\t\t\treturn {...state, \n\t\t\t\tcurrentUser: {...INITIAL_STATE.currentUser, \n\t\t\t\t\tisLoading: true\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tcase LOAD_CURRENT_USER_SUCCESS: {\n\t\t\treturn {...state, \n\t\t\t\tcurrentUser: {...state.currentUser,\n\t\t\t\t\tauthenticated: true, \n\t\t\t\t\tuser: action.payload.user,\n\t\t\t\t\tisLoaded: true, \n\t\t\t\t\tisLoading: false, \n\t\t\t\t\tfresh: true,\n\t\t\t\t\tisError: false,\n\t\t\t\t\terrors: []\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tcase LOAD_CURRENT_USER_FAILURE: {\n\t\t\treturn {...state, \n\t\t\t\tcurrentUser: {...INITIAL_STATE.currentUser,\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tcase RELOAD_USER_SUCCESS: {\n\t\t\treturn {...state, \n\t\t\t\tcurrentUser: {...state.currentUser,\n\t\t\t\t\tauthenticated: true, \n\t\t\t\t\tuser: action.payload.currentUser,\n\t\t\t\t\tisLoaded: true, \n\t\t\t\t\tisLoading: false, \n\t\t\t\t\tfresh: true,\n\t\t\t\t\tisError: false,\n\t\t\t\t\terrors: []\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tcase USER_LOGIN: {\n\t\t\treturn {...state, \n\t\t\t\tcurrentUser: {...state.currentUser, \n\t\t\t\t\tisLoading: true, \n\t\t\t\t\tisLoaded: false,\n\t\t\t\t\tfresh: false,\n\t\t\t\t\tisError: false,\n\t\t\t\t\terror: '',\n\t\t\t\t\terrors: []\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tcase USER_LOGIN_SUCCESS: {\n\t\t\treturn {...state, \n\t\t\t\tcurrentUser: {...state.currentUser,\n\t\t\t\t\tauthenticated: true, \n\t\t\t\t\tuser: action.payload.user,\n\t\t\t\t\tisLoaded: true, \n\t\t\t\t\tisLoading: false, \n\t\t\t\t\tfresh: true,\n\t\t\t\t\tisError: false,\n\t\t\t\t\terrors: []\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tcase USER_LOGIN_FAILURE: {\n\t\t\treturn {...state, \n\t\t\t\tcurrentUser: {...state.currentUser,\n\t\t\t\t\tauthenticated: false, \n\t\t\t\t\tuser: null,\n\t\t\t\t\tisLoaded: true, \n\t\t\t\t\tisLoading: false, \n\t\t\t\t\tfresh: false,\n\t\t\t\t\tisError: true,\n\t\t\t\t\terrors: action.payload.response?.data?.errors || [],\n\t\t\t\t\terror: action.payload.request.statusText || action.payload.message\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tcase USER_SIGNUP: {\n\t\t\treturn {...state, \n\t\t\t\tuserSubject: {...INITIAL_STATE.userSubject, \n\t\t\t\t\tisLoading: true, \n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tcase USER_SIGNUP_SUCCESS: {\n\t\t\treturn {...state, \n\t\t\t\tuserSubject: {...INITIAL_STATE.userSubject,\n\t\t\t\t\tsuccess: true,\n\t\t\t\t\tisLoaded: true, \n\t\t\t\t\tisLoading: false, \n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tcase USER_SIGNUP_FAILURE: {\n\t\t\treturn {...state, \n\t\t\t\tuserSubject: {...INITIAL_STATE.userSubject,\n\t\t\t\t\tsuccess: false, \n\t\t\t\t\tisLoaded: true, \n\t\t\t\t\tisLoading: false, \n\t\t\t\t\tisError: true,\n\t\t\t\t\terrors: action.payload.response?.data?.errors || [],\n\t\t\t\t\terror: action.payload?.request?.statusText || action.payload?.message\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tcase USER_LOGOUT: {\n\t\t\treturn {...state, \n\t\t\t\tcurrentUser: {...state.currentUser, \n\t\t\t\t\tisLoading: true, \n\t\t\t\t\tisLoaded: false,\n\t\t\t\t\tfresh: false,\n\t\t\t\t\tisError: false\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tcase USER_LOGOUT_SUCCESS: {\n\t\t\treturn {...INITIAL_STATE,\n\t\t\t\tcurrentUser:{...INITIAL_STATE.currentUser, \n\t\t\t\t\tauthenticated: false,\n\t\t\t\t\tuser: null\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tcase USER_LOGOUT_FAILURE: {\n\t\t\treturn {...INITIAL_STATE,\n\t\t\t\tcurrentUser:{...INITIAL_STATE.currentUser, \n\t\t\t\t\tauthenticated: false,\n\t\t\t\t\tuser: null\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}\n\nexport default auth;","import { FETCH_NOTE,\n\tFETCH_NOTE_SUCCESS, \n\tFETCH_NOTE_FAILURE,\n\tREFETCH_NOTE_SUCCESS,\n\tDELETE_NOTE,\n\tDELETE_NOTE_SUCCESS,\n\tDELETE_NOTE_FAILURE,\n\t } from '../constants/notebook';\nimport { INITIATE_AUTH_CLEANUP } from '../constants/auth';\nimport { removeItemFromArray } from '../methods';\n\nconst INITIAL_STATE = {\n\t\tnotebook: [],\n\t\tcount: 0,\n\t\tisLoading: false,\n\t\tisLoaded: false,\n\t\tisError: false,\n\t\terror: ''\n};\n\nfunction notebook(state=INITIAL_STATE, action) {\n\n\tswitch (action.type){\n\t\tcase FETCH_NOTE: {\n\t\t\treturn {...INITIAL_STATE, \n\t\t\t\t\tisLoading: true\n\t\t\t\t}\n\t\t\t}\n\t\tcase FETCH_NOTE_SUCCESS: {\n\t\t\treturn {...state,\n\t\t\t\t\tnotebook: action.payload?.notes,\n\t\t\t\t\tcount: (action.payload?.notebook || []).length,\n\t\t\t\t\tisLoading: false,\n\t\t\t\t\tisLoaded: true, \n\t\t\t\t\tisError: false, \n\t\t\t\t\terror: ''\n\n\t\t\t\t}\n\t\t\t}\n\t\tcase FETCH_NOTE_FAILURE: {\n\t\t\treturn {...state, \n\t\t\t\t\tisLoading: false,\n\t\t\t\t\tisLoaded: true, \n\t\t\t\t\tisError: true, \n\t\t\t\t\terror: ''\n\n\t\t\t\t}\n\t\t\t}\n\t\tcase REFETCH_NOTE_SUCCESS: {\n\t\t\treturn {...state, \n\t\t\t\t\tnotebook: action.payload?.notes || state.notebook,\n\t\t\t\t\tcount: (action.payload?.notes || state.notebook).length,\n\t\t\t}\n\t\t}\n\t\tcase DELETE_NOTE: {\n\t\t\treturn {...INITIAL_STATE, \n\t\t\t\t\tisLoading: true\n\t\t\t\t}\n\t\t\t}\n\t\tcase DELETE_NOTE_SUCCESS: {\n\t\t\treturn {...state,\n\t\t\t\t\tnotebook: removeItemFromArray(state.notebook, action.payload?.note_id),\n\t\t\t\t\tcount: (action.payload?.notebook || []).length,\n\t\t\t\t\tisLoading: false,\n\t\t\t\t\tisLoaded: true, \n\t\t\t\t\tisError: false, \n\t\t\t\t\terror: ''\n\n\t\t\t\t}\n\t\t\t}\n\t\tcase DELETE_NOTE_FAILURE: {\n\t\t\treturn {...state, \n\t\t\t\t\tisLoading: false,\n\t\t\t\t\tisLoaded: true, \n\t\t\t\t\tisError: true, \n\t\t\t\t\terror: ''\n\n\t\t\t\t}\n\t\t\t}\n\t\tcase INITIATE_AUTH_CLEANUP: {\n\t\t\treturn INITIAL_STATE\n\t\t}\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}\n\nexport default notebook;\n","import { combineReducers } from 'redux';\nimport auth from './auth';\nimport notebook from './notebook';\nimport {reducer as notifications } from 'react-notification-system-redux';\n\nconst rootReducer = combineReducers({auth, notebook, notifications});\n\nexport default rootReducer;","import { createStore, compose, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport logger from 'redux-logger';\nimport rootReducer from './reducers';\n\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(rootReducer, composeEnhancer(applyMiddleware(thunk, logger)));\nexport default store;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\nimport * as serviceWorker from './serviceWorker';\n\nconst rootElement = document.getElementById(\"root\");\n\nReactDOM.render(\n\t<Provider store={store}>\n\t\t<App />\n\t</Provider>,\n\t rootElement);\n\nserviceWorker.unregister();\n","export const SET_APP_THEME = 'SET_APP_THEME';\n\n\nexport const FETCH_NOTE = 'FETCH_NOTE';\nexport const FETCH_NOTE_SUCCESS = 'FETCH_NOTE_SUCCESS';\nexport const FETCH_NOTE_FAILURE = 'FETCH_NOTE_FAILURE';\n\nexport const REFETCH_NOTE = 'REFETCH_NOTE';\nexport const REFETCH_NOTE_SUCCESS = 'REFETCH_NOTE_SUCCESS';\nexport const REFETCH_NOTE_FAILURE = 'REFETCH_NOTE_FAILURE';\n\nexport const FETCH_PAGINATED_NOTES = 'FETCH_PAGINATED_NOTES';\nexport const FETCH_PAGINATED_NOTES_SUCCESS = 'FETCH_PAGINATED_NOTES_SUCCESS';\nexport const FETCH_PAGINATED_NOTES_FAILURE = 'FETCH_PAGINATED_NOTES_FAILURE';\n\n\nexport const DELETE_NOTE = 'DELETE_NOTE';\nexport const DELETE_NOTE_SUCCESS = 'DELETE_NOTE_SUCCESS';\nexport const DELETE_NOTE_FAILURE = 'DELETE_NOTE_FAILURE';\n\n\nexport const ACTIONS = {\n\tSET_APP_THEME,\n\tFETCH_NOTE,\n\tFETCH_NOTE_SUCCESS,\n\tFETCH_NOTE_FAILURE,\n\tFETCH_PAGINATED_NOTES,\n\tFETCH_PAGINATED_NOTES_SUCCESS,\n\tFETCH_PAGINATED_NOTES_FAILURE,\n\tDELETE_NOTE,\n\tDELETE_NOTE_SUCCESS,\n\tDELETE_NOTE_FAILURE,\n};","import React from \"react\";\n// react must be in scope for notificationTemplate's renderArray method\n// which includes jsx\n\nexport function updateItemInArray(array, newItem) {\n    let items = array.filter(item => item.id !== newItem.id );\n    items = [...items, newItem].sort( (a, b) => a.id-b.id);\n    return items;\n}\n\nexport function removeItemFromArray(array, itemId) {\n\treturn array.filter(item => item.id !== itemId)\n}\n\nexport function addObjectToArray(array, newItem) {\n\tconst checkIfExist = array.find( item => item.id !== newItem.id );\n\tif(checkIfExist){\n\t\treturn updateItemInArray(array, newItem)\n\t}\n\telse {\n\t\tconst newArray = [...array, newItem]\n\t\treturn newArray\n\t}\n}\n\nexport function updateObjectInArrayWithId(array, newItem) {\n\treturn array.map(item => {\n\t\tif (item.id !== newItem.id) {\n\t\t\t// This isn't the item we care about - keep it as-is\n\t\t\treturn item\n\t\t\t}\n\t\t// Otherwise, this is the one we want - return an updated value\n\t\treturn {\n\t\t...item,\n\t\t...newItem\n\t\t}\n\t})\n}\n\nexport function filterArrayWithId(array, itemId) {\n\treturn array.filter(item => {\n\t\tif (item.id !== itemId) {\n\t\t\t// This isn't the item we care about - keep it as-is\n\t\t\treturn item\n\t\t\t}\n\t\treturn false\n\t})\n}\n\nexport function filterArrayWithName(array, itemId) {\n\treturn array.filter(item => {\n\t\tif (item.name !== itemId) {\n\t\t\t// This isn't the item we care about - keep it as-is\n\t\t\treturn item\n\t\t\t}\n\t\treturn false\n\t})\n}\n\nexport function updateObjectInArrayWithName(array, newItem) {\n\treturn array.map(item => {\n\t\tif (item.name !== newItem.name) {\n\t\t\t// This isn't the item we care about - keep it as-is\n\t\t\treturn item\n\t\t\t}\n\t\t// Otherwise, this is the one we want - return an updated value\n\t\treturn {\n\t\t...item,\n\t\t...newItem\n\t\t}\n\t})\n}\n\nexport function concatArrayOfObjectsAndSortWithDateAsc(array, newArrayOfObjects=[]) {\n\tconst newArray = [...array, ...newArrayOfObjects]\n\tnewArray.sort(function(a, b) {\n\t\tif(a.date_updated && b.date_updated) {\n\t\t\treturn new Date(b.date_updated) - new Date(a.date_updated)\n\t\t}\n\t\telse if(a.date_created && b.date_created) {\n\t\t\treturn new Date(b.date_created) - new Date(a.date_created)\n\t\t}\n\t\telse if(a.date && b.date) {\n\t\t\treturn new Date(b.date) - new Date(a.date)\n\t\t}\n\t\telse {\n\t\t\treturn a - b\n\t\t}\n\t})\n\treturn newArray\n}\n\nexport function concatArrayOfObjectsAndSortWithDateDesc(array, newArrayOfObjects=[]) {\n\tconst newArray = [...array, ...newArrayOfObjects]\n\tnewArray.sort(function(a, b) {\n\t\tif(a.date_updated && b.date_updated) {\n\t\t\treturn new Date(a.date_updated) - new Date(b.date_updated)\n\t\t}\n\t\telse if(a.date_created && b.date_created) {\n\t\t\treturn new Date(a.date_created) - new Date(b.date_created)\n\t\t}\n\t\telse if(a.date && b.date) {\n\t\t\treturn new Date(a.date) - new Date(b.date)\n\t\t}\n\t\telse {\n\t\t\treturn a - b\n\t\t}\n\t})\n\treturn newArray\n}\n\nexport const notificationTemplate = {\n  title: '',\n  message: '',\n  position: 'bc',\n  autoDismiss: 2,\n  renderArray: (arr=[]) => (\n    <ul>\n      {arr.map(el => (\n        <li>{el}</li>\n      ))}\n    </ul>\n    ),\n};","import axios from 'axios';\n\nexport const fetchNotebook = () => axios.get('/api/notebook');\nexport const fetchPaginatedNotebook = page => axios.get(`/api/notebook/paginated?page=${page}`);\nexport const fetchNote = id => axios.get(`/api/notebook/${id}`);\nexport const createNote = formData => axios.post(`/api/notebook`, {...formData});\nexport const updateNote = formData => axios.put(`/api/notebook/${formData.id}`, {...formData});\nexport const deleteNote = id => axios.delete(`/api/notebook/${id}`);\n","import {\n\tFETCH_NOTE,\n\tFETCH_NOTE_SUCCESS,\n\tFETCH_NOTE_FAILURE,\n\tREFETCH_NOTE,\n\tREFETCH_NOTE_SUCCESS,\n\tREFETCH_NOTE_FAILURE,\n} from '../constants/notebook';\nimport { error as notificationError } from 'react-notification-system-redux';\nimport { fetchNotebook, fetchNote } from '../../services/note-api';\nimport { concatArrayOfObjectsAndSortWithDateAsc } from '../methods';\n\nconst ActionCreatorFactory = (type, payload=null) => {\n\treturn {\n\t\ttype: type,\n\t\tpayload: payload\n\t}\n}\n\nconst fetchNotes = page => ActionCreatorFactory(FETCH_NOTE);\nconst fetchNotesSuccess = data => ActionCreatorFactory(FETCH_NOTE_SUCCESS, data);\nconst fetchNotesError = error => ActionCreatorFactory(FETCH_NOTE_FAILURE, error);\n\nconst refetchNotes = page => ActionCreatorFactory(REFETCH_NOTE);\nconst refetchNotesSuccess = data => ActionCreatorFactory(REFETCH_NOTE_SUCCESS, data);\nconst refetchNotesError = error => ActionCreatorFactory(REFETCH_NOTE_FAILURE, error);\n\nexport function getNotes() {\n\treturn (dispatch, getState) => {\n\t\tdispatch(fetchNotes());\n\t\tfetchNotebook()\n\t\t.then((response) => {\n\t\t\tif (response.status !== 200) {\n\t\t\t\tdispatch(fetchNotesError(response));\n\t\t\t}\n\t\t\treturn response;\n\t\t})\n\t\t.then((response) => {\n\t\t\tconst notes = concatArrayOfObjectsAndSortWithDateAsc(response.data.notes);\n\t\t\tdispatch(fetchNotesSuccess({notes}))\n\t\t})\n\t\t.catch((error) => {\n\t\t\tconsole.log(\"error =>\", error)\n\t\t\tdispatch(fetchNotesError(error));\n\t\t\tdispatch(notificationError({'title': error.response.data.message || \n\t\t\t\terror.request.statusText,\n\t\t\t\t'message': `Failed to load notebooks`,\n\t\t\t}));\n\t\t})\n\t};\n}\n\nexport const setNote = (note) => {\n\treturn (dispatch, getState) => {\n\t\tif(note) {\n\t\t\tlet notes = getState().notebook.notebook;\n\t\t\tnotes = concatArrayOfObjectsAndSortWithDateAsc(notes, [note])\n\t\t\tdispatch(fetchNotesSuccess({notes}));\n\t\t\treturn;\n\t\t}\n\t}\n}\n\nexport const refetchNote = id => {\n\treturn (dispatch, getState) => {\n\t\tlet notes = getState().notebook.notebook.filter( note => note.id !== id );\n\t\tdispatch(refetchNotes());\n\t\tfetchNote(id)\n\t\t.then((response) => {\n\t\t\tif (response.status !== 200) {\n\t\t\t\tdispatch(refetchNotesError(response));\n\t\t\t}\n\t\t\treturn response;\n\t\t})\n\t\t.then((response) => {\n\t\t\tnotes = concatArrayOfObjectsAndSortWithDateAsc(notes, [response.data?.note])\n\t\t\tdispatch(refetchNotesSuccess({notes}));\n\t\t})\n\t\t.catch((error) => {\n\t\t\tdispatch(refetchNotesError(error));\n\t\t\tdispatch(notificationError({'title': error.response.data.message || \n\t\t\t\terror.request.statusText,\n\t\t\t\t'message': `Failed to refetch note`,\n\t\t\t}));\n\t\t})\n\t}\n}\n","export const range = (start, stop, step=1) => \nArray.from({ length: (stop - start) / step }, (_, i) => start + (i * step));\n\nexport const truncate = (what, length=100) => \n  what !== null && what !== undefined \n  \t&& (what.length < length) ? what : what.substring(0, length) + '..';\n\nexport const changeDocumentTitle = title => window.document.title = title;\n","import { LOAD_CURRENT_USER,\n\tLOAD_CURRENT_USER_SUCCESS,\n\tLOAD_CURRENT_USER_FAILURE, \n\n\tUSER_LOGIN,\n\tUSER_LOGIN_SUCCESS, \n\tUSER_LOGIN_FAILURE,\n\n\tUSER_SIGNUP,\n\tUSER_SIGNUP_SUCCESS,\n\tUSER_SIGNUP_FAILURE,\n\n\tUSER_LOGOUT,\n\tUSER_LOGOUT_SUCCESS,\n\tUSER_LOGOUT_FAILURE,\n\n\tINITIATE_AUTH_CLEANUP } from '../constants/auth';\n\nimport { login, createUser, logoutCurrentUser, fetchCurrentUser } from '../../services/auth-api';\nimport { error as notificationError, \nremoveAll as notificationRemoveAll } from 'react-notification-system-redux';\nimport { notificationTemplate } from '../methods';\n\n\nconst ActionCreatorFactory = (type, payload=null) => {\n\treturn {\n\t\ttype: type,\n\t\tpayload: payload\n\t}\n}\n\nconst loadUserRequest = () => ActionCreatorFactory(LOAD_CURRENT_USER);\nconst loadUserSuccess = data => ActionCreatorFactory(LOAD_CURRENT_USER_SUCCESS, data);\nconst loadUserError = () => ActionCreatorFactory(LOAD_CURRENT_USER_FAILURE);\n\nconst userLoginRequest = () => \tActionCreatorFactory(USER_LOGIN);\nconst userLoginSuccess = data => ActionCreatorFactory(USER_LOGIN_SUCCESS, data);\nconst userLoginError = error => ActionCreatorFactory(USER_LOGIN_FAILURE, error);\n\nconst userSignupRequest = () => ActionCreatorFactory(USER_SIGNUP);\nconst userSignupSuccess = data => ActionCreatorFactory(USER_SIGNUP_SUCCESS, data);\nconst userSignupError = error => ActionCreatorFactory(USER_SIGNUP_FAILURE, error);\n\nconst userLogoutRequest = () => ActionCreatorFactory(USER_LOGOUT);\nconst userLogoutError = error => ActionCreatorFactory(USER_LOGOUT_FAILURE, error);\nconst userLogoutSuccess = data => ActionCreatorFactory(USER_LOGOUT_SUCCESS, data);\n\nconst initiateAuthCleanup = () => ActionCreatorFactory(INITIATE_AUTH_CLEANUP);\n\nexport function getCurrentUser(){\n\treturn (dispatch) => {\n\t\tconst currentUserId = JSON.parse(localStorage.getItem('currentUser'));\n\t\tif (currentUserId !== null && \n\t\t\tcurrentUserId !== undefined && \n\t\t\t!isNaN(parseInt(currentUserId))\n\t\t\t) {\n\t\t\tdispatch(loadUserRequest());\n\t\t\tfetchCurrentUser(currentUserId)\n\t\t\t.then((response) => {\n\t\t\t\tif (response.status !== 200) {\n\t\t\t\t\tdispatch(loadUserError());\n\t\t\t\t}\n\t\t\t\treturn response\n\t\t\t})\n\t\t\t.then((response) => {\n\t\t\t\tdispatch(loadUserSuccess(response.data));\n\t\t\t\tdispatch(initiateAuthCleanup());\n\t\t\t})\n\t\t\t.catch(() => {\n\t\t\t\tdispatch(loadUserError());\n\t\t\t})\n\n\t\t}\n\t};\n}\n\nexport function authenticate(formData) {\n\treturn (dispatch) => {\n\t\tdispatch(userLoginRequest());\n\t\tlogin(formData)\n\t\t.then((response) => {\n\t\t\tif (response.status !== 200) {\n\t\t\t\tdispatch(userLoginError(response));\n\t\t\t}\n\t\t\treturn response;\n\t\t})\n\t\t.then((response) => {\n\t\t\tdispatch(userLoginSuccess(response.data));\n\t\t\tdispatch(initiateAuthCleanup());\n\t\t\tdispatch(notificationRemoveAll());\n\t\t\tlocalStorage.setItem('currentUser', JSON.stringify(response.data.user.id));\n\t\t})\n\t\t.catch((error) => {\n\t\t\tdispatch(userLoginError(error));\n\t\t\tdispatch(notificationError({'title': error.response.data.message || \n\t\t\t\terror.request.statusText,\n\t\t\t\t'message': `Failed to sign in`,\n\t\t\t\t'children': notificationTemplate.renderArray(error.response?.data?.errors),\n\t\t\t}));\n\t\t})\n\t};\n}\n\nexport function register(formData) {\n\treturn (dispatch) => {\n\t\tdispatch(userSignupRequest());\n\t\tcreateUser(formData)\n\t\t.then((response) => {\n\t\t\tif (response.status !== 200) {\n\t\t\t\tdispatch(userSignupError(response));\n\t\t\t}\n\t\t\treturn response;\n\t\t})\n\t\t.then((response) => {\n\t\t\tdispatch(userSignupSuccess(response.data));\n\t\t\tdispatch(notificationRemoveAll());\n\t\t})\n\t\t.catch((error) => {\n\t\t\tdispatch(userSignupError(error));\n\t\t\tdispatch(notificationError({'title': error.response.data.message || \n\t\t\t\terror.request.statusText,\n\t\t\t\t'message': `Failed to sign up`,\n\t\t\t\t'children': notificationTemplate.renderArray(error.response?.data?.errors),\n\t\t\t}));\n\t\t})\n\t};\n}\n\nexport function logout() {\n\treturn (dispatch) => {\n\t\tdispatch(userLogoutRequest());\n\t\tlocalStorage.removeItem('currentUser');\n\t\tlogoutCurrentUser()\n\t\t.then((response) => {\n\t\t\tif (response.status !== 200) {\n\t\t\t\tdispatch(userLogoutError(response));\n\t\t\t}\n\t\t\treturn response;\n\t\t})\n\t\t.then((response) => {\n\t\t\tdispatch(userLogoutSuccess(response.data));\n\t\t\tdispatch(notificationRemoveAll());\n\t\t\tdispatch(initiateAuthCleanup());\n\t\t})\n\t\t.catch((error) => {\n\t\t\tdispatch(userLogoutError(error));\n\t\t\tdispatch(notificationError({'title': error.response.data.message || \n\t\t\t\terror.request.statusText,\n\t\t\t\t'message': `Failed to sign up`,\n\t\t\t}));\n\t\t})\n\t};\n}\n","import axios from 'axios';\n\nexport const fetchUser = id => axios.get(`/api/users/${id}`);\nexport const fetchCurrentUser = userId => axios(`/api/auth/current_user/${userId}`);\nexport const createUser = formData => axios.post(`/api/auth/signup`, {...formData});\nexport const login = formData => axios.post(`/api/auth/signin`, {...formData});\nexport const logoutCurrentUser = () => axios.get(`/api/auth/logout`);\n","\nconst noteColors = [\n\t\"rgb(76 175 80 / 22%)\",\n\t\"rgb(156 39 176 / 33%)\",\n\t\"rgb(233 30 99 / 53%)\",\n\t\"rgb(0 150 136 / 35%)\",\n\t\"#ff572275\",\n\t\"rgb(33 150 243 / 34%)\",\n\t\"#ffeb3b4d\",\n  \"rgb(103 58 183 / 45%)\"\n];\n\nexport { noteColors };","export const USER_LOGIN = 'USER_LOGIN';\nexport const USER_LOGIN_SUCCESS = 'USER_LOGIN_SUCCESS';\nexport const USER_LOGIN_FAILURE = 'USER_LOGIN_FAILURE';\n\nexport const USER_SIGNUP = 'USER_SIGNUP';\nexport const USER_SIGNUP_SUCCESS = 'USER_SIGNUP_SUCCESS';\nexport const USER_SIGNUP_FAILURE = 'USER_SIGNUP_FAILURE';\n\nexport const LOAD_CURRENT_USER = 'LOAD_CURRENT_USER';\nexport const LOAD_CURRENT_USER_SUCCESS = 'LOAD_CURRENT_USER_SUCCESS';\nexport const LOAD_CURRENT_USER_FAILURE = 'LOAD_CURRENT_USER_FAILURE';\n\nexport const USER_LOGOUT = 'USER_LOGOUT';\nexport const USER_LOGOUT_SUCCESS = 'USER_LOGOUT_SUCCESS';\nexport const USER_LOGOUT_FAILURE = 'USER_LOGOUT_FAILURE';\n\nexport const RELOAD_USER = 'RELOAD_USER';\nexport const RELOAD_USER_SUCCESS = 'RELOAD_USER_SUCCESS';\nexport const RELOAD_USER_FAILURE = 'RELOAD_USER_FAILURE';\n\nexport const INITIATE_AUTH_CLEANUP = 'INITIATE_AUTH_CLEANUP';\n\nexport const ACTIONS = {\n\tUSER_LOGIN,\n\tUSER_LOGIN_SUCCESS,\n\tUSER_LOGIN_FAILURE,\n\tLOAD_CURRENT_USER,\n\tLOAD_CURRENT_USER_SUCCESS,\n\tLOAD_CURRENT_USER_FAILURE,\n\tUSER_SIGNUP,\n\tUSER_SIGNUP_SUCCESS,\n\tUSER_SIGNUP_FAILURE,\n\tUSER_LOGOUT,\n\tUSER_LOGOUT_SUCCESS,\n\tUSER_LOGOUT_FAILURE,\n\tINITIATE_AUTH_CLEANUP,\n\tRELOAD_USER,\n\tRELOAD_USER_SUCCESS,\n\tRELOAD_USER_FAILURE,\n};"],"sourceRoot":""}